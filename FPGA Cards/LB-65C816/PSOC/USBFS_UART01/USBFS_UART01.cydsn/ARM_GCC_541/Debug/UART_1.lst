ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_1_initVar
  20              		.bss
  21              		.type	UART_1_initVar, %object
  22              		.size	UART_1_initVar, 1
  23              	UART_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.UART_1_Start,"ax",%progbits
  26              		.align	2
  27              		.global	UART_1_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	UART_1_Start, %function
  31              	UART_1_Start:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\UART_1.c"
   1:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC4/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART_1.c **** *
   5:Generated_Source\PSoC4/UART_1.c **** * Description:
   6:Generated_Source\PSoC4/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/UART_1.c **** *
   8:Generated_Source\PSoC4/UART_1.c **** * Note:
   9:Generated_Source\PSoC4/UART_1.c **** *
  10:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC4/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/UART_1.c **** 
  17:Generated_Source\PSoC4/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC4/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/UART_1.c **** 
  22:Generated_Source\PSoC4/UART_1.c **** 
  23:Generated_Source\PSoC4/UART_1.c **** /***************************************
  24:Generated_Source\PSoC4/UART_1.c **** * Global data allocation
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 2


  25:Generated_Source\PSoC4/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC4/UART_1.c **** 
  27:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC4/UART_1.c **** 
  29:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC4/UART_1.c **** 
  35:Generated_Source\PSoC4/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC4/UART_1.c **** 
  48:Generated_Source\PSoC4/UART_1.c **** 
  49:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC4/UART_1.c **** *
  53:Generated_Source\PSoC4/UART_1.c **** * Summary:
  54:Generated_Source\PSoC4/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC4/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC4/UART_1.c **** *
  59:Generated_Source\PSoC4/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC4/UART_1.c **** *  None.
  61:Generated_Source\PSoC4/UART_1.c **** *
  62:Generated_Source\PSoC4/UART_1.c **** * Return:
  63:Generated_Source\PSoC4/UART_1.c **** *  None.
  64:Generated_Source\PSoC4/UART_1.c **** *
  65:Generated_Source\PSoC4/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC4/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC4/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC4/UART_1.c **** *
  72:Generated_Source\PSoC4/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC4/UART_1.c **** *  No.
  74:Generated_Source\PSoC4/UART_1.c **** *
  75:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC4/UART_1.c **** {
  34              		.loc 1 77 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 3


  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC4/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/UART_1.c ****     if(UART_1_initVar == 0u)
  44              		.loc 1 79 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC4/UART_1.c ****     {
  81:Generated_Source\PSoC4/UART_1.c ****         UART_1_Init();
  49              		.loc 1 81 0
  50 000c FFF7FEFF 		bl	UART_1_Init
  82:Generated_Source\PSoC4/UART_1.c ****         UART_1_initVar = 1u;
  51              		.loc 1 82 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  83:Generated_Source\PSoC4/UART_1.c ****     }
  84:Generated_Source\PSoC4/UART_1.c **** 
  85:Generated_Source\PSoC4/UART_1.c ****     UART_1_Enable();
  56              		.loc 1 85 0
  57 0016 FFF7FEFF 		bl	UART_1_Enable
  86:Generated_Source\PSoC4/UART_1.c **** }
  58              		.loc 1 86 0
  59 001a C046     		nop
  60 001c BD46     		mov	sp, r7
  61              		@ sp needed
  62 001e 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0020 00000000 		.word	UART_1_initVar
  67              		.cfi_endproc
  68              	.LFE1:
  69              		.size	UART_1_Start, .-UART_1_Start
  70              		.section	.text.UART_1_Init,"ax",%progbits
  71              		.align	2
  72              		.global	UART_1_Init
  73              		.code	16
  74              		.thumb_func
  75              		.type	UART_1_Init, %function
  76              	UART_1_Init:
  77              	.LFB2:
  87:Generated_Source\PSoC4/UART_1.c **** 
  88:Generated_Source\PSoC4/UART_1.c **** 
  89:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC4/UART_1.c **** *
  93:Generated_Source\PSoC4/UART_1.c **** * Summary:
  94:Generated_Source\PSoC4/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 4


  95:Generated_Source\PSoC4/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC4/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/UART_1.c **** *
  99:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC4/UART_1.c **** *  None.
 101:Generated_Source\PSoC4/UART_1.c **** *
 102:Generated_Source\PSoC4/UART_1.c **** * Return:
 103:Generated_Source\PSoC4/UART_1.c **** *  None.
 104:Generated_Source\PSoC4/UART_1.c **** *
 105:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC4/UART_1.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC4/UART_1.c **** 
 110:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC4/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/UART_1.c **** 
 117:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/UART_1.c **** 
 123:Generated_Source\PSoC4/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  88              		.loc 1 124 0
  89 0004 084B     		ldr	r3, .L6
  90 0006 7222     		movs	r2, #114
  91 0008 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  92              		.loc 1 126 0
  93 000a 084B     		ldr	r3, .L6+4
  94 000c 2022     		movs	r2, #32
  95 000e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC4/UART_1.c **** 
 129:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC4/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 5


 134:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/UART_1.c **** 
 136:Generated_Source\PSoC4/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  96              		.loc 1 138 0
  97 0010 074B     		ldr	r3, .L6+8
  98 0012 0622     		movs	r2, #6
  99 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 100              		.loc 1 139 0
 101 0016 074B     		ldr	r3, .L6+12
 102 0018 4722     		movs	r2, #71
 103 001a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/UART_1.c ****         #else
 142:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/UART_1.c **** 
 146:Generated_Source\PSoC4/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/UART_1.c ****         #else
 150:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 104              		.loc 1 150 0
 105 001c 064B     		ldr	r3, .L6+16
 106 001e 0022     		movs	r2, #0
 107 0020 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC4/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/UART_1.c **** 
 153:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC4/UART_1.c **** 
 155:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC4/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/UART_1.c **** }
 108              		.loc 1 160 0
 109 0022 C046     		nop
 110 0024 BD46     		mov	sp, r7
 111              		@ sp needed
 112 0026 80BD     		pop	{r7, pc}
 113              	.L7:
 114              		.align	2
 115              	.L6:
 116 0028 81000F40 		.word	1074724993
 117 002c 82000F40 		.word	1074724994
 118 0030 21000F40 		.word	1074724897
 119 0034 31000F40 		.word	1074724913
 120 0038 84000F40 		.word	1074724996
 121              		.cfi_endproc
 122              	.LFE2:
 123              		.size	UART_1_Init, .-UART_1_Init
 124              		.section	.text.UART_1_Enable,"ax",%progbits
 125              		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 6


 126              		.global	UART_1_Enable
 127              		.code	16
 128              		.thumb_func
 129              		.type	UART_1_Enable, %function
 130              	UART_1_Enable:
 131              	.LFB3:
 161:Generated_Source\PSoC4/UART_1.c **** 
 162:Generated_Source\PSoC4/UART_1.c **** 
 163:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/UART_1.c **** *
 167:Generated_Source\PSoC4/UART_1.c **** * Summary:
 168:Generated_Source\PSoC4/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC4/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/UART_1.c **** *  operation.
 172:Generated_Source\PSoC4/UART_1.c **** 
 173:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC4/UART_1.c **** *  None.
 175:Generated_Source\PSoC4/UART_1.c **** *
 176:Generated_Source\PSoC4/UART_1.c **** * Return:
 177:Generated_Source\PSoC4/UART_1.c **** *  None.
 178:Generated_Source\PSoC4/UART_1.c **** *
 179:Generated_Source\PSoC4/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC4/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/UART_1.c **** *
 182:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC4/UART_1.c **** {
 132              		.loc 1 184 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 90B5     		push	{r4, r7, lr}
 137              		.cfi_def_cfa_offset 12
 138              		.cfi_offset 4, -12
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 83B0     		sub	sp, sp, #12
 142              		.cfi_def_cfa_offset 24
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 145              		.loc 1 186 0
 146 0006 FC1D     		adds	r4, r7, #7
 147 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 148 000c 0300     		movs	r3, r0
 149 000e 2370     		strb	r3, [r4]
 187:Generated_Source\PSoC4/UART_1.c **** 
 188:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC4/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 150              		.loc 1 190 0
 151 0010 114A     		ldr	r2, .L9
 152 0012 114B     		ldr	r3, .L9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 7


 153 0014 1B78     		ldrb	r3, [r3]
 154 0016 DBB2     		uxtb	r3, r3
 155 0018 2021     		movs	r1, #32
 156 001a 0B43     		orrs	r3, r1
 157 001c DBB2     		uxtb	r3, r3
 158 001e 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/UART_1.c **** 
 192:Generated_Source\PSoC4/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 159              		.loc 1 193 0
 160 0020 0E4A     		ldr	r2, .L9+4
 161 0022 0E4B     		ldr	r3, .L9+4
 162 0024 1B78     		ldrb	r3, [r3]
 163 0026 DBB2     		uxtb	r3, r3
 164 0028 1021     		movs	r1, #16
 165 002a 0B43     		orrs	r3, r1
 166 002c DBB2     		uxtb	r3, r3
 167 002e 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC4/UART_1.c **** 
 195:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC4/UART_1.c **** 
 198:Generated_Source\PSoC4/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC4/UART_1.c **** 
 204:Generated_Source\PSoC4/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC4/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/UART_1.c **** 
 210:Generated_Source\PSoC4/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 168              		.loc 1 211 0
 169 0030 0B4A     		ldr	r2, .L9+8
 170 0032 0B4B     		ldr	r3, .L9+8
 171 0034 1B78     		ldrb	r3, [r3]
 172 0036 DBB2     		uxtb	r3, r3
 173 0038 1021     		movs	r1, #16
 174 003a 0B43     		orrs	r3, r1
 175 003c DBB2     		uxtb	r3, r3
 176 003e 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/UART_1.c **** 
 218:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 177              		.loc 1 219 0
 178 0040 FF20     		movs	r0, #255
 179 0042 FFF7FEFF 		bl	UART_1_IntClock_StartEx
 220:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 8


 221:Generated_Source\PSoC4/UART_1.c **** 
 222:Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 180              		.loc 1 222 0
 181 0046 FB1D     		adds	r3, r7, #7
 182 0048 1B78     		ldrb	r3, [r3]
 183 004a 1800     		movs	r0, r3
 184 004c FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC4/UART_1.c **** }
 185              		.loc 1 223 0
 186 0050 C046     		nop
 187 0052 BD46     		mov	sp, r7
 188 0054 03B0     		add	sp, sp, #12
 189              		@ sp needed
 190 0056 90BD     		pop	{r4, r7, pc}
 191              	.L10:
 192              		.align	2
 193              	.L9:
 194 0058 91000F40 		.word	1074725009
 195 005c 92000F40 		.word	1074725010
 196 0060 94000F40 		.word	1074725012
 197              		.cfi_endproc
 198              	.LFE3:
 199              		.size	UART_1_Enable, .-UART_1_Enable
 200              		.section	.text.UART_1_Stop,"ax",%progbits
 201              		.align	2
 202              		.global	UART_1_Stop
 203              		.code	16
 204              		.thumb_func
 205              		.type	UART_1_Stop, %function
 206              	UART_1_Stop:
 207              	.LFB4:
 224:Generated_Source\PSoC4/UART_1.c **** 
 225:Generated_Source\PSoC4/UART_1.c **** 
 226:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC4/UART_1.c **** *
 230:Generated_Source\PSoC4/UART_1.c **** * Summary:
 231:Generated_Source\PSoC4/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/UART_1.c **** *
 233:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC4/UART_1.c **** *  None.
 235:Generated_Source\PSoC4/UART_1.c **** *
 236:Generated_Source\PSoC4/UART_1.c **** * Return:
 237:Generated_Source\PSoC4/UART_1.c **** *  None.
 238:Generated_Source\PSoC4/UART_1.c **** *
 239:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC4/UART_1.c **** {
 208              		.loc 1 241 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 90B5     		push	{r4, r7, lr}
 213              		.cfi_def_cfa_offset 12
 214              		.cfi_offset 4, -12
 215              		.cfi_offset 7, -8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 9


 216              		.cfi_offset 14, -4
 217 0002 83B0     		sub	sp, sp, #12
 218              		.cfi_def_cfa_offset 24
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC4/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 221              		.loc 1 243 0
 222 0006 FC1D     		adds	r4, r7, #7
 223 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 224 000c 0300     		movs	r3, r0
 225 000e 2370     		strb	r3, [r4]
 244:Generated_Source\PSoC4/UART_1.c **** 
 245:Generated_Source\PSoC4/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 226              		.loc 1 247 0
 227 0010 114A     		ldr	r2, .L12
 228 0012 114B     		ldr	r3, .L12
 229 0014 1B78     		ldrb	r3, [r3]
 230 0016 DBB2     		uxtb	r3, r3
 231 0018 2021     		movs	r1, #32
 232 001a 8B43     		bics	r3, r1
 233 001c DBB2     		uxtb	r3, r3
 234 001e 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC4/UART_1.c **** 
 250:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC4/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC4/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC4/UART_1.c **** 
 256:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 235              		.loc 1 257 0
 236 0020 FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/UART_1.c **** 
 260:Generated_Source\PSoC4/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 237              		.loc 1 262 0
 238 0024 0D4A     		ldr	r2, .L12+4
 239 0026 0D4B     		ldr	r3, .L12+4
 240 0028 1B78     		ldrb	r3, [r3]
 241 002a DBB2     		uxtb	r3, r3
 242 002c 1021     		movs	r1, #16
 243 002e 8B43     		bics	r3, r1
 244 0030 DBB2     		uxtb	r3, r3
 245 0032 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/UART_1.c **** 
 264:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 10


 269:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 246              		.loc 1 270 0
 247 0034 0A4A     		ldr	r2, .L12+8
 248 0036 0A4B     		ldr	r3, .L12+8
 249 0038 1B78     		ldrb	r3, [r3]
 250 003a DBB2     		uxtb	r3, r3
 251 003c 1021     		movs	r1, #16
 252 003e 8B43     		bics	r3, r1
 253 0040 DBB2     		uxtb	r3, r3
 254 0042 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC4/UART_1.c **** 
 272:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC4/UART_1.c **** 
 277:Generated_Source\PSoC4/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 255              		.loc 1 277 0
 256 0044 FB1D     		adds	r3, r7, #7
 257 0046 1B78     		ldrb	r3, [r3]
 258 0048 1800     		movs	r0, r3
 259 004a FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC4/UART_1.c **** }
 260              		.loc 1 278 0
 261 004e C046     		nop
 262 0050 BD46     		mov	sp, r7
 263 0052 03B0     		add	sp, sp, #12
 264              		@ sp needed
 265 0054 90BD     		pop	{r4, r7, pc}
 266              	.L13:
 267 0056 C046     		.align	2
 268              	.L12:
 269 0058 91000F40 		.word	1074725009
 270 005c 92000F40 		.word	1074725010
 271 0060 94000F40 		.word	1074725012
 272              		.cfi_endproc
 273              	.LFE4:
 274              		.size	UART_1_Stop, .-UART_1_Stop
 275              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 276              		.align	2
 277              		.global	UART_1_ReadControlRegister
 278              		.code	16
 279              		.thumb_func
 280              		.type	UART_1_ReadControlRegister, %function
 281              	UART_1_ReadControlRegister:
 282              	.LFB5:
 279:Generated_Source\PSoC4/UART_1.c **** 
 280:Generated_Source\PSoC4/UART_1.c **** 
 281:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC4/UART_1.c **** *
 285:Generated_Source\PSoC4/UART_1.c **** * Summary:
 286:Generated_Source\PSoC4/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/UART_1.c **** *
 288:Generated_Source\PSoC4/UART_1.c **** * Parameters:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 11


 289:Generated_Source\PSoC4/UART_1.c **** *  None.
 290:Generated_Source\PSoC4/UART_1.c **** *
 291:Generated_Source\PSoC4/UART_1.c **** * Return:
 292:Generated_Source\PSoC4/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/UART_1.c **** *
 294:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/UART_1.c **** {
 283              		.loc 1 296 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291 0002 00AF     		add	r7, sp, #0
 292              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/UART_1.c ****         return(0u);
 293              		.loc 1 298 0
 294 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC4/UART_1.c ****     #else
 300:Generated_Source\PSoC4/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/UART_1.c **** }
 295              		.loc 1 302 0
 296 0006 1800     		movs	r0, r3
 297 0008 BD46     		mov	sp, r7
 298              		@ sp needed
 299 000a 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE5:
 302              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 303              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 304              		.align	2
 305              		.global	UART_1_WriteControlRegister
 306              		.code	16
 307              		.thumb_func
 308              		.type	UART_1_WriteControlRegister, %function
 309              	UART_1_WriteControlRegister:
 310              	.LFB6:
 303:Generated_Source\PSoC4/UART_1.c **** 
 304:Generated_Source\PSoC4/UART_1.c **** 
 305:Generated_Source\PSoC4/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC4/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC4/UART_1.c **** *
 309:Generated_Source\PSoC4/UART_1.c **** * Summary:
 310:Generated_Source\PSoC4/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/UART_1.c **** *
 312:Generated_Source\PSoC4/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC4/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC4/UART_1.c **** *
 315:Generated_Source\PSoC4/UART_1.c **** * Return:
 316:Generated_Source\PSoC4/UART_1.c **** *  None.
 317:Generated_Source\PSoC4/UART_1.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 12


 318:Generated_Source\PSoC4/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/UART_1.c **** {
 311              		.loc 1 320 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 323 0006 0200     		movs	r2, r0
 324 0008 FB1D     		adds	r3, r7, #7
 325 000a 1A70     		strb	r2, [r3]
 321:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC4/UART_1.c ****         {
 324:Generated_Source\PSoC4/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/UART_1.c ****         }
 326:Generated_Source\PSoC4/UART_1.c ****     #else
 327:Generated_Source\PSoC4/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/UART_1.c **** }
 326              		.loc 1 329 0
 327 000c C046     		nop
 328 000e BD46     		mov	sp, r7
 329 0010 02B0     		add	sp, sp, #8
 330              		@ sp needed
 331 0012 80BD     		pop	{r7, pc}
 332              		.cfi_endproc
 333              	.LFE6:
 334              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 335              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 336              		.align	2
 337              		.global	UART_1_SetRxInterruptMode
 338              		.code	16
 339              		.thumb_func
 340              		.type	UART_1_SetRxInterruptMode, %function
 341              	UART_1_SetRxInterruptMode:
 342              	.LFB7:
 330:Generated_Source\PSoC4/UART_1.c **** 
 331:Generated_Source\PSoC4/UART_1.c **** 
 332:Generated_Source\PSoC4/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/UART_1.c ****     *
 337:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC4/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/UART_1.c ****     *
 340:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC4/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 13


 343:Generated_Source\PSoC4/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/UART_1.c ****     *
 352:Generated_Source\PSoC4/UART_1.c ****     * Return:
 353:Generated_Source\PSoC4/UART_1.c ****     *  None.
 354:Generated_Source\PSoC4/UART_1.c ****     *
 355:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/UART_1.c ****     *
 358:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/UART_1.c ****     {
 343              		.loc 1 360 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 8
 346              		@ frame_needed = 1, uses_anonymous_args = 0
 347 0000 80B5     		push	{r7, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 82B0     		sub	sp, sp, #8
 352              		.cfi_def_cfa_offset 16
 353 0004 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 355 0006 0200     		movs	r2, r0
 356 0008 FB1D     		adds	r3, r7, #7
 357 000a 1A70     		strb	r2, [r3]
 361:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 358              		.loc 1 361 0
 359 000c 034A     		ldr	r2, .L18
 360 000e FB1D     		adds	r3, r7, #7
 361 0010 1B78     		ldrb	r3, [r3]
 362 0012 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC4/UART_1.c ****     }
 363              		.loc 1 362 0
 364 0014 C046     		nop
 365 0016 BD46     		mov	sp, r7
 366 0018 02B0     		add	sp, sp, #8
 367              		@ sp needed
 368 001a 80BD     		pop	{r7, pc}
 369              	.L19:
 370              		.align	2
 371              	.L18:
 372 001c 82000F40 		.word	1074724994
 373              		.cfi_endproc
 374              	.LFE7:
 375              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 376              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 377              		.align	2
 378              		.global	UART_1_ReadRxData
 379              		.code	16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 14


 380              		.thumb_func
 381              		.type	UART_1_ReadRxData, %function
 382              	UART_1_ReadRxData:
 383              	.LFB8:
 363:Generated_Source\PSoC4/UART_1.c **** 
 364:Generated_Source\PSoC4/UART_1.c **** 
 365:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/UART_1.c ****     *
 369:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC4/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/UART_1.c ****     *
 373:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC4/UART_1.c ****     *  None.
 375:Generated_Source\PSoC4/UART_1.c ****     *
 376:Generated_Source\PSoC4/UART_1.c ****     * Return:
 377:Generated_Source\PSoC4/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/UART_1.c ****     *
 379:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/UART_1.c ****     *
 388:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC4/UART_1.c ****     *  No.
 390:Generated_Source\PSoC4/UART_1.c ****     *
 391:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC4/UART_1.c ****     {
 384              		.loc 1 393 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 8
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 80B5     		push	{r7, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 82B0     		sub	sp, sp, #8
 393              		.cfi_def_cfa_offset 16
 394 0004 00AF     		add	r7, sp, #0
 395              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC4/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/UART_1.c **** 
 396:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/UART_1.c **** 
 398:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/UART_1.c **** 
 401:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 15


 404:Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC4/UART_1.c **** 
 407:Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC4/UART_1.c ****         {
 409:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC4/UART_1.c **** 
 412:Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC4/UART_1.c ****             {
 414:Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC4/UART_1.c ****             }
 416:Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC4/UART_1.c **** 
 419:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC4/UART_1.c ****             {
 421:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC4/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/UART_1.c ****                             */
 430:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/UART_1.c ****                         }
 432:Generated_Source\PSoC4/UART_1.c ****                     #else
 433:Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC4/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/UART_1.c ****             }
 437:Generated_Source\PSoC4/UART_1.c ****         }
 438:Generated_Source\PSoC4/UART_1.c ****         else
 439:Generated_Source\PSoC4/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC4/UART_1.c ****         }
 442:Generated_Source\PSoC4/UART_1.c **** 
 443:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC4/UART_1.c **** 
 445:Generated_Source\PSoC4/UART_1.c ****     #else
 446:Generated_Source\PSoC4/UART_1.c **** 
 447:Generated_Source\PSoC4/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 396              		.loc 1 448 0
 397 0006 054A     		ldr	r2, .L22
 398 0008 FB1D     		adds	r3, r7, #7
 399 000a 1278     		ldrb	r2, [r2]
 400 000c 1A70     		strb	r2, [r3]
 449:Generated_Source\PSoC4/UART_1.c **** 
 450:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/UART_1.c **** 
 452:Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 401              		.loc 1 452 0
 402 000e FB1D     		adds	r3, r7, #7
 403 0010 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 16


 453:Generated_Source\PSoC4/UART_1.c ****     }
 404              		.loc 1 453 0
 405 0012 1800     		movs	r0, r3
 406 0014 BD46     		mov	sp, r7
 407 0016 02B0     		add	sp, sp, #8
 408              		@ sp needed
 409 0018 80BD     		pop	{r7, pc}
 410              	.L23:
 411 001a C046     		.align	2
 412              	.L22:
 413 001c 42000F40 		.word	1074724930
 414              		.cfi_endproc
 415              	.LFE8:
 416              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 417              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 418              		.align	2
 419              		.global	UART_1_ReadRxStatus
 420              		.code	16
 421              		.thumb_func
 422              		.type	UART_1_ReadRxStatus, %function
 423              	UART_1_ReadRxStatus:
 424              	.LFB9:
 454:Generated_Source\PSoC4/UART_1.c **** 
 455:Generated_Source\PSoC4/UART_1.c **** 
 456:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/UART_1.c ****     *
 460:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC4/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/UART_1.c ****     *
 464:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC4/UART_1.c ****     *  None.
 466:Generated_Source\PSoC4/UART_1.c ****     *
 467:Generated_Source\PSoC4/UART_1.c ****     * Return:
 468:Generated_Source\PSoC4/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/UART_1.c ****     *
 470:Generated_Source\PSoC4/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC4/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC4/UART_1.c ****     *
 476:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC4/UART_1.c ****     *
 484:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/UART_1.c ****     {
 425              		.loc 1 486 0
 426              		.cfi_startproc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 17


 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429 0000 80B5     		push	{r7, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 7, -8
 432              		.cfi_offset 14, -4
 433 0002 82B0     		sub	sp, sp, #8
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC4/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC4/UART_1.c **** 
 489:Generated_Source\PSoC4/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 437              		.loc 1 489 0
 438 0006 064B     		ldr	r3, .L26
 439 0008 1B78     		ldrb	r3, [r3]
 440 000a DAB2     		uxtb	r2, r3
 441 000c FB1D     		adds	r3, r7, #7
 442 000e 7F21     		movs	r1, #127
 443 0010 0A40     		ands	r2, r1
 444 0012 1A70     		strb	r2, [r3]
 490:Generated_Source\PSoC4/UART_1.c **** 
 491:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC4/UART_1.c ****         {
 494:Generated_Source\PSoC4/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC4/UART_1.c ****         }
 497:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/UART_1.c **** 
 499:Generated_Source\PSoC4/UART_1.c ****         return(status);
 445              		.loc 1 499 0
 446 0014 FB1D     		adds	r3, r7, #7
 447 0016 1B78     		ldrb	r3, [r3]
 500:Generated_Source\PSoC4/UART_1.c ****     }
 448              		.loc 1 500 0
 449 0018 1800     		movs	r0, r3
 450 001a BD46     		mov	sp, r7
 451 001c 02B0     		add	sp, sp, #8
 452              		@ sp needed
 453 001e 80BD     		pop	{r7, pc}
 454              	.L27:
 455              		.align	2
 456              	.L26:
 457 0020 62000F40 		.word	1074724962
 458              		.cfi_endproc
 459              	.LFE9:
 460              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 461              		.section	.text.UART_1_GetChar,"ax",%progbits
 462              		.align	2
 463              		.global	UART_1_GetChar
 464              		.code	16
 465              		.thumb_func
 466              		.type	UART_1_GetChar, %function
 467              	UART_1_GetChar:
 468              	.LFB10:
 501:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 18


 502:Generated_Source\PSoC4/UART_1.c **** 
 503:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/UART_1.c ****     *
 507:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC4/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC4/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/UART_1.c ****     *
 512:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC4/UART_1.c ****     *  None.
 514:Generated_Source\PSoC4/UART_1.c ****     *
 515:Generated_Source\PSoC4/UART_1.c ****     * Return:
 516:Generated_Source\PSoC4/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/UART_1.c ****     *
 519:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/UART_1.c ****     *
 528:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC4/UART_1.c ****     *  No.
 530:Generated_Source\PSoC4/UART_1.c ****     *
 531:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC4/UART_1.c ****     {
 469              		.loc 1 533 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473 0000 80B5     		push	{r7, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 82B0     		sub	sp, sp, #8
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC4/UART_1.c ****         uint8 rxData = 0u;
 481              		.loc 1 534 0
 482 0006 FB1D     		adds	r3, r7, #7
 483 0008 0022     		movs	r2, #0
 484 000a 1A70     		strb	r2, [r3]
 535:Generated_Source\PSoC4/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/UART_1.c **** 
 537:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/UART_1.c **** 
 541:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 19


 543:Generated_Source\PSoC4/UART_1.c **** 
 544:Generated_Source\PSoC4/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC4/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC4/UART_1.c **** 
 547:Generated_Source\PSoC4/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC4/UART_1.c ****         {
 549:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC4/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC4/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC4/UART_1.c ****             {
 553:Generated_Source\PSoC4/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC4/UART_1.c ****             }
 555:Generated_Source\PSoC4/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC4/UART_1.c **** 
 558:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC4/UART_1.c ****             {
 560:Generated_Source\PSoC4/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC4/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/UART_1.c ****                             */
 569:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/UART_1.c ****                         }
 571:Generated_Source\PSoC4/UART_1.c ****                     #else
 572:Generated_Source\PSoC4/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC4/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/UART_1.c ****             }
 576:Generated_Source\PSoC4/UART_1.c **** 
 577:Generated_Source\PSoC4/UART_1.c ****         }
 578:Generated_Source\PSoC4/UART_1.c ****         else
 579:Generated_Source\PSoC4/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC4/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC4/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/UART_1.c ****                 {
 587:Generated_Source\PSoC4/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC4/UART_1.c ****                 }
 589:Generated_Source\PSoC4/UART_1.c ****             }
 590:Generated_Source\PSoC4/UART_1.c ****         }
 591:Generated_Source\PSoC4/UART_1.c **** 
 592:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC4/UART_1.c **** 
 594:Generated_Source\PSoC4/UART_1.c ****     #else
 595:Generated_Source\PSoC4/UART_1.c **** 
 596:Generated_Source\PSoC4/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 485              		.loc 1 596 0
 486 000c 0D4A     		ldr	r2, .L31
 487 000e BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 20


 488 0010 1278     		ldrb	r2, [r2]
 489 0012 1A70     		strb	r2, [r3]
 597:Generated_Source\PSoC4/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 490              		.loc 1 597 0
 491 0014 BB1D     		adds	r3, r7, #6
 492 0016 1B78     		ldrb	r3, [r3]
 493 0018 2022     		movs	r2, #32
 494 001a 1340     		ands	r3, r2
 495 001c 0BD0     		beq	.L29
 598:Generated_Source\PSoC4/UART_1.c ****         {
 599:Generated_Source\PSoC4/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 496              		.loc 1 600 0
 497 001e 0A4A     		ldr	r2, .L31+4
 498 0020 FB1D     		adds	r3, r7, #7
 499 0022 1278     		ldrb	r2, [r2]
 500 0024 1A70     		strb	r2, [r3]
 601:Generated_Source\PSoC4/UART_1.c **** 
 602:Generated_Source\PSoC4/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 501              		.loc 1 604 0
 502 0026 BB1D     		adds	r3, r7, #6
 503 0028 1B78     		ldrb	r3, [r3]
 504 002a 1E22     		movs	r2, #30
 505 002c 1340     		ands	r3, r2
 603:Generated_Source\PSoC4/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 506              		.loc 1 603 0
 507 002e 02D0     		beq	.L29
 605:Generated_Source\PSoC4/UART_1.c ****             {
 606:Generated_Source\PSoC4/UART_1.c ****                 rxData = 0u;
 508              		.loc 1 606 0
 509 0030 FB1D     		adds	r3, r7, #7
 510 0032 0022     		movs	r2, #0
 511 0034 1A70     		strb	r2, [r3]
 512              	.L29:
 607:Generated_Source\PSoC4/UART_1.c ****             }
 608:Generated_Source\PSoC4/UART_1.c ****         }
 609:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/UART_1.c **** 
 611:Generated_Source\PSoC4/UART_1.c ****         return(rxData);
 513              		.loc 1 611 0
 514 0036 FB1D     		adds	r3, r7, #7
 515 0038 1B78     		ldrb	r3, [r3]
 612:Generated_Source\PSoC4/UART_1.c ****     }
 516              		.loc 1 612 0
 517 003a 1800     		movs	r0, r3
 518 003c BD46     		mov	sp, r7
 519 003e 02B0     		add	sp, sp, #8
 520              		@ sp needed
 521 0040 80BD     		pop	{r7, pc}
 522              	.L32:
 523 0042 C046     		.align	2
 524              	.L31:
 525 0044 62000F40 		.word	1074724962
 526 0048 42000F40 		.word	1074724930
 527              		.cfi_endproc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 21


 528              	.LFE10:
 529              		.size	UART_1_GetChar, .-UART_1_GetChar
 530              		.section	.text.UART_1_GetByte,"ax",%progbits
 531              		.align	2
 532              		.global	UART_1_GetByte
 533              		.code	16
 534              		.thumb_func
 535              		.type	UART_1_GetByte, %function
 536              	UART_1_GetByte:
 537              	.LFB11:
 613:Generated_Source\PSoC4/UART_1.c **** 
 614:Generated_Source\PSoC4/UART_1.c **** 
 615:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/UART_1.c ****     *
 619:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC4/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC4/UART_1.c ****     *
 623:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC4/UART_1.c ****     *  None.
 625:Generated_Source\PSoC4/UART_1.c ****     *
 626:Generated_Source\PSoC4/UART_1.c ****     * Return:
 627:Generated_Source\PSoC4/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/UART_1.c ****     *
 630:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC4/UART_1.c ****     *  No.
 632:Generated_Source\PSoC4/UART_1.c ****     *
 633:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC4/UART_1.c ****     {
 538              		.loc 1 635 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 B0B5     		push	{r4, r5, r7, lr}
 543              		.cfi_def_cfa_offset 16
 544              		.cfi_offset 4, -16
 545              		.cfi_offset 5, -12
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC4/UART_1.c ****         
 637:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC4/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC4/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC4/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC4/UART_1.c ****     #else
 646:Generated_Source\PSoC4/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 550              		.loc 1 646 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 22


 551 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 552 0008 0300     		movs	r3, r0
 553 000a 1B02     		lsls	r3, r3, #8
 554 000c 1CB2     		sxth	r4, r3
 555 000e FFF7FEFF 		bl	UART_1_ReadRxData
 556 0012 0300     		movs	r3, r0
 557 0014 1BB2     		sxth	r3, r3
 558 0016 2343     		orrs	r3, r4
 559 0018 1BB2     		sxth	r3, r3
 560 001a 9BB2     		uxth	r3, r3
 647:Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/UART_1.c ****         
 649:Generated_Source\PSoC4/UART_1.c ****     }
 561              		.loc 1 649 0
 562 001c 1800     		movs	r0, r3
 563 001e BD46     		mov	sp, r7
 564              		@ sp needed
 565 0020 B0BD     		pop	{r4, r5, r7, pc}
 566              		.cfi_endproc
 567              	.LFE11:
 568              		.size	UART_1_GetByte, .-UART_1_GetByte
 569 0022 C046     		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 570              		.align	2
 571              		.global	UART_1_GetRxBufferSize
 572              		.code	16
 573              		.thumb_func
 574              		.type	UART_1_GetRxBufferSize, %function
 575              	UART_1_GetRxBufferSize:
 576              	.LFB12:
 650:Generated_Source\PSoC4/UART_1.c **** 
 651:Generated_Source\PSoC4/UART_1.c **** 
 652:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/UART_1.c ****     *
 656:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/UART_1.c ****     *    account.
 663:Generated_Source\PSoC4/UART_1.c ****     *
 664:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC4/UART_1.c ****     *  None.
 666:Generated_Source\PSoC4/UART_1.c ****     *
 667:Generated_Source\PSoC4/UART_1.c ****     * Return:
 668:Generated_Source\PSoC4/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/UART_1.c ****     *
 671:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/UART_1.c ****     *
 676:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC4/UART_1.c ****     *  No.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 23


 678:Generated_Source\PSoC4/UART_1.c ****     *
 679:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/UART_1.c ****     *
 682:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/UART_1.c ****                                                             
 685:Generated_Source\PSoC4/UART_1.c ****     {
 577              		.loc 1 685 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 8
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 82B0     		sub	sp, sp, #8
 586              		.cfi_def_cfa_offset 16
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC4/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC4/UART_1.c **** 
 688:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/UART_1.c **** 
 690:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC4/UART_1.c **** 
 693:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC4/UART_1.c ****         {
 695:Generated_Source\PSoC4/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC4/UART_1.c ****             {
 697:Generated_Source\PSoC4/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC4/UART_1.c ****             }
 699:Generated_Source\PSoC4/UART_1.c ****             else
 700:Generated_Source\PSoC4/UART_1.c ****             {
 701:Generated_Source\PSoC4/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC4/UART_1.c ****             }
 703:Generated_Source\PSoC4/UART_1.c ****         }
 704:Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC4/UART_1.c ****         {
 706:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC4/UART_1.c ****         }
 708:Generated_Source\PSoC4/UART_1.c ****         else
 709:Generated_Source\PSoC4/UART_1.c ****         {
 710:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC4/UART_1.c ****         }
 712:Generated_Source\PSoC4/UART_1.c **** 
 713:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC4/UART_1.c **** 
 715:Generated_Source\PSoC4/UART_1.c ****     #else
 716:Generated_Source\PSoC4/UART_1.c **** 
 717:Generated_Source\PSoC4/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 589              		.loc 1 718 0
 590 0006 094B     		ldr	r3, .L39
 591 0008 1B78     		ldrb	r3, [r3]
 592 000a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 24


 593 000c 1A00     		movs	r2, r3
 594 000e 2023     		movs	r3, #32
 595 0010 1340     		ands	r3, r2
 596 0012 01D0     		beq	.L36
 597              		.loc 1 718 0 is_stmt 0 discriminator 1
 598 0014 0122     		movs	r2, #1
 599 0016 00E0     		b	.L37
 600              	.L36:
 601              		.loc 1 718 0 discriminator 2
 602 0018 0022     		movs	r2, #0
 603              	.L37:
 604              		.loc 1 718 0 discriminator 4
 605 001a FB1D     		adds	r3, r7, #7
 606 001c 1A70     		strb	r2, [r3]
 719:Generated_Source\PSoC4/UART_1.c **** 
 720:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/UART_1.c **** 
 722:Generated_Source\PSoC4/UART_1.c ****         return(size);
 607              		.loc 1 722 0 is_stmt 1 discriminator 4
 608 001e FB1D     		adds	r3, r7, #7
 609 0020 1B78     		ldrb	r3, [r3]
 723:Generated_Source\PSoC4/UART_1.c ****     }
 610              		.loc 1 723 0 discriminator 4
 611 0022 1800     		movs	r0, r3
 612 0024 BD46     		mov	sp, r7
 613 0026 02B0     		add	sp, sp, #8
 614              		@ sp needed
 615 0028 80BD     		pop	{r7, pc}
 616              	.L40:
 617 002a C046     		.align	2
 618              	.L39:
 619 002c 62000F40 		.word	1074724962
 620              		.cfi_endproc
 621              	.LFE12:
 622              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 623              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 624              		.align	2
 625              		.global	UART_1_ClearRxBuffer
 626              		.code	16
 627              		.thumb_func
 628              		.type	UART_1_ClearRxBuffer, %function
 629              	UART_1_ClearRxBuffer:
 630              	.LFB13:
 724:Generated_Source\PSoC4/UART_1.c **** 
 725:Generated_Source\PSoC4/UART_1.c **** 
 726:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/UART_1.c ****     *
 730:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC4/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/UART_1.c ****     *
 733:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC4/UART_1.c ****     *  None.
 735:Generated_Source\PSoC4/UART_1.c ****     *
 736:Generated_Source\PSoC4/UART_1.c ****     * Return:
 737:Generated_Source\PSoC4/UART_1.c ****     *  None.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 25


 738:Generated_Source\PSoC4/UART_1.c ****     *
 739:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/UART_1.c ****     *
 745:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC4/UART_1.c ****     *  No.
 747:Generated_Source\PSoC4/UART_1.c ****     *
 748:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/UART_1.c ****     *
 753:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC4/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/UART_1.c ****     *
 756:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/UART_1.c ****     {
 631              		.loc 1 758 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 90B5     		push	{r4, r7, lr}
 636              		.cfi_def_cfa_offset 12
 637              		.cfi_offset 4, -12
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 83B0     		sub	sp, sp, #12
 641              		.cfi_def_cfa_offset 24
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/UART_1.c **** 
 761:Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 644              		.loc 1 762 0
 645 0006 FC1D     		adds	r4, r7, #7
 646 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 647 000c 0300     		movs	r3, r0
 648 000e 2370     		strb	r3, [r4]
 763:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 649              		.loc 1 763 0
 650 0010 0C4A     		ldr	r2, .L42
 651 0012 0C4B     		ldr	r3, .L42
 652 0014 1B78     		ldrb	r3, [r3]
 653 0016 DBB2     		uxtb	r3, r3
 654 0018 0121     		movs	r1, #1
 655 001a 0B43     		orrs	r3, r1
 656 001c DBB2     		uxtb	r3, r3
 657 001e 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 658              		.loc 1 764 0
 659 0020 084A     		ldr	r2, .L42
 660 0022 084B     		ldr	r3, .L42
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 26


 661 0024 1B78     		ldrb	r3, [r3]
 662 0026 DBB2     		uxtb	r3, r3
 663 0028 0121     		movs	r1, #1
 664 002a 8B43     		bics	r3, r1
 665 002c DBB2     		uxtb	r3, r3
 666 002e 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 667              		.loc 1 765 0
 668 0030 FB1D     		adds	r3, r7, #7
 669 0032 1B78     		ldrb	r3, [r3]
 670 0034 1800     		movs	r0, r3
 671 0036 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC4/UART_1.c **** 
 767:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/UART_1.c **** 
 769:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC4/UART_1.c **** 
 772:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC4/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC4/UART_1.c **** 
 777:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC4/UART_1.c **** 
 779:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/UART_1.c **** 
 781:Generated_Source\PSoC4/UART_1.c ****     }
 672              		.loc 1 781 0
 673 003a C046     		nop
 674 003c BD46     		mov	sp, r7
 675 003e 03B0     		add	sp, sp, #12
 676              		@ sp needed
 677 0040 90BD     		pop	{r4, r7, pc}
 678              	.L43:
 679 0042 C046     		.align	2
 680              	.L42:
 681 0044 92000F40 		.word	1074725010
 682              		.cfi_endproc
 683              	.LFE13:
 684              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 685              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 686              		.align	2
 687              		.global	UART_1_SetRxAddressMode
 688              		.code	16
 689              		.thumb_func
 690              		.type	UART_1_SetRxAddressMode, %function
 691              	UART_1_SetRxAddressMode:
 692              	.LFB14:
 782:Generated_Source\PSoC4/UART_1.c **** 
 783:Generated_Source\PSoC4/UART_1.c **** 
 784:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/UART_1.c ****     *
 788:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC4/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 27


 790:Generated_Source\PSoC4/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC4/UART_1.c ****     *
 792:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC4/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC4/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/UART_1.c ****     *
 804:Generated_Source\PSoC4/UART_1.c ****     * Return:
 805:Generated_Source\PSoC4/UART_1.c ****     *  None.
 806:Generated_Source\PSoC4/UART_1.c ****     *
 807:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/UART_1.c ****     *
 812:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/UART_1.c ****                                                         
 815:Generated_Source\PSoC4/UART_1.c ****     {
 693              		.loc 1 815 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697 0000 80B5     		push	{r7, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 7, -8
 700              		.cfi_offset 14, -4
 701 0002 82B0     		sub	sp, sp, #8
 702              		.cfi_def_cfa_offset 16
 703 0004 00AF     		add	r7, sp, #0
 704              		.cfi_def_cfa_register 7
 705 0006 0200     		movs	r2, r0
 706 0008 FB1D     		adds	r3, r7, #7
 707 000a 1A70     		strb	r2, [r3]
 816:Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/UART_1.c ****                 {
 820:Generated_Source\PSoC4/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/UART_1.c ****                 }
 822:Generated_Source\PSoC4/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/UART_1.c **** 
 828:Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 28


 832:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/UART_1.c ****             {
 837:Generated_Source\PSoC4/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/UART_1.c ****             }
 839:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/UART_1.c ****     }
 708              		.loc 1 840 0
 709 000c C046     		nop
 710 000e BD46     		mov	sp, r7
 711 0010 02B0     		add	sp, sp, #8
 712              		@ sp needed
 713 0012 80BD     		pop	{r7, pc}
 714              		.cfi_endproc
 715              	.LFE14:
 716              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 717              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 718              		.align	2
 719              		.global	UART_1_SetRxAddress1
 720              		.code	16
 721              		.thumb_func
 722              		.type	UART_1_SetRxAddress1, %function
 723              	UART_1_SetRxAddress1:
 724              	.LFB15:
 841:Generated_Source\PSoC4/UART_1.c **** 
 842:Generated_Source\PSoC4/UART_1.c **** 
 843:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/UART_1.c ****     *
 847:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC4/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/UART_1.c ****     *
 850:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC4/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/UART_1.c ****     *
 853:Generated_Source\PSoC4/UART_1.c ****     * Return:
 854:Generated_Source\PSoC4/UART_1.c ****     *  None.
 855:Generated_Source\PSoC4/UART_1.c ****     *
 856:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/UART_1.c ****     {
 725              		.loc 1 858 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 82B0     		sub	sp, sp, #8
 734              		.cfi_def_cfa_offset 16
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 0200     		movs	r2, r0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 29


 738 0008 FB1D     		adds	r3, r7, #7
 739 000a 1A70     		strb	r2, [r3]
 859:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 740              		.loc 1 859 0
 741 000c 034A     		ldr	r2, .L46
 742 000e FB1D     		adds	r3, r7, #7
 743 0010 1B78     		ldrb	r3, [r3]
 744 0012 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC4/UART_1.c ****     }
 745              		.loc 1 860 0
 746 0014 C046     		nop
 747 0016 BD46     		mov	sp, r7
 748 0018 02B0     		add	sp, sp, #8
 749              		@ sp needed
 750 001a 80BD     		pop	{r7, pc}
 751              	.L47:
 752              		.align	2
 753              	.L46:
 754 001c 22000F40 		.word	1074724898
 755              		.cfi_endproc
 756              	.LFE15:
 757              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 758              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 759              		.align	2
 760              		.global	UART_1_SetRxAddress2
 761              		.code	16
 762              		.thumb_func
 763              		.type	UART_1_SetRxAddress2, %function
 764              	UART_1_SetRxAddress2:
 765              	.LFB16:
 861:Generated_Source\PSoC4/UART_1.c **** 
 862:Generated_Source\PSoC4/UART_1.c **** 
 863:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/UART_1.c ****     *
 867:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC4/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/UART_1.c ****     *
 870:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC4/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/UART_1.c ****     *
 873:Generated_Source\PSoC4/UART_1.c ****     * Return:
 874:Generated_Source\PSoC4/UART_1.c ****     *  None.
 875:Generated_Source\PSoC4/UART_1.c ****     *
 876:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/UART_1.c ****     {
 766              		.loc 1 878 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 8
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 7, -8
 773              		.cfi_offset 14, -4
 774 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 30


 775              		.cfi_def_cfa_offset 16
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 0200     		movs	r2, r0
 779 0008 FB1D     		adds	r3, r7, #7
 780 000a 1A70     		strb	r2, [r3]
 879:Generated_Source\PSoC4/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 781              		.loc 1 879 0
 782 000c 034A     		ldr	r2, .L49
 783 000e FB1D     		adds	r3, r7, #7
 784 0010 1B78     		ldrb	r3, [r3]
 785 0012 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC4/UART_1.c ****     }
 786              		.loc 1 880 0
 787 0014 C046     		nop
 788 0016 BD46     		mov	sp, r7
 789 0018 02B0     		add	sp, sp, #8
 790              		@ sp needed
 791 001a 80BD     		pop	{r7, pc}
 792              	.L50:
 793              		.align	2
 794              	.L49:
 795 001c 32000F40 		.word	1074724914
 796              		.cfi_endproc
 797              	.LFE16:
 798              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 799              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 800              		.align	2
 801              		.global	UART_1_SetTxInterruptMode
 802              		.code	16
 803              		.thumb_func
 804              		.type	UART_1_SetTxInterruptMode, %function
 805              	UART_1_SetTxInterruptMode:
 806              	.LFB17:
 881:Generated_Source\PSoC4/UART_1.c **** 
 882:Generated_Source\PSoC4/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC4/UART_1.c **** 
 884:Generated_Source\PSoC4/UART_1.c **** 
 885:Generated_Source\PSoC4/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/UART_1.c ****     *
 890:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC4/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC4/UART_1.c ****     *
 894:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC4/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/UART_1.c ****     *
 901:Generated_Source\PSoC4/UART_1.c ****     * Return:
 902:Generated_Source\PSoC4/UART_1.c ****     *  None.
 903:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 31


 904:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC4/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/UART_1.c ****     *
 907:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/UART_1.c ****     {
 807              		.loc 1 909 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 8
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 0000 80B5     		push	{r7, lr}
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 82B0     		sub	sp, sp, #8
 816              		.cfi_def_cfa_offset 16
 817 0004 00AF     		add	r7, sp, #0
 818              		.cfi_def_cfa_register 7
 819 0006 0200     		movs	r2, r0
 820 0008 FB1D     		adds	r3, r7, #7
 821 000a 1A70     		strb	r2, [r3]
 910:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 822              		.loc 1 910 0
 823 000c 034A     		ldr	r2, .L52
 824 000e FB1D     		adds	r3, r7, #7
 825 0010 1B78     		ldrb	r3, [r3]
 826 0012 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC4/UART_1.c ****     }
 827              		.loc 1 911 0
 828 0014 C046     		nop
 829 0016 BD46     		mov	sp, r7
 830 0018 02B0     		add	sp, sp, #8
 831              		@ sp needed
 832 001a 80BD     		pop	{r7, pc}
 833              	.L53:
 834              		.align	2
 835              	.L52:
 836 001c 84000F40 		.word	1074724996
 837              		.cfi_endproc
 838              	.LFE17:
 839              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 840              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 841              		.align	2
 842              		.global	UART_1_WriteTxData
 843              		.code	16
 844              		.thumb_func
 845              		.type	UART_1_WriteTxData, %function
 846              	UART_1_WriteTxData:
 847              	.LFB18:
 912:Generated_Source\PSoC4/UART_1.c **** 
 913:Generated_Source\PSoC4/UART_1.c **** 
 914:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/UART_1.c ****     *
 918:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC4/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 32


 920:Generated_Source\PSoC4/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC4/UART_1.c ****     *
 923:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/UART_1.c ****     *
 926:Generated_Source\PSoC4/UART_1.c ****     * Return:
 927:Generated_Source\PSoC4/UART_1.c ****     * None.
 928:Generated_Source\PSoC4/UART_1.c ****     *
 929:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC4/UART_1.c ****     *
 938:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC4/UART_1.c ****     *  No.
 940:Generated_Source\PSoC4/UART_1.c ****     *
 941:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/UART_1.c ****     {
 848              		.loc 1 943 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 8
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 82B0     		sub	sp, sp, #8
 857              		.cfi_def_cfa_offset 16
 858 0004 00AF     		add	r7, sp, #0
 859              		.cfi_def_cfa_register 7
 860 0006 0200     		movs	r2, r0
 861 0008 FB1D     		adds	r3, r7, #7
 862 000a 1A70     		strb	r2, [r3]
 944:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 863              		.loc 1 945 0
 864 000c 054B     		ldr	r3, .L57
 865 000e 1B78     		ldrb	r3, [r3]
 866 0010 002B     		cmp	r3, #0
 867 0012 03D0     		beq	.L56
 946:Generated_Source\PSoC4/UART_1.c ****         {
 947:Generated_Source\PSoC4/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC4/UART_1.c **** 
 949:Generated_Source\PSoC4/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC4/UART_1.c **** 
 952:Generated_Source\PSoC4/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC4/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/UART_1.c ****             {
 955:Generated_Source\PSoC4/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 33


 957:Generated_Source\PSoC4/UART_1.c ****             }
 958:Generated_Source\PSoC4/UART_1.c ****             else
 959:Generated_Source\PSoC4/UART_1.c ****             {
 960:Generated_Source\PSoC4/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/UART_1.c ****                 {
 962:Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/UART_1.c ****                 }
 964:Generated_Source\PSoC4/UART_1.c **** 
 965:Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/UART_1.c **** 
 967:Generated_Source\PSoC4/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC4/UART_1.c ****             }
 970:Generated_Source\PSoC4/UART_1.c **** 
 971:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC4/UART_1.c **** 
 973:Generated_Source\PSoC4/UART_1.c ****         #else
 974:Generated_Source\PSoC4/UART_1.c **** 
 975:Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 868              		.loc 1 976 0
 869 0014 044A     		ldr	r2, .L57+4
 870 0016 FB1D     		adds	r3, r7, #7
 871 0018 1B78     		ldrb	r3, [r3]
 872 001a 1370     		strb	r3, [r2]
 873              	.L56:
 977:Generated_Source\PSoC4/UART_1.c **** 
 978:Generated_Source\PSoC4/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/UART_1.c ****         }
 980:Generated_Source\PSoC4/UART_1.c ****     }
 874              		.loc 1 980 0
 875 001c C046     		nop
 876 001e BD46     		mov	sp, r7
 877 0020 02B0     		add	sp, sp, #8
 878              		@ sp needed
 879 0022 80BD     		pop	{r7, pc}
 880              	.L58:
 881              		.align	2
 882              	.L57:
 883 0024 00000000 		.word	UART_1_initVar
 884 0028 44000F40 		.word	1074724932
 885              		.cfi_endproc
 886              	.LFE18:
 887              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 888              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 889              		.align	2
 890              		.global	UART_1_ReadTxStatus
 891              		.code	16
 892              		.thumb_func
 893              		.type	UART_1_ReadTxStatus, %function
 894              	UART_1_ReadTxStatus:
 895              	.LFB19:
 981:Generated_Source\PSoC4/UART_1.c **** 
 982:Generated_Source\PSoC4/UART_1.c **** 
 983:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 34


 986:Generated_Source\PSoC4/UART_1.c ****     *
 987:Generated_Source\PSoC4/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC4/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/UART_1.c ****     *
 990:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC4/UART_1.c ****     *  None.
 992:Generated_Source\PSoC4/UART_1.c ****     *
 993:Generated_Source\PSoC4/UART_1.c ****     * Return:
 994:Generated_Source\PSoC4/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/UART_1.c ****     *
 996:Generated_Source\PSoC4/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC4/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/UART_1.c ****     *
1002:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/UART_1.c ****     {
 896              		.loc 1 1004 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 80B5     		push	{r7, lr}
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC4/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 906              		.loc 1 1005 0
 907 0004 024B     		ldr	r3, .L61
 908 0006 1B78     		ldrb	r3, [r3]
 909 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC4/UART_1.c ****     }
 910              		.loc 1 1006 0
 911 000a 1800     		movs	r0, r3
 912 000c BD46     		mov	sp, r7
 913              		@ sp needed
 914 000e 80BD     		pop	{r7, pc}
 915              	.L62:
 916              		.align	2
 917              	.L61:
 918 0010 64000F40 		.word	1074724964
 919              		.cfi_endproc
 920              	.LFE19:
 921              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 922              		.section	.text.UART_1_PutChar,"ax",%progbits
 923              		.align	2
 924              		.global	UART_1_PutChar
 925              		.code	16
 926              		.thumb_func
 927              		.type	UART_1_PutChar, %function
 928              	UART_1_PutChar:
 929              	.LFB20:
1007:Generated_Source\PSoC4/UART_1.c **** 
1008:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 35


1009:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/UART_1.c ****     *
1013:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC4/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC4/UART_1.c ****     *
1018:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/UART_1.c ****     *
1021:Generated_Source\PSoC4/UART_1.c ****     * Return:
1022:Generated_Source\PSoC4/UART_1.c ****     *  None.
1023:Generated_Source\PSoC4/UART_1.c ****     *
1024:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC4/UART_1.c ****     *
1034:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC4/UART_1.c ****     *  No.
1036:Generated_Source\PSoC4/UART_1.c ****     *
1037:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/UART_1.c ****     *
1040:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/UART_1.c ****     {
 930              		.loc 1 1042 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 0200     		movs	r2, r0
 943 0008 FB1D     		adds	r3, r7, #7
 944 000a 1A70     		strb	r2, [r3]
1043:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/UART_1.c ****         */
1048:Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/UART_1.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 36


1051:Generated_Source\PSoC4/UART_1.c ****         do
1052:Generated_Source\PSoC4/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/UART_1.c **** 
1054:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/UART_1.c **** 
1059:Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC4/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC4/UART_1.c **** 
1062:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC4/UART_1.c ****         }
1067:Generated_Source\PSoC4/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/UART_1.c **** 
1071:Generated_Source\PSoC4/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC4/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/UART_1.c ****         {
1074:Generated_Source\PSoC4/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC4/UART_1.c ****         }
1077:Generated_Source\PSoC4/UART_1.c ****         else
1078:Generated_Source\PSoC4/UART_1.c ****         {
1079:Generated_Source\PSoC4/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/UART_1.c ****             {
1081:Generated_Source\PSoC4/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/UART_1.c ****             }
1083:Generated_Source\PSoC4/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/UART_1.c **** 
1087:Generated_Source\PSoC4/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/UART_1.c **** 
1092:Generated_Source\PSoC4/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/UART_1.c **** 
1094:Generated_Source\PSoC4/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC4/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/UART_1.c **** 
1098:Generated_Source\PSoC4/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/UART_1.c ****             {
1100:Generated_Source\PSoC4/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC4/UART_1.c ****             }
1103:Generated_Source\PSoC4/UART_1.c ****         }
1104:Generated_Source\PSoC4/UART_1.c **** 
1105:Generated_Source\PSoC4/UART_1.c ****     #else
1106:Generated_Source\PSoC4/UART_1.c **** 
1107:Generated_Source\PSoC4/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 37


 945              		.loc 1 1107 0
 946 000c C046     		nop
 947              	.L64:
 948              		.loc 1 1107 0 is_stmt 0 discriminator 1
 949 000e 074B     		ldr	r3, .L65
 950 0010 1B78     		ldrb	r3, [r3]
 951 0012 DBB2     		uxtb	r3, r3
 952 0014 1A00     		movs	r2, r3
 953 0016 0423     		movs	r3, #4
 954 0018 1340     		ands	r3, r2
 955 001a F8D1     		bne	.L64
1108:Generated_Source\PSoC4/UART_1.c ****         {
1109:Generated_Source\PSoC4/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/UART_1.c ****         }
1111:Generated_Source\PSoC4/UART_1.c **** 
1112:Generated_Source\PSoC4/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 956              		.loc 1 1113 0 is_stmt 1
 957 001c 044A     		ldr	r2, .L65+4
 958 001e FB1D     		adds	r3, r7, #7
 959 0020 1B78     		ldrb	r3, [r3]
 960 0022 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC4/UART_1.c **** 
1115:Generated_Source\PSoC4/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/UART_1.c ****     }
 961              		.loc 1 1116 0
 962 0024 C046     		nop
 963 0026 BD46     		mov	sp, r7
 964 0028 02B0     		add	sp, sp, #8
 965              		@ sp needed
 966 002a 80BD     		pop	{r7, pc}
 967              	.L66:
 968              		.align	2
 969              	.L65:
 970 002c 64000F40 		.word	1074724964
 971 0030 44000F40 		.word	1074724932
 972              		.cfi_endproc
 973              	.LFE20:
 974              		.size	UART_1_PutChar, .-UART_1_PutChar
 975              		.section	.text.UART_1_PutString,"ax",%progbits
 976              		.align	2
 977              		.global	UART_1_PutString
 978              		.code	16
 979              		.thumb_func
 980              		.type	UART_1_PutString, %function
 981              	UART_1_PutString:
 982              	.LFB21:
1117:Generated_Source\PSoC4/UART_1.c **** 
1118:Generated_Source\PSoC4/UART_1.c **** 
1119:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/UART_1.c ****     *
1123:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC4/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/UART_1.c ****     *
1126:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 38


1127:Generated_Source\PSoC4/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/UART_1.c ****     *
1129:Generated_Source\PSoC4/UART_1.c ****     * Return:
1130:Generated_Source\PSoC4/UART_1.c ****     *  None.
1131:Generated_Source\PSoC4/UART_1.c ****     *
1132:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC4/UART_1.c ****     *
1136:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC4/UART_1.c ****     *  No.
1138:Generated_Source\PSoC4/UART_1.c ****     *
1139:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/UART_1.c ****     *
1144:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/UART_1.c ****     {
 983              		.loc 1 1146 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 16
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987 0000 80B5     		push	{r7, lr}
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0002 84B0     		sub	sp, sp, #16
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC4/UART_1.c ****         uint16 bufIndex = 0u;
 996              		.loc 1 1147 0
 997 0008 0E23     		movs	r3, #14
 998 000a FB18     		adds	r3, r7, r3
 999 000c 0022     		movs	r2, #0
 1000 000e 1A80     		strh	r2, [r3]
1148:Generated_Source\PSoC4/UART_1.c **** 
1149:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1001              		.loc 1 1150 0
 1002 0010 104B     		ldr	r3, .L72
 1003 0012 1B78     		ldrb	r3, [r3]
 1004 0014 002B     		cmp	r3, #0
 1005 0016 18D0     		beq	.L71
1151:Generated_Source\PSoC4/UART_1.c ****         {
1152:Generated_Source\PSoC4/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC4/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 1006              		.loc 1 1153 0
 1007 0018 0FE0     		b	.L69
 1008              	.L70:
1154:Generated_Source\PSoC4/UART_1.c ****             {
1155:Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 1009              		.loc 1 1155 0
 1010 001a 0E23     		movs	r3, #14
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 39


 1011 001c FB18     		adds	r3, r7, r3
 1012 001e 1B88     		ldrh	r3, [r3]
 1013 0020 7A68     		ldr	r2, [r7, #4]
 1014 0022 D318     		adds	r3, r2, r3
 1015 0024 1B78     		ldrb	r3, [r3]
 1016 0026 1800     		movs	r0, r3
 1017 0028 FFF7FEFF 		bl	UART_1_PutChar
1156:Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 1018              		.loc 1 1156 0
 1019 002c 0E23     		movs	r3, #14
 1020 002e FB18     		adds	r3, r7, r3
 1021 0030 1A88     		ldrh	r2, [r3]
 1022 0032 0E23     		movs	r3, #14
 1023 0034 FB18     		adds	r3, r7, r3
 1024 0036 0132     		adds	r2, r2, #1
 1025 0038 1A80     		strh	r2, [r3]
 1026              	.L69:
1153:Generated_Source\PSoC4/UART_1.c ****             {
 1027              		.loc 1 1153 0
 1028 003a 0E23     		movs	r3, #14
 1029 003c FB18     		adds	r3, r7, r3
 1030 003e 1B88     		ldrh	r3, [r3]
 1031 0040 7A68     		ldr	r2, [r7, #4]
 1032 0042 D318     		adds	r3, r2, r3
 1033 0044 1B78     		ldrb	r3, [r3]
 1034 0046 002B     		cmp	r3, #0
 1035 0048 E7D1     		bne	.L70
 1036              	.L71:
1157:Generated_Source\PSoC4/UART_1.c ****             }
1158:Generated_Source\PSoC4/UART_1.c ****         }
1159:Generated_Source\PSoC4/UART_1.c ****     }
 1037              		.loc 1 1159 0
 1038 004a C046     		nop
 1039 004c BD46     		mov	sp, r7
 1040 004e 04B0     		add	sp, sp, #16
 1041              		@ sp needed
 1042 0050 80BD     		pop	{r7, pc}
 1043              	.L73:
 1044 0052 C046     		.align	2
 1045              	.L72:
 1046 0054 00000000 		.word	UART_1_initVar
 1047              		.cfi_endproc
 1048              	.LFE21:
 1049              		.size	UART_1_PutString, .-UART_1_PutString
 1050              		.section	.text.UART_1_PutArray,"ax",%progbits
 1051              		.align	2
 1052              		.global	UART_1_PutArray
 1053              		.code	16
 1054              		.thumb_func
 1055              		.type	UART_1_PutArray, %function
 1056              	UART_1_PutArray:
 1057              	.LFB22:
1160:Generated_Source\PSoC4/UART_1.c **** 
1161:Generated_Source\PSoC4/UART_1.c **** 
1162:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 40


1165:Generated_Source\PSoC4/UART_1.c ****     *
1166:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC4/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC4/UART_1.c ****     *
1170:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC4/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/UART_1.c ****     *
1175:Generated_Source\PSoC4/UART_1.c ****     * Return:
1176:Generated_Source\PSoC4/UART_1.c ****     *  None.
1177:Generated_Source\PSoC4/UART_1.c ****     *
1178:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC4/UART_1.c ****     *
1182:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC4/UART_1.c ****     *  No.
1184:Generated_Source\PSoC4/UART_1.c ****     *
1185:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC4/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/UART_1.c ****     *
1190:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/UART_1.c ****                                                                     
1193:Generated_Source\PSoC4/UART_1.c ****     {
 1058              		.loc 1 1193 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 16
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062 0000 80B5     		push	{r7, lr}
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 7, -8
 1065              		.cfi_offset 14, -4
 1066 0002 84B0     		sub	sp, sp, #16
 1067              		.cfi_def_cfa_offset 24
 1068 0004 00AF     		add	r7, sp, #0
 1069              		.cfi_def_cfa_register 7
 1070 0006 7860     		str	r0, [r7, #4]
 1071 0008 0A00     		movs	r2, r1
 1072 000a FB1C     		adds	r3, r7, #3
 1073 000c 1A70     		strb	r2, [r3]
1194:Generated_Source\PSoC4/UART_1.c ****         uint8 bufIndex = 0u;
 1074              		.loc 1 1194 0
 1075 000e 0F23     		movs	r3, #15
 1076 0010 FB18     		adds	r3, r7, r3
 1077 0012 0022     		movs	r2, #0
 1078 0014 1A70     		strb	r2, [r3]
1195:Generated_Source\PSoC4/UART_1.c **** 
1196:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1079              		.loc 1 1197 0
 1080 0016 104B     		ldr	r3, .L79
 1081 0018 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 41


 1082 001a 002B     		cmp	r3, #0
 1083 001c 17D0     		beq	.L78
1198:Generated_Source\PSoC4/UART_1.c ****         {
1199:Generated_Source\PSoC4/UART_1.c ****             while(bufIndex < byteCount)
 1084              		.loc 1 1199 0
 1085 001e 0FE0     		b	.L76
 1086              	.L77:
1200:Generated_Source\PSoC4/UART_1.c ****             {
1201:Generated_Source\PSoC4/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 1087              		.loc 1 1201 0
 1088 0020 0F23     		movs	r3, #15
 1089 0022 FB18     		adds	r3, r7, r3
 1090 0024 1B78     		ldrb	r3, [r3]
 1091 0026 7A68     		ldr	r2, [r7, #4]
 1092 0028 D318     		adds	r3, r2, r3
 1093 002a 1B78     		ldrb	r3, [r3]
 1094 002c 1800     		movs	r0, r3
 1095 002e FFF7FEFF 		bl	UART_1_PutChar
1202:Generated_Source\PSoC4/UART_1.c ****                 bufIndex++;
 1096              		.loc 1 1202 0
 1097 0032 0F23     		movs	r3, #15
 1098 0034 FB18     		adds	r3, r7, r3
 1099 0036 1A78     		ldrb	r2, [r3]
 1100 0038 0F23     		movs	r3, #15
 1101 003a FB18     		adds	r3, r7, r3
 1102 003c 0132     		adds	r2, r2, #1
 1103 003e 1A70     		strb	r2, [r3]
 1104              	.L76:
1199:Generated_Source\PSoC4/UART_1.c ****             {
 1105              		.loc 1 1199 0
 1106 0040 0F23     		movs	r3, #15
 1107 0042 FA18     		adds	r2, r7, r3
 1108 0044 FB1C     		adds	r3, r7, #3
 1109 0046 1278     		ldrb	r2, [r2]
 1110 0048 1B78     		ldrb	r3, [r3]
 1111 004a 9A42     		cmp	r2, r3
 1112 004c E8D3     		bcc	.L77
 1113              	.L78:
1203:Generated_Source\PSoC4/UART_1.c ****             }
1204:Generated_Source\PSoC4/UART_1.c ****         }
1205:Generated_Source\PSoC4/UART_1.c ****     }
 1114              		.loc 1 1205 0
 1115 004e C046     		nop
 1116 0050 BD46     		mov	sp, r7
 1117 0052 04B0     		add	sp, sp, #16
 1118              		@ sp needed
 1119 0054 80BD     		pop	{r7, pc}
 1120              	.L80:
 1121 0056 C046     		.align	2
 1122              	.L79:
 1123 0058 00000000 		.word	UART_1_initVar
 1124              		.cfi_endproc
 1125              	.LFE22:
 1126              		.size	UART_1_PutArray, .-UART_1_PutArray
 1127              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1128              		.align	2
 1129              		.global	UART_1_PutCRLF
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 42


 1130              		.code	16
 1131              		.thumb_func
 1132              		.type	UART_1_PutCRLF, %function
 1133              	UART_1_PutCRLF:
 1134              	.LFB23:
1206:Generated_Source\PSoC4/UART_1.c **** 
1207:Generated_Source\PSoC4/UART_1.c **** 
1208:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/UART_1.c ****     *
1212:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC4/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/UART_1.c ****     *
1216:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC4/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/UART_1.c ****     *
1219:Generated_Source\PSoC4/UART_1.c ****     * Return:
1220:Generated_Source\PSoC4/UART_1.c ****     *  None.
1221:Generated_Source\PSoC4/UART_1.c ****     *
1222:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC4/UART_1.c ****     *
1226:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC4/UART_1.c ****     *  No.
1228:Generated_Source\PSoC4/UART_1.c ****     *
1229:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/UART_1.c ****     {
 1135              		.loc 1 1231 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 8
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139 0000 80B5     		push	{r7, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 82B0     		sub	sp, sp, #8
 1144              		.cfi_def_cfa_offset 16
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 0200     		movs	r2, r0
 1148 0008 FB1D     		adds	r3, r7, #7
 1149 000a 1A70     		strb	r2, [r3]
1232:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1150              		.loc 1 1233 0
 1151 000c 094B     		ldr	r3, .L84
 1152 000e 1B78     		ldrb	r3, [r3]
 1153 0010 002B     		cmp	r3, #0
 1154 0012 0AD0     		beq	.L83
1234:Generated_Source\PSoC4/UART_1.c ****         {
1235:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(txDataByte);
 1155              		.loc 1 1235 0
 1156 0014 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 43


 1157 0016 1B78     		ldrb	r3, [r3]
 1158 0018 1800     		movs	r0, r3
 1159 001a FFF7FEFF 		bl	UART_1_PutChar
1236:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Du);
 1160              		.loc 1 1236 0
 1161 001e 0D20     		movs	r0, #13
 1162 0020 FFF7FEFF 		bl	UART_1_PutChar
1237:Generated_Source\PSoC4/UART_1.c ****             UART_1_PutChar(0x0Au);
 1163              		.loc 1 1237 0
 1164 0024 0A20     		movs	r0, #10
 1165 0026 FFF7FEFF 		bl	UART_1_PutChar
 1166              	.L83:
1238:Generated_Source\PSoC4/UART_1.c ****         }
1239:Generated_Source\PSoC4/UART_1.c ****     }
 1167              		.loc 1 1239 0
 1168 002a C046     		nop
 1169 002c BD46     		mov	sp, r7
 1170 002e 02B0     		add	sp, sp, #8
 1171              		@ sp needed
 1172 0030 80BD     		pop	{r7, pc}
 1173              	.L85:
 1174 0032 C046     		.align	2
 1175              	.L84:
 1176 0034 00000000 		.word	UART_1_initVar
 1177              		.cfi_endproc
 1178              	.LFE23:
 1179              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1180              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1181              		.align	2
 1182              		.global	UART_1_GetTxBufferSize
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	UART_1_GetTxBufferSize, %function
 1186              	UART_1_GetTxBufferSize:
 1187              	.LFB24:
1240:Generated_Source\PSoC4/UART_1.c **** 
1241:Generated_Source\PSoC4/UART_1.c **** 
1242:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/UART_1.c ****     *
1246:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC4/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/UART_1.c ****     *
1255:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC4/UART_1.c ****     *  None.
1257:Generated_Source\PSoC4/UART_1.c ****     *
1258:Generated_Source\PSoC4/UART_1.c ****     * Return:
1259:Generated_Source\PSoC4/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/UART_1.c ****     *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 44


1262:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/UART_1.c ****     *
1266:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC4/UART_1.c ****     *  No.
1268:Generated_Source\PSoC4/UART_1.c ****     *
1269:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC4/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/UART_1.c ****     *
1272:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/UART_1.c ****                                                             
1275:Generated_Source\PSoC4/UART_1.c ****     {
 1188              		.loc 1 1275 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 8
 1191              		@ frame_needed = 1, uses_anonymous_args = 0
 1192 0000 80B5     		push	{r7, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 7, -8
 1195              		.cfi_offset 14, -4
 1196 0002 82B0     		sub	sp, sp, #8
 1197              		.cfi_def_cfa_offset 16
 1198 0004 00AF     		add	r7, sp, #0
 1199              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC4/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC4/UART_1.c **** 
1278:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/UART_1.c **** 
1280:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC4/UART_1.c **** 
1283:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC4/UART_1.c ****         {
1285:Generated_Source\PSoC4/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC4/UART_1.c ****         }
1287:Generated_Source\PSoC4/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC4/UART_1.c ****         {
1289:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC4/UART_1.c ****         }
1291:Generated_Source\PSoC4/UART_1.c ****         else
1292:Generated_Source\PSoC4/UART_1.c ****         {
1293:Generated_Source\PSoC4/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC4/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC4/UART_1.c ****         }
1296:Generated_Source\PSoC4/UART_1.c **** 
1297:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC4/UART_1.c **** 
1299:Generated_Source\PSoC4/UART_1.c ****     #else
1300:Generated_Source\PSoC4/UART_1.c **** 
1301:Generated_Source\PSoC4/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 1200              		.loc 1 1301 0
 1201 0006 0F4A     		ldr	r2, .L91
 1202 0008 FB1D     		adds	r3, r7, #7
 1203 000a 1278     		ldrb	r2, [r2]
 1204 000c 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 45


1302:Generated_Source\PSoC4/UART_1.c **** 
1303:Generated_Source\PSoC4/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1205              		.loc 1 1304 0
 1206 000e FB1D     		adds	r3, r7, #7
 1207 0010 1B78     		ldrb	r3, [r3]
 1208 0012 0422     		movs	r2, #4
 1209 0014 1340     		ands	r3, r2
 1210 0016 03D0     		beq	.L87
1305:Generated_Source\PSoC4/UART_1.c ****         {
1306:Generated_Source\PSoC4/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 1211              		.loc 1 1306 0
 1212 0018 FB1D     		adds	r3, r7, #7
 1213 001a 0422     		movs	r2, #4
 1214 001c 1A70     		strb	r2, [r3]
 1215 001e 0BE0     		b	.L88
 1216              	.L87:
1307:Generated_Source\PSoC4/UART_1.c ****         }
1308:Generated_Source\PSoC4/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 1217              		.loc 1 1308 0
 1218 0020 FB1D     		adds	r3, r7, #7
 1219 0022 1B78     		ldrb	r3, [r3]
 1220 0024 0222     		movs	r2, #2
 1221 0026 1340     		ands	r3, r2
 1222 0028 03D0     		beq	.L89
1309:Generated_Source\PSoC4/UART_1.c ****         {
1310:Generated_Source\PSoC4/UART_1.c ****             size = 0u;
 1223              		.loc 1 1310 0
 1224 002a FB1D     		adds	r3, r7, #7
 1225 002c 0022     		movs	r2, #0
 1226 002e 1A70     		strb	r2, [r3]
 1227 0030 02E0     		b	.L88
 1228              	.L89:
1311:Generated_Source\PSoC4/UART_1.c ****         }
1312:Generated_Source\PSoC4/UART_1.c ****         else
1313:Generated_Source\PSoC4/UART_1.c ****         {
1314:Generated_Source\PSoC4/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/UART_1.c ****             size = 1u;
 1229              		.loc 1 1315 0
 1230 0032 FB1D     		adds	r3, r7, #7
 1231 0034 0122     		movs	r2, #1
 1232 0036 1A70     		strb	r2, [r3]
 1233              	.L88:
1316:Generated_Source\PSoC4/UART_1.c ****         }
1317:Generated_Source\PSoC4/UART_1.c **** 
1318:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/UART_1.c **** 
1320:Generated_Source\PSoC4/UART_1.c ****     return(size);
 1234              		.loc 1 1320 0
 1235 0038 FB1D     		adds	r3, r7, #7
 1236 003a 1B78     		ldrb	r3, [r3]
1321:Generated_Source\PSoC4/UART_1.c ****     }
 1237              		.loc 1 1321 0
 1238 003c 1800     		movs	r0, r3
 1239 003e BD46     		mov	sp, r7
 1240 0040 02B0     		add	sp, sp, #8
 1241              		@ sp needed
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 46


 1242 0042 80BD     		pop	{r7, pc}
 1243              	.L92:
 1244              		.align	2
 1245              	.L91:
 1246 0044 64000F40 		.word	1074724964
 1247              		.cfi_endproc
 1248              	.LFE24:
 1249              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1250              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1251              		.align	2
 1252              		.global	UART_1_ClearTxBuffer
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	UART_1_ClearTxBuffer, %function
 1256              	UART_1_ClearTxBuffer:
 1257              	.LFB25:
1322:Generated_Source\PSoC4/UART_1.c **** 
1323:Generated_Source\PSoC4/UART_1.c **** 
1324:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/UART_1.c ****     *
1328:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC4/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/UART_1.c ****     *
1331:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC4/UART_1.c ****     *  None.
1333:Generated_Source\PSoC4/UART_1.c ****     *
1334:Generated_Source\PSoC4/UART_1.c ****     * Return:
1335:Generated_Source\PSoC4/UART_1.c ****     *  None.
1336:Generated_Source\PSoC4/UART_1.c ****     *
1337:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC4/UART_1.c ****     *
1341:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC4/UART_1.c ****     *  No.
1343:Generated_Source\PSoC4/UART_1.c ****     *
1344:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC4/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/UART_1.c ****     *
1349:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC4/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/UART_1.c ****     *
1353:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/UART_1.c ****     {
 1258              		.loc 1 1355 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 8
 1261              		@ frame_needed = 1, uses_anonymous_args = 0
 1262 0000 90B5     		push	{r4, r7, lr}
 1263              		.cfi_def_cfa_offset 12
 1264              		.cfi_offset 4, -12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 47


 1265              		.cfi_offset 7, -8
 1266              		.cfi_offset 14, -4
 1267 0002 83B0     		sub	sp, sp, #12
 1268              		.cfi_def_cfa_offset 24
 1269 0004 00AF     		add	r7, sp, #0
 1270              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC4/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/UART_1.c **** 
1358:Generated_Source\PSoC4/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1271              		.loc 1 1358 0
 1272 0006 FC1D     		adds	r4, r7, #7
 1273 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1274 000c 0300     		movs	r3, r0
 1275 000e 2370     		strb	r3, [r4]
1359:Generated_Source\PSoC4/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1276              		.loc 1 1360 0
 1277 0010 0C4A     		ldr	r2, .L94
 1278 0012 0C4B     		ldr	r3, .L94
 1279 0014 1B78     		ldrb	r3, [r3]
 1280 0016 DBB2     		uxtb	r3, r3
 1281 0018 0121     		movs	r1, #1
 1282 001a 0B43     		orrs	r3, r1
 1283 001c DBB2     		uxtb	r3, r3
 1284 001e 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC4/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1285              		.loc 1 1361 0
 1286 0020 084A     		ldr	r2, .L94
 1287 0022 084B     		ldr	r3, .L94
 1288 0024 1B78     		ldrb	r3, [r3]
 1289 0026 DBB2     		uxtb	r3, r3
 1290 0028 0121     		movs	r1, #1
 1291 002a 8B43     		bics	r3, r1
 1292 002c DBB2     		uxtb	r3, r3
 1293 002e 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC4/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1294              		.loc 1 1362 0
 1295 0030 FB1D     		adds	r3, r7, #7
 1296 0032 1B78     		ldrb	r3, [r3]
 1297 0034 1800     		movs	r0, r3
 1298 0036 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC4/UART_1.c **** 
1364:Generated_Source\PSoC4/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/UART_1.c **** 
1366:Generated_Source\PSoC4/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC4/UART_1.c **** 
1369:Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC4/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC4/UART_1.c **** 
1372:Generated_Source\PSoC4/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC4/UART_1.c **** 
1375:Generated_Source\PSoC4/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/UART_1.c ****     }
 1299              		.loc 1 1376 0
 1300 003a C046     		nop
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 48


 1301 003c BD46     		mov	sp, r7
 1302 003e 03B0     		add	sp, sp, #12
 1303              		@ sp needed
 1304 0040 90BD     		pop	{r4, r7, pc}
 1305              	.L95:
 1306 0042 C046     		.align	2
 1307              	.L94:
 1308 0044 94000F40 		.word	1074725012
 1309              		.cfi_endproc
 1310              	.LFE25:
 1311              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1312              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1313              		.align	2
 1314              		.global	UART_1_SendBreak
 1315              		.code	16
 1316              		.thumb_func
 1317              		.type	UART_1_SendBreak, %function
 1318              	UART_1_SendBreak:
 1319              	.LFB26:
1377:Generated_Source\PSoC4/UART_1.c **** 
1378:Generated_Source\PSoC4/UART_1.c **** 
1379:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/UART_1.c ****     *
1383:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC4/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/UART_1.c ****     *
1386:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC4/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC4/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/UART_1.c ****     *
1398:Generated_Source\PSoC4/UART_1.c ****     * Return:
1399:Generated_Source\PSoC4/UART_1.c ****     *  None.
1400:Generated_Source\PSoC4/UART_1.c ****     *
1401:Generated_Source\PSoC4/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC4/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC4/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/UART_1.c ****     *
1406:Generated_Source\PSoC4/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC4/UART_1.c ****     *  No.
1408:Generated_Source\PSoC4/UART_1.c ****     *
1409:Generated_Source\PSoC4/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC4/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC4/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC4/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 49


1415:Generated_Source\PSoC4/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC4/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/UART_1.c ****     *     operation
1419:Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC4/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/UART_1.c ****     *
1432:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC4/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC4/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/UART_1.c ****     *
1439:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/UART_1.c ****     {
 1320              		.loc 1 1441 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 16
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
 1324 0000 80B5     		push	{r7, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 84B0     		sub	sp, sp, #16
 1329              		.cfi_def_cfa_offset 24
 1330 0004 00AF     		add	r7, sp, #0
 1331              		.cfi_def_cfa_register 7
 1332 0006 0200     		movs	r2, r0
 1333 0008 FB1D     		adds	r3, r7, #7
 1334 000a 1A70     		strb	r2, [r3]
1442:Generated_Source\PSoC4/UART_1.c **** 
1443:Generated_Source\PSoC4/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/UART_1.c ****         if(UART_1_initVar != 0u)
 1335              		.loc 1 1444 0
 1336 000c 254B     		ldr	r3, .L105
 1337 000e 1B78     		ldrb	r3, [r3]
 1338 0010 002B     		cmp	r3, #0
 1339 0012 43D0     		beq	.L104
 1340              	.LBB2:
1445:Generated_Source\PSoC4/UART_1.c ****         {
1446:Generated_Source\PSoC4/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/UART_1.c **** 
1450:Generated_Source\PSoC4/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 50


1451:Generated_Source\PSoC4/UART_1.c **** 
1452:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/UART_1.c ****             {
1455:Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC4/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/UART_1.c **** 
1461:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/UART_1.c ****                 {
1463:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC4/UART_1.c ****                 }
1465:Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/UART_1.c ****             }
1467:Generated_Source\PSoC4/UART_1.c **** 
1468:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/UART_1.c ****             {
1471:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/UART_1.c ****                 {
1473:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC4/UART_1.c ****                 }
1475:Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC4/UART_1.c ****             }
1477:Generated_Source\PSoC4/UART_1.c **** 
1478:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/UART_1.c ****             {
1482:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC4/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/UART_1.c ****             }
1485:Generated_Source\PSoC4/UART_1.c **** 
1486:Generated_Source\PSoC4/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/UART_1.c **** 
1488:Generated_Source\PSoC4/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/UART_1.c **** 
1490:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1341              		.loc 1 1490 0
 1342 0014 FB1D     		adds	r3, r7, #7
 1343 0016 1B78     		ldrb	r3, [r3]
 1344 0018 002B     		cmp	r3, #0
 1345 001a 03D0     		beq	.L98
 1346              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1347 001c FB1D     		adds	r3, r7, #7
 1348 001e 1B78     		ldrb	r3, [r3]
 1349 0020 032B     		cmp	r3, #3
 1350 0022 15D1     		bne	.L99
 1351              	.L98:
1491:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/UART_1.c ****             {
1493:Generated_Source\PSoC4/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 51


1497:Generated_Source\PSoC4/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/UART_1.c **** 
1500:Generated_Source\PSoC4/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 1352              		.loc 1 1501 0 is_stmt 1
 1353 0024 204B     		ldr	r3, .L105+4
 1354 0026 1B78     		ldrb	r3, [r3]
 1355 0028 DAB2     		uxtb	r2, r3
 1356 002a 204B     		ldr	r3, .L105+8
 1357 002c 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1358              		.loc 1 1502 0
 1359 002e 1E4B     		ldr	r3, .L105+4
 1360 0030 6722     		movs	r2, #103
 1361 0032 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC4/UART_1.c ****                 #else
1504:Generated_Source\PSoC4/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/UART_1.c **** 
1508:Generated_Source\PSoC4/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1362              		.loc 1 1509 0
 1363 0034 1E4B     		ldr	r3, .L105+12
 1364 0036 0022     		movs	r2, #0
 1365 0038 1A70     		strb	r2, [r3]
 1366              	.L100:
1510:Generated_Source\PSoC4/UART_1.c **** 
1511:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/UART_1.c ****                 {
1513:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1367              		.loc 1 1513 0 discriminator 1
 1368 003a 1E4A     		ldr	r2, .L105+16
 1369 003c 0F23     		movs	r3, #15
 1370 003e FB18     		adds	r3, r7, r3
 1371 0040 1278     		ldrb	r2, [r2]
 1372 0042 1A70     		strb	r2, [r3]
1514:Generated_Source\PSoC4/UART_1.c ****                 }
1515:Generated_Source\PSoC4/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1373              		.loc 1 1515 0 discriminator 1
 1374 0044 0F23     		movs	r3, #15
 1375 0046 FB18     		adds	r3, r7, r3
 1376 0048 1B78     		ldrb	r3, [r3]
 1377 004a 0222     		movs	r2, #2
 1378 004c 1340     		ands	r3, r2
 1379 004e F4D1     		bne	.L100
 1380              	.L99:
1516:Generated_Source\PSoC4/UART_1.c ****             }
1517:Generated_Source\PSoC4/UART_1.c **** 
1518:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1381              		.loc 1 1518 0
 1382 0050 FB1D     		adds	r3, r7, #7
 1383 0052 1B78     		ldrb	r3, [r3]
 1384 0054 012B     		cmp	r3, #1
 1385 0056 03D0     		beq	.L101
 1386              		.loc 1 1518 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 52


 1387 0058 FB1D     		adds	r3, r7, #7
 1388 005a 1B78     		ldrb	r3, [r3]
 1389 005c 032B     		cmp	r3, #3
 1390 005e 0DD1     		bne	.L102
 1391              	.L101:
1519:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/UART_1.c ****             {
1521:Generated_Source\PSoC4/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/UART_1.c ****                 {
1523:Generated_Source\PSoC4/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1392              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1393 0060 144A     		ldr	r2, .L105+16
 1394 0062 0F23     		movs	r3, #15
 1395 0064 FB18     		adds	r3, r7, r3
 1396 0066 1278     		ldrb	r2, [r2]
 1397 0068 1A70     		strb	r2, [r3]
1524:Generated_Source\PSoC4/UART_1.c ****                 }
1525:Generated_Source\PSoC4/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1398              		.loc 1 1525 0 discriminator 1
 1399 006a 0F23     		movs	r3, #15
 1400 006c FB18     		adds	r3, r7, r3
 1401 006e 1B78     		ldrb	r3, [r3]
 1402 0070 DB43     		mvns	r3, r3
 1403 0072 DBB2     		uxtb	r3, r3
 1404 0074 1A00     		movs	r2, r3
 1405 0076 0123     		movs	r3, #1
 1406 0078 1340     		ands	r3, r2
 1407 007a F1D1     		bne	.L101
 1408              	.L102:
1526:Generated_Source\PSoC4/UART_1.c ****             }
1527:Generated_Source\PSoC4/UART_1.c **** 
1528:Generated_Source\PSoC4/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1409              		.loc 1 1528 0
 1410 007c FB1D     		adds	r3, r7, #7
 1411 007e 1B78     		ldrb	r3, [r3]
 1412 0080 012B     		cmp	r3, #1
 1413 0082 07D0     		beq	.L103
 1414              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1415 0084 FB1D     		adds	r3, r7, #7
 1416 0086 1B78     		ldrb	r3, [r3]
 1417 0088 022B     		cmp	r3, #2
 1418 008a 03D0     		beq	.L103
1529:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1419              		.loc 1 1529 0 is_stmt 1
 1420 008c FB1D     		adds	r3, r7, #7
 1421 008e 1B78     		ldrb	r3, [r3]
 1422 0090 032B     		cmp	r3, #3
 1423 0092 03D1     		bne	.L104
 1424              	.L103:
1530:Generated_Source\PSoC4/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC4/UART_1.c ****             {
1532:Generated_Source\PSoC4/UART_1.c **** 
1533:Generated_Source\PSoC4/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1425              		.loc 1 1534 0
 1426 0094 044A     		ldr	r2, .L105+4
 1427 0096 054B     		ldr	r3, .L105+8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 53


 1428 0098 1B78     		ldrb	r3, [r3]
 1429 009a 1370     		strb	r3, [r2]
 1430              	.L104:
 1431              	.LBE2:
1535:Generated_Source\PSoC4/UART_1.c ****             #else
1536:Generated_Source\PSoC4/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/UART_1.c **** 
1539:Generated_Source\PSoC4/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC4/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/UART_1.c ****             }
1545:Generated_Source\PSoC4/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC4/UART_1.c ****         }
1547:Generated_Source\PSoC4/UART_1.c ****     }
 1432              		.loc 1 1547 0
 1433 009c C046     		nop
 1434 009e BD46     		mov	sp, r7
 1435 00a0 04B0     		add	sp, sp, #16
 1436              		@ sp needed
 1437 00a2 80BD     		pop	{r7, pc}
 1438              	.L106:
 1439              		.align	2
 1440              	.L105:
 1441 00a4 00000000 		.word	UART_1_initVar
 1442 00a8 31000F40 		.word	1074724913
 1443 00ac 01000000 		.word	txPeriod.5084
 1444 00b0 44000F40 		.word	1074724932
 1445 00b4 64000F40 		.word	1074724964
 1446              		.cfi_endproc
 1447              	.LFE26:
 1448              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1449              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1450              		.align	2
 1451              		.global	UART_1_SetTxAddressMode
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	UART_1_SetTxAddressMode, %function
 1455              	UART_1_SetTxAddressMode:
 1456              	.LFB27:
1548:Generated_Source\PSoC4/UART_1.c **** 
1549:Generated_Source\PSoC4/UART_1.c **** 
1550:Generated_Source\PSoC4/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC4/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/UART_1.c ****     *
1554:Generated_Source\PSoC4/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC4/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/UART_1.c ****     *
1557:Generated_Source\PSoC4/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC4/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC4/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/UART_1.c ****     *                                    byte as an address.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 54


1563:Generated_Source\PSoC4/UART_1.c ****     *
1564:Generated_Source\PSoC4/UART_1.c ****     * Return:
1565:Generated_Source\PSoC4/UART_1.c ****     *  None.
1566:Generated_Source\PSoC4/UART_1.c ****     *
1567:Generated_Source\PSoC4/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC4/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/UART_1.c ****     *  register.
1570:Generated_Source\PSoC4/UART_1.c ****     *
1571:Generated_Source\PSoC4/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/UART_1.c ****     {
 1457              		.loc 1 1573 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 8
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461 0000 80B5     		push	{r7, lr}
 1462              		.cfi_def_cfa_offset 8
 1463              		.cfi_offset 7, -8
 1464              		.cfi_offset 14, -4
 1465 0002 82B0     		sub	sp, sp, #8
 1466              		.cfi_def_cfa_offset 16
 1467 0004 00AF     		add	r7, sp, #0
 1468              		.cfi_def_cfa_register 7
 1469 0006 0200     		movs	r2, r0
 1470 0008 FB1D     		adds	r3, r7, #7
 1471 000a 1A70     		strb	r2, [r3]
1574:Generated_Source\PSoC4/UART_1.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/UART_1.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/UART_1.c ****         {
1577:Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:Generated_Source\PSoC4/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/UART_1.c ****         }
1582:Generated_Source\PSoC4/UART_1.c ****         else
1583:Generated_Source\PSoC4/UART_1.c ****         {
1584:Generated_Source\PSoC4/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:Generated_Source\PSoC4/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:Generated_Source\PSoC4/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/UART_1.c ****         }
1589:Generated_Source\PSoC4/UART_1.c ****     }
 1472              		.loc 1 1589 0
 1473 000c C046     		nop
 1474 000e BD46     		mov	sp, r7
 1475 0010 02B0     		add	sp, sp, #8
 1476              		@ sp needed
 1477 0012 80BD     		pop	{r7, pc}
 1478              		.cfi_endproc
 1479              	.LFE27:
 1480              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1481              		.bss
 1482              	txPeriod.5084:
 1483 0001 00       		.space	1
 1484              		.text
 1485              	.Letext0:
 1486              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 55


 1487              		.section	.debug_info,"",%progbits
 1488              	.Ldebug_info0:
 1489 0000 06050000 		.4byte	0x506
 1490 0004 0400     		.2byte	0x4
 1491 0006 00000000 		.4byte	.Ldebug_abbrev0
 1492 000a 04       		.byte	0x4
 1493 000b 01       		.uleb128 0x1
 1494 000c D5010000 		.4byte	.LASF61
 1495 0010 0C       		.byte	0xc
 1496 0011 11010000 		.4byte	.LASF62
 1497 0015 03030000 		.4byte	.LASF63
 1498 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1499 001d 00000000 		.4byte	0
 1500 0021 00000000 		.4byte	.Ldebug_line0
 1501 0025 02       		.uleb128 0x2
 1502 0026 01       		.byte	0x1
 1503 0027 06       		.byte	0x6
 1504 0028 9C000000 		.4byte	.LASF0
 1505 002c 02       		.uleb128 0x2
 1506 002d 01       		.byte	0x1
 1507 002e 08       		.byte	0x8
 1508 002f C1030000 		.4byte	.LASF1
 1509 0033 02       		.uleb128 0x2
 1510 0034 02       		.byte	0x2
 1511 0035 05       		.byte	0x5
 1512 0036 CF030000 		.4byte	.LASF2
 1513 003a 02       		.uleb128 0x2
 1514 003b 02       		.byte	0x2
 1515 003c 07       		.byte	0x7
 1516 003d 71010000 		.4byte	.LASF3
 1517 0041 02       		.uleb128 0x2
 1518 0042 04       		.byte	0x4
 1519 0043 05       		.byte	0x5
 1520 0044 C0000000 		.4byte	.LASF4
 1521 0048 02       		.uleb128 0x2
 1522 0049 04       		.byte	0x4
 1523 004a 07       		.byte	0x7
 1524 004b 5A010000 		.4byte	.LASF5
 1525 004f 02       		.uleb128 0x2
 1526 0050 08       		.byte	0x8
 1527 0051 05       		.byte	0x5
 1528 0052 8E000000 		.4byte	.LASF6
 1529 0056 02       		.uleb128 0x2
 1530 0057 08       		.byte	0x8
 1531 0058 07       		.byte	0x7
 1532 0059 60000000 		.4byte	.LASF7
 1533 005d 03       		.uleb128 0x3
 1534 005e 04       		.byte	0x4
 1535 005f 05       		.byte	0x5
 1536 0060 696E7400 		.ascii	"int\000"
 1537 0064 02       		.uleb128 0x2
 1538 0065 04       		.byte	0x4
 1539 0066 07       		.byte	0x7
 1540 0067 39010000 		.4byte	.LASF8
 1541 006b 04       		.uleb128 0x4
 1542 006c D6000000 		.4byte	.LASF9
 1543 0070 02       		.byte	0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 56


 1544 0071 D201     		.2byte	0x1d2
 1545 0073 2C000000 		.4byte	0x2c
 1546 0077 04       		.uleb128 0x4
 1547 0078 00000000 		.4byte	.LASF10
 1548 007c 02       		.byte	0x2
 1549 007d D301     		.2byte	0x1d3
 1550 007f 3A000000 		.4byte	0x3a
 1551 0083 02       		.uleb128 0x2
 1552 0084 04       		.byte	0x4
 1553 0085 04       		.byte	0x4
 1554 0086 78030000 		.4byte	.LASF11
 1555 008a 02       		.uleb128 0x2
 1556 008b 08       		.byte	0x8
 1557 008c 04       		.byte	0x4
 1558 008d DC000000 		.4byte	.LASF12
 1559 0091 04       		.uleb128 0x4
 1560 0092 31040000 		.4byte	.LASF13
 1561 0096 02       		.byte	0x2
 1562 0097 E301     		.2byte	0x1e3
 1563 0099 9D000000 		.4byte	0x9d
 1564 009d 02       		.uleb128 0x2
 1565 009e 01       		.byte	0x1
 1566 009f 08       		.byte	0x8
 1567 00a0 2C040000 		.4byte	.LASF14
 1568 00a4 04       		.uleb128 0x4
 1569 00a5 BC030000 		.4byte	.LASF15
 1570 00a9 02       		.byte	0x2
 1571 00aa 7C02     		.2byte	0x27c
 1572 00ac B0000000 		.4byte	0xb0
 1573 00b0 05       		.uleb128 0x5
 1574 00b1 6B000000 		.4byte	0x6b
 1575 00b5 02       		.uleb128 0x2
 1576 00b6 08       		.byte	0x8
 1577 00b7 04       		.byte	0x4
 1578 00b8 CC020000 		.4byte	.LASF16
 1579 00bc 02       		.uleb128 0x2
 1580 00bd 04       		.byte	0x4
 1581 00be 07       		.byte	0x7
 1582 00bf 99020000 		.4byte	.LASF17
 1583 00c3 06       		.uleb128 0x6
 1584 00c4 C9000000 		.4byte	.LASF18
 1585 00c8 01       		.byte	0x1
 1586 00c9 4C       		.byte	0x4c
 1587 00ca 00000000 		.4byte	.LFB1
 1588 00ce 24000000 		.4byte	.LFE1-.LFB1
 1589 00d2 01       		.uleb128 0x1
 1590 00d3 9C       		.byte	0x9c
 1591 00d4 07       		.uleb128 0x7
 1592 00d5 37040000 		.4byte	.LASF19
 1593 00d9 01       		.byte	0x1
 1594 00da 6A       		.byte	0x6a
 1595 00db 00000000 		.4byte	.LFB2
 1596 00df 3C000000 		.4byte	.LFE2-.LFB2
 1597 00e3 01       		.uleb128 0x1
 1598 00e4 9C       		.byte	0x9c
 1599 00e5 08       		.uleb128 0x8
 1600 00e6 84010000 		.4byte	.LASF20
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 57


 1601 00ea 01       		.byte	0x1
 1602 00eb B7       		.byte	0xb7
 1603 00ec 00000000 		.4byte	.LFB3
 1604 00f0 64000000 		.4byte	.LFE3-.LFB3
 1605 00f4 01       		.uleb128 0x1
 1606 00f5 9C       		.byte	0x9c
 1607 00f6 09010000 		.4byte	0x109
 1608 00fa 09       		.uleb128 0x9
 1609 00fb 43040000 		.4byte	.LASF22
 1610 00ff 01       		.byte	0x1
 1611 0100 B9       		.byte	0xb9
 1612 0101 6B000000 		.4byte	0x6b
 1613 0105 02       		.uleb128 0x2
 1614 0106 91       		.byte	0x91
 1615 0107 6F       		.sleb128 -17
 1616 0108 00       		.byte	0
 1617 0109 08       		.uleb128 0x8
 1618 010a 63020000 		.4byte	.LASF21
 1619 010e 01       		.byte	0x1
 1620 010f F0       		.byte	0xf0
 1621 0110 00000000 		.4byte	.LFB4
 1622 0114 64000000 		.4byte	.LFE4-.LFB4
 1623 0118 01       		.uleb128 0x1
 1624 0119 9C       		.byte	0x9c
 1625 011a 2D010000 		.4byte	0x12d
 1626 011e 09       		.uleb128 0x9
 1627 011f 43040000 		.4byte	.LASF22
 1628 0123 01       		.byte	0x1
 1629 0124 F2       		.byte	0xf2
 1630 0125 6B000000 		.4byte	0x6b
 1631 0129 02       		.uleb128 0x2
 1632 012a 91       		.byte	0x91
 1633 012b 6F       		.sleb128 -17
 1634 012c 00       		.byte	0
 1635 012d 0A       		.uleb128 0xa
 1636 012e BA010000 		.4byte	.LASF33
 1637 0132 01       		.byte	0x1
 1638 0133 2701     		.2byte	0x127
 1639 0135 6B000000 		.4byte	0x6b
 1640 0139 00000000 		.4byte	.LFB5
 1641 013d 0C000000 		.4byte	.LFE5-.LFB5
 1642 0141 01       		.uleb128 0x1
 1643 0142 9C       		.byte	0x9c
 1644 0143 0B       		.uleb128 0xb
 1645 0144 D9030000 		.4byte	.LASF23
 1646 0148 01       		.byte	0x1
 1647 0149 3F01     		.2byte	0x13f
 1648 014b 00000000 		.4byte	.LFB6
 1649 014f 14000000 		.4byte	.LFE6-.LFB6
 1650 0153 01       		.uleb128 0x1
 1651 0154 9C       		.byte	0x9c
 1652 0155 69010000 		.4byte	0x169
 1653 0159 0C       		.uleb128 0xc
 1654 015a EF000000 		.4byte	.LASF25
 1655 015e 01       		.byte	0x1
 1656 015f 3F01     		.2byte	0x13f
 1657 0161 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 58


 1658 0165 02       		.uleb128 0x2
 1659 0166 91       		.byte	0x91
 1660 0167 77       		.sleb128 -9
 1661 0168 00       		.byte	0
 1662 0169 0B       		.uleb128 0xb
 1663 016a F7000000 		.4byte	.LASF24
 1664 016e 01       		.byte	0x1
 1665 016f 6701     		.2byte	0x167
 1666 0171 00000000 		.4byte	.LFB7
 1667 0175 20000000 		.4byte	.LFE7-.LFB7
 1668 0179 01       		.uleb128 0x1
 1669 017a 9C       		.byte	0x9c
 1670 017b 8F010000 		.4byte	0x18f
 1671 017f 0C       		.uleb128 0xc
 1672 0180 B3010000 		.4byte	.LASF26
 1673 0184 01       		.byte	0x1
 1674 0185 6701     		.2byte	0x167
 1675 0187 6B000000 		.4byte	0x6b
 1676 018b 02       		.uleb128 0x2
 1677 018c 91       		.byte	0x91
 1678 018d 77       		.sleb128 -9
 1679 018e 00       		.byte	0
 1680 018f 0D       		.uleb128 0xd
 1681 0190 4E000000 		.4byte	.LASF28
 1682 0194 01       		.byte	0x1
 1683 0195 8801     		.2byte	0x188
 1684 0197 6B000000 		.4byte	0x6b
 1685 019b 00000000 		.4byte	.LFB8
 1686 019f 20000000 		.4byte	.LFE8-.LFB8
 1687 01a3 01       		.uleb128 0x1
 1688 01a4 9C       		.byte	0x9c
 1689 01a5 B9010000 		.4byte	0x1b9
 1690 01a9 0E       		.uleb128 0xe
 1691 01aa 25040000 		.4byte	.LASF27
 1692 01ae 01       		.byte	0x1
 1693 01af 8A01     		.2byte	0x18a
 1694 01b1 6B000000 		.4byte	0x6b
 1695 01b5 02       		.uleb128 0x2
 1696 01b6 91       		.byte	0x91
 1697 01b7 77       		.sleb128 -9
 1698 01b8 00       		.byte	0
 1699 01b9 0D       		.uleb128 0xd
 1700 01ba 5B040000 		.4byte	.LASF29
 1701 01be 01       		.byte	0x1
 1702 01bf E501     		.2byte	0x1e5
 1703 01c1 6B000000 		.4byte	0x6b
 1704 01c5 00000000 		.4byte	.LFB9
 1705 01c9 24000000 		.4byte	.LFE9-.LFB9
 1706 01cd 01       		.uleb128 0x1
 1707 01ce 9C       		.byte	0x9c
 1708 01cf E3010000 		.4byte	0x1e3
 1709 01d3 0E       		.uleb128 0xe
 1710 01d4 54040000 		.4byte	.LASF30
 1711 01d8 01       		.byte	0x1
 1712 01d9 E701     		.2byte	0x1e7
 1713 01db 6B000000 		.4byte	0x6b
 1714 01df 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 59


 1715 01e0 91       		.byte	0x91
 1716 01e1 77       		.sleb128 -9
 1717 01e2 00       		.byte	0
 1718 01e3 0D       		.uleb128 0xd
 1719 01e4 6F040000 		.4byte	.LASF31
 1720 01e8 01       		.byte	0x1
 1721 01e9 1402     		.2byte	0x214
 1722 01eb 6B000000 		.4byte	0x6b
 1723 01ef 00000000 		.4byte	.LFB10
 1724 01f3 4C000000 		.4byte	.LFE10-.LFB10
 1725 01f7 01       		.uleb128 0x1
 1726 01f8 9C       		.byte	0x9c
 1727 01f9 1C020000 		.4byte	0x21c
 1728 01fd 0E       		.uleb128 0xe
 1729 01fe 25040000 		.4byte	.LASF27
 1730 0202 01       		.byte	0x1
 1731 0203 1602     		.2byte	0x216
 1732 0205 6B000000 		.4byte	0x6b
 1733 0209 02       		.uleb128 0x2
 1734 020a 91       		.byte	0x91
 1735 020b 77       		.sleb128 -9
 1736 020c 0E       		.uleb128 0xe
 1737 020d E0020000 		.4byte	.LASF32
 1738 0211 01       		.byte	0x1
 1739 0212 1702     		.2byte	0x217
 1740 0214 6B000000 		.4byte	0x6b
 1741 0218 02       		.uleb128 0x2
 1742 0219 91       		.byte	0x91
 1743 021a 76       		.sleb128 -10
 1744 021b 00       		.byte	0
 1745 021c 0F       		.uleb128 0xf
 1746 021d 6F020000 		.4byte	.LASF34
 1747 0221 01       		.byte	0x1
 1748 0222 7A02     		.2byte	0x27a
 1749 0224 77000000 		.4byte	0x77
 1750 0228 00000000 		.4byte	.LFB11
 1751 022c 22000000 		.4byte	.LFE11-.LFB11
 1752 0230 01       		.uleb128 0x1
 1753 0231 9C       		.byte	0x9c
 1754 0232 0D       		.uleb128 0xd
 1755 0233 0E040000 		.4byte	.LASF35
 1756 0237 01       		.byte	0x1
 1757 0238 AB02     		.2byte	0x2ab
 1758 023a 6B000000 		.4byte	0x6b
 1759 023e 00000000 		.4byte	.LFB12
 1760 0242 30000000 		.4byte	.LFE12-.LFB12
 1761 0246 01       		.uleb128 0x1
 1762 0247 9C       		.byte	0x9c
 1763 0248 5C020000 		.4byte	0x25c
 1764 024c 0E       		.uleb128 0xe
 1765 024d 6C010000 		.4byte	.LASF36
 1766 0251 01       		.byte	0x1
 1767 0252 AE02     		.2byte	0x2ae
 1768 0254 6B000000 		.4byte	0x6b
 1769 0258 02       		.uleb128 0x2
 1770 0259 91       		.byte	0x91
 1771 025a 77       		.sleb128 -9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 60


 1772 025b 00       		.byte	0
 1773 025c 10       		.uleb128 0x10
 1774 025d 8F030000 		.4byte	.LASF37
 1775 0261 01       		.byte	0x1
 1776 0262 F502     		.2byte	0x2f5
 1777 0264 00000000 		.4byte	.LFB13
 1778 0268 48000000 		.4byte	.LFE13-.LFB13
 1779 026c 01       		.uleb128 0x1
 1780 026d 9C       		.byte	0x9c
 1781 026e 82020000 		.4byte	0x282
 1782 0272 0E       		.uleb128 0xe
 1783 0273 43040000 		.4byte	.LASF22
 1784 0277 01       		.byte	0x1
 1785 0278 F702     		.2byte	0x2f7
 1786 027a 6B000000 		.4byte	0x6b
 1787 027e 02       		.uleb128 0x2
 1788 027f 91       		.byte	0x91
 1789 0280 6F       		.sleb128 -17
 1790 0281 00       		.byte	0
 1791 0282 0B       		.uleb128 0xb
 1792 0283 A4030000 		.4byte	.LASF38
 1793 0287 01       		.byte	0x1
 1794 0288 2D03     		.2byte	0x32d
 1795 028a 00000000 		.4byte	.LFB14
 1796 028e 14000000 		.4byte	.LFE14-.LFB14
 1797 0292 01       		.uleb128 0x1
 1798 0293 9C       		.byte	0x9c
 1799 0294 A8020000 		.4byte	0x2a8
 1800 0298 0C       		.uleb128 0xc
 1801 0299 E3000000 		.4byte	.LASF39
 1802 029d 01       		.byte	0x1
 1803 029e 2D03     		.2byte	0x32d
 1804 02a0 6B000000 		.4byte	0x6b
 1805 02a4 02       		.uleb128 0x2
 1806 02a5 91       		.byte	0x91
 1807 02a6 77       		.sleb128 -9
 1808 02a7 00       		.byte	0
 1809 02a8 0B       		.uleb128 0xb
 1810 02a9 A2020000 		.4byte	.LASF40
 1811 02ad 01       		.byte	0x1
 1812 02ae 5903     		.2byte	0x359
 1813 02b0 00000000 		.4byte	.LFB15
 1814 02b4 20000000 		.4byte	.LFE15-.LFB15
 1815 02b8 01       		.uleb128 0x1
 1816 02b9 9C       		.byte	0x9c
 1817 02ba CE020000 		.4byte	0x2ce
 1818 02be 0C       		.uleb128 0xc
 1819 02bf D8020000 		.4byte	.LASF41
 1820 02c3 01       		.byte	0x1
 1821 02c4 5903     		.2byte	0x359
 1822 02c6 6B000000 		.4byte	0x6b
 1823 02ca 02       		.uleb128 0x2
 1824 02cb 91       		.byte	0x91
 1825 02cc 77       		.sleb128 -9
 1826 02cd 00       		.byte	0
 1827 02ce 0B       		.uleb128 0xb
 1828 02cf B7020000 		.4byte	.LASF42
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 61


 1829 02d3 01       		.byte	0x1
 1830 02d4 6D03     		.2byte	0x36d
 1831 02d6 00000000 		.4byte	.LFB16
 1832 02da 20000000 		.4byte	.LFE16-.LFB16
 1833 02de 01       		.uleb128 0x1
 1834 02df 9C       		.byte	0x9c
 1835 02e0 F4020000 		.4byte	0x2f4
 1836 02e4 0C       		.uleb128 0xc
 1837 02e5 D8020000 		.4byte	.LASF41
 1838 02e9 01       		.byte	0x1
 1839 02ea 6D03     		.2byte	0x36d
 1840 02ec 6B000000 		.4byte	0x6b
 1841 02f0 02       		.uleb128 0x2
 1842 02f1 91       		.byte	0x91
 1843 02f2 77       		.sleb128 -9
 1844 02f3 00       		.byte	0
 1845 02f4 0B       		.uleb128 0xb
 1846 02f5 E9020000 		.4byte	.LASF43
 1847 02f9 01       		.byte	0x1
 1848 02fa 8C03     		.2byte	0x38c
 1849 02fc 00000000 		.4byte	.LFB17
 1850 0300 20000000 		.4byte	.LFE17-.LFB17
 1851 0304 01       		.uleb128 0x1
 1852 0305 9C       		.byte	0x9c
 1853 0306 1A030000 		.4byte	0x31a
 1854 030a 0C       		.uleb128 0xc
 1855 030b B3010000 		.4byte	.LASF26
 1856 030f 01       		.byte	0x1
 1857 0310 8C03     		.2byte	0x38c
 1858 0312 6B000000 		.4byte	0x6b
 1859 0316 02       		.uleb128 0x2
 1860 0317 91       		.byte	0x91
 1861 0318 77       		.sleb128 -9
 1862 0319 00       		.byte	0
 1863 031a 0B       		.uleb128 0xb
 1864 031b 7E020000 		.4byte	.LASF44
 1865 031f 01       		.byte	0x1
 1866 0320 AE03     		.2byte	0x3ae
 1867 0322 00000000 		.4byte	.LFB18
 1868 0326 2C000000 		.4byte	.LFE18-.LFB18
 1869 032a 01       		.uleb128 0x1
 1870 032b 9C       		.byte	0x9c
 1871 032c 40030000 		.4byte	0x340
 1872 0330 0C       		.uleb128 0xc
 1873 0331 1C000000 		.4byte	.LASF45
 1874 0335 01       		.byte	0x1
 1875 0336 AE03     		.2byte	0x3ae
 1876 0338 6B000000 		.4byte	0x6b
 1877 033c 02       		.uleb128 0x2
 1878 033d 91       		.byte	0x91
 1879 033e 77       		.sleb128 -9
 1880 033f 00       		.byte	0
 1881 0340 0A       		.uleb128 0xa
 1882 0341 46010000 		.4byte	.LASF46
 1883 0345 01       		.byte	0x1
 1884 0346 EB03     		.2byte	0x3eb
 1885 0348 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 62


 1886 034c 00000000 		.4byte	.LFB19
 1887 0350 14000000 		.4byte	.LFE19-.LFB19
 1888 0354 01       		.uleb128 0x1
 1889 0355 9C       		.byte	0x9c
 1890 0356 0B       		.uleb128 0xb
 1891 0357 27000000 		.4byte	.LASF47
 1892 035b 01       		.byte	0x1
 1893 035c 1104     		.2byte	0x411
 1894 035e 00000000 		.4byte	.LFB20
 1895 0362 34000000 		.4byte	.LFE20-.LFB20
 1896 0366 01       		.uleb128 0x1
 1897 0367 9C       		.byte	0x9c
 1898 0368 7C030000 		.4byte	0x37c
 1899 036c 0C       		.uleb128 0xc
 1900 036d 1C000000 		.4byte	.LASF45
 1901 0371 01       		.byte	0x1
 1902 0372 1104     		.2byte	0x411
 1903 0374 6B000000 		.4byte	0x6b
 1904 0378 02       		.uleb128 0x2
 1905 0379 91       		.byte	0x91
 1906 037a 77       		.sleb128 -9
 1907 037b 00       		.byte	0
 1908 037c 10       		.uleb128 0x10
 1909 037d 7E030000 		.4byte	.LASF48
 1910 0381 01       		.byte	0x1
 1911 0382 7904     		.2byte	0x479
 1912 0384 00000000 		.4byte	.LFB21
 1913 0388 58000000 		.4byte	.LFE21-.LFB21
 1914 038c 01       		.uleb128 0x1
 1915 038d 9C       		.byte	0x9c
 1916 038e B1030000 		.4byte	0x3b1
 1917 0392 0C       		.uleb128 0xc
 1918 0393 36000000 		.4byte	.LASF49
 1919 0397 01       		.byte	0x1
 1920 0398 7904     		.2byte	0x479
 1921 039a B1030000 		.4byte	0x3b1
 1922 039e 02       		.uleb128 0x2
 1923 039f 91       		.byte	0x91
 1924 03a0 6C       		.sleb128 -20
 1925 03a1 0E       		.uleb128 0xe
 1926 03a2 92010000 		.4byte	.LASF50
 1927 03a6 01       		.byte	0x1
 1928 03a7 7B04     		.2byte	0x47b
 1929 03a9 77000000 		.4byte	0x77
 1930 03ad 02       		.uleb128 0x2
 1931 03ae 91       		.byte	0x91
 1932 03af 76       		.sleb128 -10
 1933 03b0 00       		.byte	0
 1934 03b1 11       		.uleb128 0x11
 1935 03b2 04       		.byte	0x4
 1936 03b3 B7030000 		.4byte	0x3b7
 1937 03b7 12       		.uleb128 0x12
 1938 03b8 91000000 		.4byte	0x91
 1939 03bc 10       		.uleb128 0x10
 1940 03bd 7E040000 		.4byte	.LASF51
 1941 03c1 01       		.byte	0x1
 1942 03c2 A704     		.2byte	0x4a7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 63


 1943 03c4 00000000 		.4byte	.LFB22
 1944 03c8 5C000000 		.4byte	.LFE22-.LFB22
 1945 03cc 01       		.uleb128 0x1
 1946 03cd 9C       		.byte	0x9c
 1947 03ce 00040000 		.4byte	0x400
 1948 03d2 0C       		.uleb128 0xc
 1949 03d3 36000000 		.4byte	.LASF49
 1950 03d7 01       		.byte	0x1
 1951 03d8 A704     		.2byte	0x4a7
 1952 03da 00040000 		.4byte	0x400
 1953 03de 02       		.uleb128 0x2
 1954 03df 91       		.byte	0x91
 1955 03e0 6C       		.sleb128 -20
 1956 03e1 0C       		.uleb128 0xc
 1957 03e2 04040000 		.4byte	.LASF52
 1958 03e6 01       		.byte	0x1
 1959 03e7 A704     		.2byte	0x4a7
 1960 03e9 6B000000 		.4byte	0x6b
 1961 03ed 02       		.uleb128 0x2
 1962 03ee 91       		.byte	0x91
 1963 03ef 6B       		.sleb128 -21
 1964 03f0 0E       		.uleb128 0xe
 1965 03f1 92010000 		.4byte	.LASF50
 1966 03f5 01       		.byte	0x1
 1967 03f6 AA04     		.2byte	0x4aa
 1968 03f8 6B000000 		.4byte	0x6b
 1969 03fc 02       		.uleb128 0x2
 1970 03fd 91       		.byte	0x91
 1971 03fe 77       		.sleb128 -9
 1972 03ff 00       		.byte	0
 1973 0400 11       		.uleb128 0x11
 1974 0401 04       		.byte	0x4
 1975 0402 06040000 		.4byte	0x406
 1976 0406 12       		.uleb128 0x12
 1977 0407 6B000000 		.4byte	0x6b
 1978 040b 10       		.uleb128 0x10
 1979 040c B1000000 		.4byte	.LASF53
 1980 0410 01       		.byte	0x1
 1981 0411 CE04     		.2byte	0x4ce
 1982 0413 00000000 		.4byte	.LFB23
 1983 0417 38000000 		.4byte	.LFE23-.LFB23
 1984 041b 01       		.uleb128 0x1
 1985 041c 9C       		.byte	0x9c
 1986 041d 31040000 		.4byte	0x431
 1987 0421 0C       		.uleb128 0xc
 1988 0422 1C000000 		.4byte	.LASF45
 1989 0426 01       		.byte	0x1
 1990 0427 CE04     		.2byte	0x4ce
 1991 0429 6B000000 		.4byte	0x6b
 1992 042d 02       		.uleb128 0x2
 1993 042e 91       		.byte	0x91
 1994 042f 77       		.sleb128 -9
 1995 0430 00       		.byte	0
 1996 0431 0D       		.uleb128 0xd
 1997 0432 77000000 		.4byte	.LASF54
 1998 0436 01       		.byte	0x1
 1999 0437 F904     		.2byte	0x4f9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 64


 2000 0439 6B000000 		.4byte	0x6b
 2001 043d 00000000 		.4byte	.LFB24
 2002 0441 48000000 		.4byte	.LFE24-.LFB24
 2003 0445 01       		.uleb128 0x1
 2004 0446 9C       		.byte	0x9c
 2005 0447 5B040000 		.4byte	0x45b
 2006 044b 0E       		.uleb128 0xe
 2007 044c 6C010000 		.4byte	.LASF36
 2008 0450 01       		.byte	0x1
 2009 0451 FC04     		.2byte	0x4fc
 2010 0453 6B000000 		.4byte	0x6b
 2011 0457 02       		.uleb128 0x2
 2012 0458 91       		.byte	0x91
 2013 0459 77       		.sleb128 -9
 2014 045a 00       		.byte	0
 2015 045b 10       		.uleb128 0x10
 2016 045c 07000000 		.4byte	.LASF55
 2017 0460 01       		.byte	0x1
 2018 0461 4A05     		.2byte	0x54a
 2019 0463 00000000 		.4byte	.LFB25
 2020 0467 48000000 		.4byte	.LFE25-.LFB25
 2021 046b 01       		.uleb128 0x1
 2022 046c 9C       		.byte	0x9c
 2023 046d 81040000 		.4byte	0x481
 2024 0471 0E       		.uleb128 0xe
 2025 0472 43040000 		.4byte	.LASF22
 2026 0476 01       		.byte	0x1
 2027 0477 4C05     		.2byte	0x54c
 2028 0479 6B000000 		.4byte	0x6b
 2029 047d 02       		.uleb128 0x2
 2030 047e 91       		.byte	0x91
 2031 047f 6F       		.sleb128 -17
 2032 0480 00       		.byte	0
 2033 0481 0B       		.uleb128 0xb
 2034 0482 3D000000 		.4byte	.LASF56
 2035 0486 01       		.byte	0x1
 2036 0487 A005     		.2byte	0x5a0
 2037 0489 00000000 		.4byte	.LFB26
 2038 048d B8000000 		.4byte	.LFE26-.LFB26
 2039 0491 01       		.uleb128 0x1
 2040 0492 9C       		.byte	0x9c
 2041 0493 D2040000 		.4byte	0x4d2
 2042 0497 0C       		.uleb128 0xc
 2043 0498 31010000 		.4byte	.LASF57
 2044 049c 01       		.byte	0x1
 2045 049d A005     		.2byte	0x5a0
 2046 049f 6B000000 		.4byte	0x6b
 2047 04a3 02       		.uleb128 0x2
 2048 04a4 91       		.byte	0x91
 2049 04a5 6F       		.sleb128 -17
 2050 04a6 13       		.uleb128 0x13
 2051 04a7 14000000 		.4byte	.LBB2
 2052 04ab 88000000 		.4byte	.LBE2-.LBB2
 2053 04af 0E       		.uleb128 0xe
 2054 04b0 91020000 		.4byte	.LASF58
 2055 04b4 01       		.byte	0x1
 2056 04b5 A805     		.2byte	0x5a8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 65


 2057 04b7 6B000000 		.4byte	0x6b
 2058 04bb 02       		.uleb128 0x2
 2059 04bc 91       		.byte	0x91
 2060 04bd 77       		.sleb128 -9
 2061 04be 0E       		.uleb128 0xe
 2062 04bf A8000000 		.4byte	.LASF59
 2063 04c3 01       		.byte	0x1
 2064 04c4 D005     		.2byte	0x5d0
 2065 04c6 6B000000 		.4byte	0x6b
 2066 04ca 05       		.uleb128 0x5
 2067 04cb 03       		.byte	0x3
 2068 04cc 01000000 		.4byte	txPeriod.5084
 2069 04d0 00       		.byte	0
 2070 04d1 00       		.byte	0
 2071 04d2 0B       		.uleb128 0xb
 2072 04d3 9B010000 		.4byte	.LASF60
 2073 04d7 01       		.byte	0x1
 2074 04d8 2406     		.2byte	0x624
 2075 04da 00000000 		.4byte	.LFB27
 2076 04de 14000000 		.4byte	.LFE27-.LFB27
 2077 04e2 01       		.uleb128 0x1
 2078 04e3 9C       		.byte	0x9c
 2079 04e4 F8040000 		.4byte	0x4f8
 2080 04e8 0C       		.uleb128 0xc
 2081 04e9 E3000000 		.4byte	.LASF39
 2082 04ed 01       		.byte	0x1
 2083 04ee 2406     		.2byte	0x624
 2084 04f0 6B000000 		.4byte	0x6b
 2085 04f4 02       		.uleb128 0x2
 2086 04f5 91       		.byte	0x91
 2087 04f6 77       		.sleb128 -9
 2088 04f7 00       		.byte	0
 2089 04f8 14       		.uleb128 0x14
 2090 04f9 F5030000 		.4byte	.LASF64
 2091 04fd 01       		.byte	0x1
 2092 04fe 1B       		.byte	0x1b
 2093 04ff 6B000000 		.4byte	0x6b
 2094 0503 05       		.uleb128 0x5
 2095 0504 03       		.byte	0x3
 2096 0505 00000000 		.4byte	UART_1_initVar
 2097 0509 00       		.byte	0
 2098              		.section	.debug_abbrev,"",%progbits
 2099              	.Ldebug_abbrev0:
 2100 0000 01       		.uleb128 0x1
 2101 0001 11       		.uleb128 0x11
 2102 0002 01       		.byte	0x1
 2103 0003 25       		.uleb128 0x25
 2104 0004 0E       		.uleb128 0xe
 2105 0005 13       		.uleb128 0x13
 2106 0006 0B       		.uleb128 0xb
 2107 0007 03       		.uleb128 0x3
 2108 0008 0E       		.uleb128 0xe
 2109 0009 1B       		.uleb128 0x1b
 2110 000a 0E       		.uleb128 0xe
 2111 000b 55       		.uleb128 0x55
 2112 000c 17       		.uleb128 0x17
 2113 000d 11       		.uleb128 0x11
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 66


 2114 000e 01       		.uleb128 0x1
 2115 000f 10       		.uleb128 0x10
 2116 0010 17       		.uleb128 0x17
 2117 0011 00       		.byte	0
 2118 0012 00       		.byte	0
 2119 0013 02       		.uleb128 0x2
 2120 0014 24       		.uleb128 0x24
 2121 0015 00       		.byte	0
 2122 0016 0B       		.uleb128 0xb
 2123 0017 0B       		.uleb128 0xb
 2124 0018 3E       		.uleb128 0x3e
 2125 0019 0B       		.uleb128 0xb
 2126 001a 03       		.uleb128 0x3
 2127 001b 0E       		.uleb128 0xe
 2128 001c 00       		.byte	0
 2129 001d 00       		.byte	0
 2130 001e 03       		.uleb128 0x3
 2131 001f 24       		.uleb128 0x24
 2132 0020 00       		.byte	0
 2133 0021 0B       		.uleb128 0xb
 2134 0022 0B       		.uleb128 0xb
 2135 0023 3E       		.uleb128 0x3e
 2136 0024 0B       		.uleb128 0xb
 2137 0025 03       		.uleb128 0x3
 2138 0026 08       		.uleb128 0x8
 2139 0027 00       		.byte	0
 2140 0028 00       		.byte	0
 2141 0029 04       		.uleb128 0x4
 2142 002a 16       		.uleb128 0x16
 2143 002b 00       		.byte	0
 2144 002c 03       		.uleb128 0x3
 2145 002d 0E       		.uleb128 0xe
 2146 002e 3A       		.uleb128 0x3a
 2147 002f 0B       		.uleb128 0xb
 2148 0030 3B       		.uleb128 0x3b
 2149 0031 05       		.uleb128 0x5
 2150 0032 49       		.uleb128 0x49
 2151 0033 13       		.uleb128 0x13
 2152 0034 00       		.byte	0
 2153 0035 00       		.byte	0
 2154 0036 05       		.uleb128 0x5
 2155 0037 35       		.uleb128 0x35
 2156 0038 00       		.byte	0
 2157 0039 49       		.uleb128 0x49
 2158 003a 13       		.uleb128 0x13
 2159 003b 00       		.byte	0
 2160 003c 00       		.byte	0
 2161 003d 06       		.uleb128 0x6
 2162 003e 2E       		.uleb128 0x2e
 2163 003f 00       		.byte	0
 2164 0040 3F       		.uleb128 0x3f
 2165 0041 19       		.uleb128 0x19
 2166 0042 03       		.uleb128 0x3
 2167 0043 0E       		.uleb128 0xe
 2168 0044 3A       		.uleb128 0x3a
 2169 0045 0B       		.uleb128 0xb
 2170 0046 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 67


 2171 0047 0B       		.uleb128 0xb
 2172 0048 27       		.uleb128 0x27
 2173 0049 19       		.uleb128 0x19
 2174 004a 11       		.uleb128 0x11
 2175 004b 01       		.uleb128 0x1
 2176 004c 12       		.uleb128 0x12
 2177 004d 06       		.uleb128 0x6
 2178 004e 40       		.uleb128 0x40
 2179 004f 18       		.uleb128 0x18
 2180 0050 9642     		.uleb128 0x2116
 2181 0052 19       		.uleb128 0x19
 2182 0053 00       		.byte	0
 2183 0054 00       		.byte	0
 2184 0055 07       		.uleb128 0x7
 2185 0056 2E       		.uleb128 0x2e
 2186 0057 00       		.byte	0
 2187 0058 3F       		.uleb128 0x3f
 2188 0059 19       		.uleb128 0x19
 2189 005a 03       		.uleb128 0x3
 2190 005b 0E       		.uleb128 0xe
 2191 005c 3A       		.uleb128 0x3a
 2192 005d 0B       		.uleb128 0xb
 2193 005e 3B       		.uleb128 0x3b
 2194 005f 0B       		.uleb128 0xb
 2195 0060 27       		.uleb128 0x27
 2196 0061 19       		.uleb128 0x19
 2197 0062 11       		.uleb128 0x11
 2198 0063 01       		.uleb128 0x1
 2199 0064 12       		.uleb128 0x12
 2200 0065 06       		.uleb128 0x6
 2201 0066 40       		.uleb128 0x40
 2202 0067 18       		.uleb128 0x18
 2203 0068 9742     		.uleb128 0x2117
 2204 006a 19       		.uleb128 0x19
 2205 006b 00       		.byte	0
 2206 006c 00       		.byte	0
 2207 006d 08       		.uleb128 0x8
 2208 006e 2E       		.uleb128 0x2e
 2209 006f 01       		.byte	0x1
 2210 0070 3F       		.uleb128 0x3f
 2211 0071 19       		.uleb128 0x19
 2212 0072 03       		.uleb128 0x3
 2213 0073 0E       		.uleb128 0xe
 2214 0074 3A       		.uleb128 0x3a
 2215 0075 0B       		.uleb128 0xb
 2216 0076 3B       		.uleb128 0x3b
 2217 0077 0B       		.uleb128 0xb
 2218 0078 27       		.uleb128 0x27
 2219 0079 19       		.uleb128 0x19
 2220 007a 11       		.uleb128 0x11
 2221 007b 01       		.uleb128 0x1
 2222 007c 12       		.uleb128 0x12
 2223 007d 06       		.uleb128 0x6
 2224 007e 40       		.uleb128 0x40
 2225 007f 18       		.uleb128 0x18
 2226 0080 9642     		.uleb128 0x2116
 2227 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 68


 2228 0083 01       		.uleb128 0x1
 2229 0084 13       		.uleb128 0x13
 2230 0085 00       		.byte	0
 2231 0086 00       		.byte	0
 2232 0087 09       		.uleb128 0x9
 2233 0088 34       		.uleb128 0x34
 2234 0089 00       		.byte	0
 2235 008a 03       		.uleb128 0x3
 2236 008b 0E       		.uleb128 0xe
 2237 008c 3A       		.uleb128 0x3a
 2238 008d 0B       		.uleb128 0xb
 2239 008e 3B       		.uleb128 0x3b
 2240 008f 0B       		.uleb128 0xb
 2241 0090 49       		.uleb128 0x49
 2242 0091 13       		.uleb128 0x13
 2243 0092 02       		.uleb128 0x2
 2244 0093 18       		.uleb128 0x18
 2245 0094 00       		.byte	0
 2246 0095 00       		.byte	0
 2247 0096 0A       		.uleb128 0xa
 2248 0097 2E       		.uleb128 0x2e
 2249 0098 00       		.byte	0
 2250 0099 3F       		.uleb128 0x3f
 2251 009a 19       		.uleb128 0x19
 2252 009b 03       		.uleb128 0x3
 2253 009c 0E       		.uleb128 0xe
 2254 009d 3A       		.uleb128 0x3a
 2255 009e 0B       		.uleb128 0xb
 2256 009f 3B       		.uleb128 0x3b
 2257 00a0 05       		.uleb128 0x5
 2258 00a1 27       		.uleb128 0x27
 2259 00a2 19       		.uleb128 0x19
 2260 00a3 49       		.uleb128 0x49
 2261 00a4 13       		.uleb128 0x13
 2262 00a5 11       		.uleb128 0x11
 2263 00a6 01       		.uleb128 0x1
 2264 00a7 12       		.uleb128 0x12
 2265 00a8 06       		.uleb128 0x6
 2266 00a9 40       		.uleb128 0x40
 2267 00aa 18       		.uleb128 0x18
 2268 00ab 9742     		.uleb128 0x2117
 2269 00ad 19       		.uleb128 0x19
 2270 00ae 00       		.byte	0
 2271 00af 00       		.byte	0
 2272 00b0 0B       		.uleb128 0xb
 2273 00b1 2E       		.uleb128 0x2e
 2274 00b2 01       		.byte	0x1
 2275 00b3 3F       		.uleb128 0x3f
 2276 00b4 19       		.uleb128 0x19
 2277 00b5 03       		.uleb128 0x3
 2278 00b6 0E       		.uleb128 0xe
 2279 00b7 3A       		.uleb128 0x3a
 2280 00b8 0B       		.uleb128 0xb
 2281 00b9 3B       		.uleb128 0x3b
 2282 00ba 05       		.uleb128 0x5
 2283 00bb 27       		.uleb128 0x27
 2284 00bc 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 69


 2285 00bd 11       		.uleb128 0x11
 2286 00be 01       		.uleb128 0x1
 2287 00bf 12       		.uleb128 0x12
 2288 00c0 06       		.uleb128 0x6
 2289 00c1 40       		.uleb128 0x40
 2290 00c2 18       		.uleb128 0x18
 2291 00c3 9742     		.uleb128 0x2117
 2292 00c5 19       		.uleb128 0x19
 2293 00c6 01       		.uleb128 0x1
 2294 00c7 13       		.uleb128 0x13
 2295 00c8 00       		.byte	0
 2296 00c9 00       		.byte	0
 2297 00ca 0C       		.uleb128 0xc
 2298 00cb 05       		.uleb128 0x5
 2299 00cc 00       		.byte	0
 2300 00cd 03       		.uleb128 0x3
 2301 00ce 0E       		.uleb128 0xe
 2302 00cf 3A       		.uleb128 0x3a
 2303 00d0 0B       		.uleb128 0xb
 2304 00d1 3B       		.uleb128 0x3b
 2305 00d2 05       		.uleb128 0x5
 2306 00d3 49       		.uleb128 0x49
 2307 00d4 13       		.uleb128 0x13
 2308 00d5 02       		.uleb128 0x2
 2309 00d6 18       		.uleb128 0x18
 2310 00d7 00       		.byte	0
 2311 00d8 00       		.byte	0
 2312 00d9 0D       		.uleb128 0xd
 2313 00da 2E       		.uleb128 0x2e
 2314 00db 01       		.byte	0x1
 2315 00dc 3F       		.uleb128 0x3f
 2316 00dd 19       		.uleb128 0x19
 2317 00de 03       		.uleb128 0x3
 2318 00df 0E       		.uleb128 0xe
 2319 00e0 3A       		.uleb128 0x3a
 2320 00e1 0B       		.uleb128 0xb
 2321 00e2 3B       		.uleb128 0x3b
 2322 00e3 05       		.uleb128 0x5
 2323 00e4 27       		.uleb128 0x27
 2324 00e5 19       		.uleb128 0x19
 2325 00e6 49       		.uleb128 0x49
 2326 00e7 13       		.uleb128 0x13
 2327 00e8 11       		.uleb128 0x11
 2328 00e9 01       		.uleb128 0x1
 2329 00ea 12       		.uleb128 0x12
 2330 00eb 06       		.uleb128 0x6
 2331 00ec 40       		.uleb128 0x40
 2332 00ed 18       		.uleb128 0x18
 2333 00ee 9742     		.uleb128 0x2117
 2334 00f0 19       		.uleb128 0x19
 2335 00f1 01       		.uleb128 0x1
 2336 00f2 13       		.uleb128 0x13
 2337 00f3 00       		.byte	0
 2338 00f4 00       		.byte	0
 2339 00f5 0E       		.uleb128 0xe
 2340 00f6 34       		.uleb128 0x34
 2341 00f7 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 70


 2342 00f8 03       		.uleb128 0x3
 2343 00f9 0E       		.uleb128 0xe
 2344 00fa 3A       		.uleb128 0x3a
 2345 00fb 0B       		.uleb128 0xb
 2346 00fc 3B       		.uleb128 0x3b
 2347 00fd 05       		.uleb128 0x5
 2348 00fe 49       		.uleb128 0x49
 2349 00ff 13       		.uleb128 0x13
 2350 0100 02       		.uleb128 0x2
 2351 0101 18       		.uleb128 0x18
 2352 0102 00       		.byte	0
 2353 0103 00       		.byte	0
 2354 0104 0F       		.uleb128 0xf
 2355 0105 2E       		.uleb128 0x2e
 2356 0106 00       		.byte	0
 2357 0107 3F       		.uleb128 0x3f
 2358 0108 19       		.uleb128 0x19
 2359 0109 03       		.uleb128 0x3
 2360 010a 0E       		.uleb128 0xe
 2361 010b 3A       		.uleb128 0x3a
 2362 010c 0B       		.uleb128 0xb
 2363 010d 3B       		.uleb128 0x3b
 2364 010e 05       		.uleb128 0x5
 2365 010f 27       		.uleb128 0x27
 2366 0110 19       		.uleb128 0x19
 2367 0111 49       		.uleb128 0x49
 2368 0112 13       		.uleb128 0x13
 2369 0113 11       		.uleb128 0x11
 2370 0114 01       		.uleb128 0x1
 2371 0115 12       		.uleb128 0x12
 2372 0116 06       		.uleb128 0x6
 2373 0117 40       		.uleb128 0x40
 2374 0118 18       		.uleb128 0x18
 2375 0119 9642     		.uleb128 0x2116
 2376 011b 19       		.uleb128 0x19
 2377 011c 00       		.byte	0
 2378 011d 00       		.byte	0
 2379 011e 10       		.uleb128 0x10
 2380 011f 2E       		.uleb128 0x2e
 2381 0120 01       		.byte	0x1
 2382 0121 3F       		.uleb128 0x3f
 2383 0122 19       		.uleb128 0x19
 2384 0123 03       		.uleb128 0x3
 2385 0124 0E       		.uleb128 0xe
 2386 0125 3A       		.uleb128 0x3a
 2387 0126 0B       		.uleb128 0xb
 2388 0127 3B       		.uleb128 0x3b
 2389 0128 05       		.uleb128 0x5
 2390 0129 27       		.uleb128 0x27
 2391 012a 19       		.uleb128 0x19
 2392 012b 11       		.uleb128 0x11
 2393 012c 01       		.uleb128 0x1
 2394 012d 12       		.uleb128 0x12
 2395 012e 06       		.uleb128 0x6
 2396 012f 40       		.uleb128 0x40
 2397 0130 18       		.uleb128 0x18
 2398 0131 9642     		.uleb128 0x2116
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 71


 2399 0133 19       		.uleb128 0x19
 2400 0134 01       		.uleb128 0x1
 2401 0135 13       		.uleb128 0x13
 2402 0136 00       		.byte	0
 2403 0137 00       		.byte	0
 2404 0138 11       		.uleb128 0x11
 2405 0139 0F       		.uleb128 0xf
 2406 013a 00       		.byte	0
 2407 013b 0B       		.uleb128 0xb
 2408 013c 0B       		.uleb128 0xb
 2409 013d 49       		.uleb128 0x49
 2410 013e 13       		.uleb128 0x13
 2411 013f 00       		.byte	0
 2412 0140 00       		.byte	0
 2413 0141 12       		.uleb128 0x12
 2414 0142 26       		.uleb128 0x26
 2415 0143 00       		.byte	0
 2416 0144 49       		.uleb128 0x49
 2417 0145 13       		.uleb128 0x13
 2418 0146 00       		.byte	0
 2419 0147 00       		.byte	0
 2420 0148 13       		.uleb128 0x13
 2421 0149 0B       		.uleb128 0xb
 2422 014a 01       		.byte	0x1
 2423 014b 11       		.uleb128 0x11
 2424 014c 01       		.uleb128 0x1
 2425 014d 12       		.uleb128 0x12
 2426 014e 06       		.uleb128 0x6
 2427 014f 00       		.byte	0
 2428 0150 00       		.byte	0
 2429 0151 14       		.uleb128 0x14
 2430 0152 34       		.uleb128 0x34
 2431 0153 00       		.byte	0
 2432 0154 03       		.uleb128 0x3
 2433 0155 0E       		.uleb128 0xe
 2434 0156 3A       		.uleb128 0x3a
 2435 0157 0B       		.uleb128 0xb
 2436 0158 3B       		.uleb128 0x3b
 2437 0159 0B       		.uleb128 0xb
 2438 015a 49       		.uleb128 0x49
 2439 015b 13       		.uleb128 0x13
 2440 015c 3F       		.uleb128 0x3f
 2441 015d 19       		.uleb128 0x19
 2442 015e 02       		.uleb128 0x2
 2443 015f 18       		.uleb128 0x18
 2444 0160 00       		.byte	0
 2445 0161 00       		.byte	0
 2446 0162 00       		.byte	0
 2447              		.section	.debug_aranges,"",%progbits
 2448 0000 EC000000 		.4byte	0xec
 2449 0004 0200     		.2byte	0x2
 2450 0006 00000000 		.4byte	.Ldebug_info0
 2451 000a 04       		.byte	0x4
 2452 000b 00       		.byte	0
 2453 000c 0000     		.2byte	0
 2454 000e 0000     		.2byte	0
 2455 0010 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 72


 2456 0014 24000000 		.4byte	.LFE1-.LFB1
 2457 0018 00000000 		.4byte	.LFB2
 2458 001c 3C000000 		.4byte	.LFE2-.LFB2
 2459 0020 00000000 		.4byte	.LFB3
 2460 0024 64000000 		.4byte	.LFE3-.LFB3
 2461 0028 00000000 		.4byte	.LFB4
 2462 002c 64000000 		.4byte	.LFE4-.LFB4
 2463 0030 00000000 		.4byte	.LFB5
 2464 0034 0C000000 		.4byte	.LFE5-.LFB5
 2465 0038 00000000 		.4byte	.LFB6
 2466 003c 14000000 		.4byte	.LFE6-.LFB6
 2467 0040 00000000 		.4byte	.LFB7
 2468 0044 20000000 		.4byte	.LFE7-.LFB7
 2469 0048 00000000 		.4byte	.LFB8
 2470 004c 20000000 		.4byte	.LFE8-.LFB8
 2471 0050 00000000 		.4byte	.LFB9
 2472 0054 24000000 		.4byte	.LFE9-.LFB9
 2473 0058 00000000 		.4byte	.LFB10
 2474 005c 4C000000 		.4byte	.LFE10-.LFB10
 2475 0060 00000000 		.4byte	.LFB11
 2476 0064 22000000 		.4byte	.LFE11-.LFB11
 2477 0068 00000000 		.4byte	.LFB12
 2478 006c 30000000 		.4byte	.LFE12-.LFB12
 2479 0070 00000000 		.4byte	.LFB13
 2480 0074 48000000 		.4byte	.LFE13-.LFB13
 2481 0078 00000000 		.4byte	.LFB14
 2482 007c 14000000 		.4byte	.LFE14-.LFB14
 2483 0080 00000000 		.4byte	.LFB15
 2484 0084 20000000 		.4byte	.LFE15-.LFB15
 2485 0088 00000000 		.4byte	.LFB16
 2486 008c 20000000 		.4byte	.LFE16-.LFB16
 2487 0090 00000000 		.4byte	.LFB17
 2488 0094 20000000 		.4byte	.LFE17-.LFB17
 2489 0098 00000000 		.4byte	.LFB18
 2490 009c 2C000000 		.4byte	.LFE18-.LFB18
 2491 00a0 00000000 		.4byte	.LFB19
 2492 00a4 14000000 		.4byte	.LFE19-.LFB19
 2493 00a8 00000000 		.4byte	.LFB20
 2494 00ac 34000000 		.4byte	.LFE20-.LFB20
 2495 00b0 00000000 		.4byte	.LFB21
 2496 00b4 58000000 		.4byte	.LFE21-.LFB21
 2497 00b8 00000000 		.4byte	.LFB22
 2498 00bc 5C000000 		.4byte	.LFE22-.LFB22
 2499 00c0 00000000 		.4byte	.LFB23
 2500 00c4 38000000 		.4byte	.LFE23-.LFB23
 2501 00c8 00000000 		.4byte	.LFB24
 2502 00cc 48000000 		.4byte	.LFE24-.LFB24
 2503 00d0 00000000 		.4byte	.LFB25
 2504 00d4 48000000 		.4byte	.LFE25-.LFB25
 2505 00d8 00000000 		.4byte	.LFB26
 2506 00dc B8000000 		.4byte	.LFE26-.LFB26
 2507 00e0 00000000 		.4byte	.LFB27
 2508 00e4 14000000 		.4byte	.LFE27-.LFB27
 2509 00e8 00000000 		.4byte	0
 2510 00ec 00000000 		.4byte	0
 2511              		.section	.debug_ranges,"",%progbits
 2512              	.Ldebug_ranges0:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 73


 2513 0000 00000000 		.4byte	.LFB1
 2514 0004 24000000 		.4byte	.LFE1
 2515 0008 00000000 		.4byte	.LFB2
 2516 000c 3C000000 		.4byte	.LFE2
 2517 0010 00000000 		.4byte	.LFB3
 2518 0014 64000000 		.4byte	.LFE3
 2519 0018 00000000 		.4byte	.LFB4
 2520 001c 64000000 		.4byte	.LFE4
 2521 0020 00000000 		.4byte	.LFB5
 2522 0024 0C000000 		.4byte	.LFE5
 2523 0028 00000000 		.4byte	.LFB6
 2524 002c 14000000 		.4byte	.LFE6
 2525 0030 00000000 		.4byte	.LFB7
 2526 0034 20000000 		.4byte	.LFE7
 2527 0038 00000000 		.4byte	.LFB8
 2528 003c 20000000 		.4byte	.LFE8
 2529 0040 00000000 		.4byte	.LFB9
 2530 0044 24000000 		.4byte	.LFE9
 2531 0048 00000000 		.4byte	.LFB10
 2532 004c 4C000000 		.4byte	.LFE10
 2533 0050 00000000 		.4byte	.LFB11
 2534 0054 22000000 		.4byte	.LFE11
 2535 0058 00000000 		.4byte	.LFB12
 2536 005c 30000000 		.4byte	.LFE12
 2537 0060 00000000 		.4byte	.LFB13
 2538 0064 48000000 		.4byte	.LFE13
 2539 0068 00000000 		.4byte	.LFB14
 2540 006c 14000000 		.4byte	.LFE14
 2541 0070 00000000 		.4byte	.LFB15
 2542 0074 20000000 		.4byte	.LFE15
 2543 0078 00000000 		.4byte	.LFB16
 2544 007c 20000000 		.4byte	.LFE16
 2545 0080 00000000 		.4byte	.LFB17
 2546 0084 20000000 		.4byte	.LFE17
 2547 0088 00000000 		.4byte	.LFB18
 2548 008c 2C000000 		.4byte	.LFE18
 2549 0090 00000000 		.4byte	.LFB19
 2550 0094 14000000 		.4byte	.LFE19
 2551 0098 00000000 		.4byte	.LFB20
 2552 009c 34000000 		.4byte	.LFE20
 2553 00a0 00000000 		.4byte	.LFB21
 2554 00a4 58000000 		.4byte	.LFE21
 2555 00a8 00000000 		.4byte	.LFB22
 2556 00ac 5C000000 		.4byte	.LFE22
 2557 00b0 00000000 		.4byte	.LFB23
 2558 00b4 38000000 		.4byte	.LFE23
 2559 00b8 00000000 		.4byte	.LFB24
 2560 00bc 48000000 		.4byte	.LFE24
 2561 00c0 00000000 		.4byte	.LFB25
 2562 00c4 48000000 		.4byte	.LFE25
 2563 00c8 00000000 		.4byte	.LFB26
 2564 00cc B8000000 		.4byte	.LFE26
 2565 00d0 00000000 		.4byte	.LFB27
 2566 00d4 14000000 		.4byte	.LFE27
 2567 00d8 00000000 		.4byte	0
 2568 00dc 00000000 		.4byte	0
 2569              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 74


 2570              	.Ldebug_line0:
 2571 0000 E0020000 		.section	.debug_str,"MS",%progbits,1
 2571      02004300 
 2571      00000201 
 2571      FB0E0D00 
 2571      01010101 
 2572              	.LASF10:
 2573 0000 75696E74 		.ascii	"uint16\000"
 2573      313600
 2574              	.LASF55:
 2575 0007 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2575      5F315F43 
 2575      6C656172 
 2575      54784275 
 2575      66666572 
 2576              	.LASF45:
 2577 001c 74784461 		.ascii	"txDataByte\000"
 2577      74614279 
 2577      746500
 2578              	.LASF47:
 2579 0027 55415254 		.ascii	"UART_1_PutChar\000"
 2579      5F315F50 
 2579      75744368 
 2579      617200
 2580              	.LASF49:
 2581 0036 73747269 		.ascii	"string\000"
 2581      6E6700
 2582              	.LASF56:
 2583 003d 55415254 		.ascii	"UART_1_SendBreak\000"
 2583      5F315F53 
 2583      656E6442 
 2583      7265616B 
 2583      00
 2584              	.LASF28:
 2585 004e 55415254 		.ascii	"UART_1_ReadRxData\000"
 2585      5F315F52 
 2585      65616452 
 2585      78446174 
 2585      6100
 2586              	.LASF7:
 2587 0060 6C6F6E67 		.ascii	"long long unsigned int\000"
 2587      206C6F6E 
 2587      6720756E 
 2587      7369676E 
 2587      65642069 
 2588              	.LASF54:
 2589 0077 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2589      5F315F47 
 2589      65745478 
 2589      42756666 
 2589      65725369 
 2590              	.LASF6:
 2591 008e 6C6F6E67 		.ascii	"long long int\000"
 2591      206C6F6E 
 2591      6720696E 
 2591      7400
 2592              	.LASF0:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 75


 2593 009c 7369676E 		.ascii	"signed char\000"
 2593      65642063 
 2593      68617200 
 2594              	.LASF59:
 2595 00a8 74785065 		.ascii	"txPeriod\000"
 2595      72696F64 
 2595      00
 2596              	.LASF53:
 2597 00b1 55415254 		.ascii	"UART_1_PutCRLF\000"
 2597      5F315F50 
 2597      75744352 
 2597      4C4600
 2598              	.LASF4:
 2599 00c0 6C6F6E67 		.ascii	"long int\000"
 2599      20696E74 
 2599      00
 2600              	.LASF18:
 2601 00c9 55415254 		.ascii	"UART_1_Start\000"
 2601      5F315F53 
 2601      74617274 
 2601      00
 2602              	.LASF9:
 2603 00d6 75696E74 		.ascii	"uint8\000"
 2603      3800
 2604              	.LASF12:
 2605 00dc 646F7562 		.ascii	"double\000"
 2605      6C6500
 2606              	.LASF39:
 2607 00e3 61646472 		.ascii	"addressMode\000"
 2607      6573734D 
 2607      6F646500 
 2608              	.LASF25:
 2609 00ef 636F6E74 		.ascii	"control\000"
 2609      726F6C00 
 2610              	.LASF24:
 2611 00f7 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2611      5F315F53 
 2611      65745278 
 2611      496E7465 
 2611      72727570 
 2612              	.LASF62:
 2613 0111 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_1.c\000"
 2613      72617465 
 2613      645F536F 
 2613      75726365 
 2613      5C50536F 
 2614              	.LASF57:
 2615 0131 7265744D 		.ascii	"retMode\000"
 2615      6F646500 
 2616              	.LASF8:
 2617 0139 756E7369 		.ascii	"unsigned int\000"
 2617      676E6564 
 2617      20696E74 
 2617      00
 2618              	.LASF46:
 2619 0146 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2619      5F315F52 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 76


 2619      65616454 
 2619      78537461 
 2619      74757300 
 2620              	.LASF5:
 2621 015a 6C6F6E67 		.ascii	"long unsigned int\000"
 2621      20756E73 
 2621      69676E65 
 2621      6420696E 
 2621      7400
 2622              	.LASF36:
 2623 016c 73697A65 		.ascii	"size\000"
 2623      00
 2624              	.LASF3:
 2625 0171 73686F72 		.ascii	"short unsigned int\000"
 2625      7420756E 
 2625      7369676E 
 2625      65642069 
 2625      6E7400
 2626              	.LASF20:
 2627 0184 55415254 		.ascii	"UART_1_Enable\000"
 2627      5F315F45 
 2627      6E61626C 
 2627      6500
 2628              	.LASF50:
 2629 0192 62756649 		.ascii	"bufIndex\000"
 2629      6E646578 
 2629      00
 2630              	.LASF60:
 2631 019b 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2631      5F315F53 
 2631      65745478 
 2631      41646472 
 2631      6573734D 
 2632              	.LASF26:
 2633 01b3 696E7453 		.ascii	"intSrc\000"
 2633      726300
 2634              	.LASF33:
 2635 01ba 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2635      5F315F52 
 2635      65616443 
 2635      6F6E7472 
 2635      6F6C5265 
 2636              	.LASF61:
 2637 01d5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2637      43313120 
 2637      352E342E 
 2637      31203230 
 2637      31363036 
 2638 0208 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2638      20726576 
 2638      6973696F 
 2638      6E203233 
 2638      37373135 
 2639 023b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2639      66756E63 
 2639      74696F6E 
 2639      2D736563 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 77


 2639      74696F6E 
 2640              	.LASF21:
 2641 0263 55415254 		.ascii	"UART_1_Stop\000"
 2641      5F315F53 
 2641      746F7000 
 2642              	.LASF34:
 2643 026f 55415254 		.ascii	"UART_1_GetByte\000"
 2643      5F315F47 
 2643      65744279 
 2643      746500
 2644              	.LASF44:
 2645 027e 55415254 		.ascii	"UART_1_WriteTxData\000"
 2645      5F315F57 
 2645      72697465 
 2645      54784461 
 2645      746100
 2646              	.LASF58:
 2647 0291 746D7053 		.ascii	"tmpStat\000"
 2647      74617400 
 2648              	.LASF17:
 2649 0299 73697A65 		.ascii	"sizetype\000"
 2649      74797065 
 2649      00
 2650              	.LASF40:
 2651 02a2 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2651      5F315F53 
 2651      65745278 
 2651      41646472 
 2651      65737331 
 2652              	.LASF42:
 2653 02b7 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2653      5F315F53 
 2653      65745278 
 2653      41646472 
 2653      65737332 
 2654              	.LASF16:
 2655 02cc 6C6F6E67 		.ascii	"long double\000"
 2655      20646F75 
 2655      626C6500 
 2656              	.LASF41:
 2657 02d8 61646472 		.ascii	"address\000"
 2657      65737300 
 2658              	.LASF32:
 2659 02e0 72785374 		.ascii	"rxStatus\000"
 2659      61747573 
 2659      00
 2660              	.LASF43:
 2661 02e9 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2661      5F315F53 
 2661      65745478 
 2661      496E7465 
 2661      72727570 
 2662              	.LASF63:
 2663 0303 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 2663      73657273 
 2663      5C48507A 
 2663      3432305C 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 78


 2663      446F6375 
 2664 0330 6C622D62 		.ascii	"lb-boards\\FPGA Cards\\RETRO-EP4CE15\\PSOC\\USBFS_U"
 2664      6F617264 
 2664      735C4650 
 2664      47412043 
 2664      61726473 
 2665 035f 41525430 		.ascii	"ART01\\USBFS_UART01.cydsn\000"
 2665      315C5553 
 2665      4246535F 
 2665      55415254 
 2665      30312E63 
 2666              	.LASF11:
 2667 0378 666C6F61 		.ascii	"float\000"
 2667      7400
 2668              	.LASF48:
 2669 037e 55415254 		.ascii	"UART_1_PutString\000"
 2669      5F315F50 
 2669      75745374 
 2669      72696E67 
 2669      00
 2670              	.LASF37:
 2671 038f 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2671      5F315F43 
 2671      6C656172 
 2671      52784275 
 2671      66666572 
 2672              	.LASF38:
 2673 03a4 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2673      5F315F53 
 2673      65745278 
 2673      41646472 
 2673      6573734D 
 2674              	.LASF15:
 2675 03bc 72656738 		.ascii	"reg8\000"
 2675      00
 2676              	.LASF1:
 2677 03c1 756E7369 		.ascii	"unsigned char\000"
 2677      676E6564 
 2677      20636861 
 2677      7200
 2678              	.LASF2:
 2679 03cf 73686F72 		.ascii	"short int\000"
 2679      7420696E 
 2679      7400
 2680              	.LASF23:
 2681 03d9 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2681      5F315F57 
 2681      72697465 
 2681      436F6E74 
 2681      726F6C52 
 2682              	.LASF64:
 2683 03f5 55415254 		.ascii	"UART_1_initVar\000"
 2683      5F315F69 
 2683      6E697456 
 2683      617200
 2684              	.LASF52:
 2685 0404 62797465 		.ascii	"byteCount\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccOV7W60.s 			page 79


 2685      436F756E 
 2685      7400
 2686              	.LASF35:
 2687 040e 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2687      5F315F47 
 2687      65745278 
 2687      42756666 
 2687      65725369 
 2688              	.LASF27:
 2689 0425 72784461 		.ascii	"rxData\000"
 2689      746100
 2690              	.LASF14:
 2691 042c 63686172 		.ascii	"char\000"
 2691      00
 2692              	.LASF13:
 2693 0431 63686172 		.ascii	"char8\000"
 2693      3800
 2694              	.LASF19:
 2695 0437 55415254 		.ascii	"UART_1_Init\000"
 2695      5F315F49 
 2695      6E697400 
 2696              	.LASF22:
 2697 0443 656E6162 		.ascii	"enableInterrupts\000"
 2697      6C65496E 
 2697      74657272 
 2697      75707473 
 2697      00
 2698              	.LASF30:
 2699 0454 73746174 		.ascii	"status\000"
 2699      757300
 2700              	.LASF29:
 2701 045b 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2701      5F315F52 
 2701      65616452 
 2701      78537461 
 2701      74757300 
 2702              	.LASF31:
 2703 046f 55415254 		.ascii	"UART_1_GetChar\000"
 2703      5F315F47 
 2703      65744368 
 2703      617200
 2704              	.LASF51:
 2705 047e 55415254 		.ascii	"UART_1_PutArray\000"
 2705      5F315F50 
 2705      75744172 
 2705      72617900 
 2706              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
