ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\USBUART_episr.c"
   1:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC4/USBUART_episr.c **** * \version 3.10
   4:Generated_Source\PSoC4/USBUART_episr.c **** *
   5:Generated_Source\PSoC4/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC4/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC4/USBUART_episr.c **** *
   8:Generated_Source\PSoC4/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC4/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC4/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC4/USBUART_episr.c **** 
  16:Generated_Source\PSoC4/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC4/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC4/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC4/USBUART_episr.c **** 
  20:Generated_Source\PSoC4/USBUART_episr.c **** 
  21:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC4/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC4/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC4/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC4/USBUART_episr.c **** 
  26:Generated_Source\PSoC4/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC4/USBUART_episr.c **** 
  28:Generated_Source\PSoC4/USBUART_episr.c **** 
  29:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC4/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 2


  31:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC4/USBUART_episr.c ****     *
  34:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC4/USBUART_episr.c ****     *
  36:Generated_Source\PSoC4/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC4/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC4/USBUART_episr.c **** 
  40:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC4/USBUART_episr.c **** 
  44:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC4/USBUART_episr.c **** 
  46:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC4/USBUART_episr.c **** 
  48:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC4/USBUART_episr.c ****         {
  51:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC4/USBUART_episr.c ****     
  55:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  38              		.loc 1 55 0
  39 0004 0D4B     		ldr	r3, .L3
  40 0006 0122     		movs	r2, #1
  41 0008 1A60     		str	r2, [r3]
  56:Generated_Source\PSoC4/USBUART_episr.c ****             
  57:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC4/USBUART_episr.c ****         */
  61:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC4/USBUART_episr.c ****         {
  65:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  42              		.loc 1 66 0
  43 000a 0D4B     		ldr	r3, .L3+4
  44 000c 9B6C     		ldr	r3, [r3, #72]
  67:Generated_Source\PSoC4/USBUART_episr.c ****             
  68:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  45              		.loc 1 69 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 3


  46 000e 0D4B     		ldr	r3, .L3+8
  47 0010 1B7B     		ldrb	r3, [r3, #12]
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 1A00     		movs	r2, r3
  50 0016 0323     		movs	r3, #3
  51 0018 1340     		ands	r3, r2
  52 001a 012B     		cmp	r3, #1
  53 001c 08D0     		beq	.L2
  70:Generated_Source\PSoC4/USBUART_episr.c ****             {
  71:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  54              		.loc 1 71 0
  55 001e 094B     		ldr	r3, .L3+8
  56 0020 DB7B     		ldrb	r3, [r3, #15]
  57 0022 DBB2     		uxtb	r3, r3
  58 0024 8022     		movs	r2, #128
  59 0026 5242     		rsbs	r2, r2, #0
  60 0028 5340     		eors	r3, r2
  61 002a DAB2     		uxtb	r2, r3
  62 002c 054B     		ldr	r3, .L3+8
  63 002e DA73     		strb	r2, [r3, #15]
  64              	.L2:
  72:Generated_Source\PSoC4/USBUART_episr.c ****             }
  73:Generated_Source\PSoC4/USBUART_episr.c **** 
  74:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC4/USBUART_episr.c ****             */
  80:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  65              		.loc 1 80 0
  66 0030 044B     		ldr	r3, .L3+8
  67 0032 0122     		movs	r2, #1
  68 0034 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC4/USBUART_episr.c ****         }
  82:Generated_Source\PSoC4/USBUART_episr.c **** 
  83:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC4/USBUART_episr.c ****             {
  88:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC4/USBUART_episr.c ****             }
  90:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC4/USBUART_episr.c ****     
  93:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC4/USBUART_episr.c **** 
  95:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC4/USBUART_episr.c **** 
  97:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC4/USBUART_episr.c **** 
 101:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC4/USBUART_episr.c ****         
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 4


 104:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC4/USBUART_episr.c ****         }
 106:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC4/USBUART_episr.c ****     }
  69              		.loc 1 107 0
  70 0036 C046     		nop
  71 0038 BD46     		mov	sp, r7
  72              		@ sp needed
  73 003a 80BD     		pop	{r7, pc}
  74              	.L4:
  75              		.align	2
  76              	.L3:
  77 003c 2C002C40 		.word	1076625452
  78 0040 F0FF2B40 		.word	1076625392
  79 0044 00000000 		.word	USBUART_EP
  80              		.cfi_endproc
  81              	.LFE1:
  82              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  83              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  84              		.align	2
  85              		.global	USBUART_EP_2_ISR
  86              		.code	16
  87              		.thumb_func
  88              		.type	USBUART_EP_2_ISR, %function
  89              	USBUART_EP_2_ISR:
  90              	.LFB2:
 108:Generated_Source\PSoC4/USBUART_episr.c **** 
 109:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC4/USBUART_episr.c **** 
 111:Generated_Source\PSoC4/USBUART_episr.c **** 
 112:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC4/USBUART_episr.c ****     *
 117:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC4/USBUART_episr.c ****     *
 119:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC4/USBUART_episr.c ****     {
  91              		.loc 1 121 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95 0000 80B5     		push	{r7, lr}
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC4/USBUART_episr.c **** 
 126:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC4/USBUART_episr.c **** 
 128:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 5


 129:Generated_Source\PSoC4/USBUART_episr.c **** 
 130:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC4/USBUART_episr.c ****         {
 133:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC4/USBUART_episr.c **** 
 137:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
 101              		.loc 1 137 0
 102 0004 0E4B     		ldr	r3, .L7
 103 0006 0222     		movs	r2, #2
 104 0008 1A60     		str	r2, [r3]
 138:Generated_Source\PSoC4/USBUART_episr.c **** 
 139:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC4/USBUART_episr.c ****         */
 143:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
 105              		.loc 1 148 0
 106 000a 0E4A     		ldr	r2, .L7+4
 107 000c 8823     		movs	r3, #136
 108 000e D358     		ldr	r3, [r2, r3]
 149:Generated_Source\PSoC4/USBUART_episr.c ****             
 150:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
 109              		.loc 1 151 0
 110 0010 0D4B     		ldr	r3, .L7+8
 111 0012 1B7E     		ldrb	r3, [r3, #24]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 1A00     		movs	r2, r3
 114 0018 0323     		movs	r3, #3
 115 001a 1340     		ands	r3, r2
 116 001c 012B     		cmp	r3, #1
 117 001e 08D0     		beq	.L6
 152:Generated_Source\PSoC4/USBUART_episr.c ****             {
 153:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 118              		.loc 1 153 0
 119 0020 094B     		ldr	r3, .L7+8
 120 0022 DB7E     		ldrb	r3, [r3, #27]
 121 0024 DBB2     		uxtb	r3, r3
 122 0026 8022     		movs	r2, #128
 123 0028 5242     		rsbs	r2, r2, #0
 124 002a 5340     		eors	r3, r2
 125 002c DAB2     		uxtb	r2, r3
 126 002e 064B     		ldr	r3, .L7+8
 127 0030 DA76     		strb	r2, [r3, #27]
 128              	.L6:
 154:Generated_Source\PSoC4/USBUART_episr.c ****             }
 155:Generated_Source\PSoC4/USBUART_episr.c **** 
 156:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 6


 158:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC4/USBUART_episr.c ****             */
 162:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 129              		.loc 1 162 0
 130 0032 054B     		ldr	r3, .L7+8
 131 0034 0122     		movs	r2, #1
 132 0036 5A76     		strb	r2, [r3, #25]
 163:Generated_Source\PSoC4/USBUART_episr.c ****         }
 164:Generated_Source\PSoC4/USBUART_episr.c **** 
 165:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC4/USBUART_episr.c ****             {
 170:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC4/USBUART_episr.c ****             }
 172:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC4/USBUART_episr.c ****     
 175:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC4/USBUART_episr.c **** 
 177:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC4/USBUART_episr.c **** 
 179:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC4/USBUART_episr.c **** 
 183:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC4/USBUART_episr.c ****         
 186:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC4/USBUART_episr.c ****         }
 188:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC4/USBUART_episr.c ****     }
 133              		.loc 1 189 0
 134 0038 C046     		nop
 135 003a BD46     		mov	sp, r7
 136              		@ sp needed
 137 003c 80BD     		pop	{r7, pc}
 138              	.L8:
 139 003e C046     		.align	2
 140              	.L7:
 141 0040 2C002C40 		.word	1076625452
 142 0044 F0FF2B40 		.word	1076625392
 143 0048 00000000 		.word	USBUART_EP
 144              		.cfi_endproc
 145              	.LFE2:
 146              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 147              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 148              		.align	2
 149              		.global	USBUART_EP_3_ISR
 150              		.code	16
 151              		.thumb_func
 152              		.type	USBUART_EP_3_ISR, %function
 153              	USBUART_EP_3_ISR:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 7


 154              	.LFB3:
 190:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC4/USBUART_episr.c **** 
 192:Generated_Source\PSoC4/USBUART_episr.c **** 
 193:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC4/USBUART_episr.c ****     *
 198:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC4/USBUART_episr.c ****     *
 200:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC4/USBUART_episr.c ****     {
 155              		.loc 1 202 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159 0000 80B5     		push	{r7, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 7, -8
 162              		.cfi_offset 14, -4
 163 0002 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC4/USBUART_episr.c **** 
 207:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC4/USBUART_episr.c **** 
 209:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC4/USBUART_episr.c **** 
 211:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC4/USBUART_episr.c ****         {
 214:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC4/USBUART_episr.c **** 
 218:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 165              		.loc 1 218 0
 166 0004 104B     		ldr	r3, .L11
 167 0006 0422     		movs	r2, #4
 168 0008 1A60     		str	r2, [r3]
 219:Generated_Source\PSoC4/USBUART_episr.c **** 
 220:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC4/USBUART_episr.c ****         */
 224:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 169              		.loc 1 229 0
 170 000a 104A     		ldr	r2, .L11+4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 8


 171 000c C823     		movs	r3, #200
 172 000e D358     		ldr	r3, [r2, r3]
 230:Generated_Source\PSoC4/USBUART_episr.c **** 
 231:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 173              		.loc 1 232 0
 174 0010 0F4B     		ldr	r3, .L11+8
 175 0012 2422     		movs	r2, #36
 176 0014 9B5C     		ldrb	r3, [r3, r2]
 177 0016 DBB2     		uxtb	r3, r3
 178 0018 1A00     		movs	r2, r3
 179 001a 0323     		movs	r3, #3
 180 001c 1340     		ands	r3, r2
 181 001e 012B     		cmp	r3, #1
 182 0020 0AD0     		beq	.L10
 233:Generated_Source\PSoC4/USBUART_episr.c ****             {
 234:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 183              		.loc 1 234 0
 184 0022 0B4B     		ldr	r3, .L11+8
 185 0024 2722     		movs	r2, #39
 186 0026 9B5C     		ldrb	r3, [r3, r2]
 187 0028 DBB2     		uxtb	r3, r3
 188 002a 8022     		movs	r2, #128
 189 002c 5242     		rsbs	r2, r2, #0
 190 002e 5340     		eors	r3, r2
 191 0030 D9B2     		uxtb	r1, r3
 192 0032 074B     		ldr	r3, .L11+8
 193 0034 2722     		movs	r2, #39
 194 0036 9954     		strb	r1, [r3, r2]
 195              	.L10:
 235:Generated_Source\PSoC4/USBUART_episr.c ****             }
 236:Generated_Source\PSoC4/USBUART_episr.c **** 
 237:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC4/USBUART_episr.c ****             */
 243:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 196              		.loc 1 243 0
 197 0038 054B     		ldr	r3, .L11+8
 198 003a 2522     		movs	r2, #37
 199 003c 0121     		movs	r1, #1
 200 003e 9954     		strb	r1, [r3, r2]
 244:Generated_Source\PSoC4/USBUART_episr.c ****         }
 245:Generated_Source\PSoC4/USBUART_episr.c **** 
 246:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC4/USBUART_episr.c ****             {
 251:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC4/USBUART_episr.c ****             }
 253:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC4/USBUART_episr.c **** 
 256:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 9


 257:Generated_Source\PSoC4/USBUART_episr.c **** 
 258:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC4/USBUART_episr.c **** 
 260:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC4/USBUART_episr.c **** 
 264:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC4/USBUART_episr.c ****         
 267:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC4/USBUART_episr.c ****         }
 269:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC4/USBUART_episr.c ****     }
 201              		.loc 1 270 0
 202 0040 C046     		nop
 203 0042 BD46     		mov	sp, r7
 204              		@ sp needed
 205 0044 80BD     		pop	{r7, pc}
 206              	.L12:
 207 0046 C046     		.align	2
 208              	.L11:
 209 0048 2C002C40 		.word	1076625452
 210 004c F0FF2B40 		.word	1076625392
 211 0050 00000000 		.word	USBUART_EP
 212              		.cfi_endproc
 213              	.LFE3:
 214              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 215              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 216              		.align	2
 217              		.global	USBUART_SOF_ISR
 218              		.code	16
 219              		.thumb_func
 220              		.type	USBUART_SOF_ISR, %function
 221              	USBUART_SOF_ISR:
 222              	.LFB4:
 271:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC4/USBUART_episr.c **** 
 273:Generated_Source\PSoC4/USBUART_episr.c **** 
 274:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC4/USBUART_episr.c ****     *
 279:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC4/USBUART_episr.c ****     *
 281:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC4/USBUART_episr.c ****     {
 284:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC4/USBUART_episr.c **** 
 288:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC4/USBUART_episr.c **** 
 290:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 10


 292:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC4/USBUART_episr.c ****         {
 295:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC4/USBUART_episr.c **** 
 299:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC4/USBUART_episr.c ****         
 301:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC4/USBUART_episr.c ****         */
 305:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC4/USBUART_episr.c ****         {
 309:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC4/USBUART_episr.c **** 
 312:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC4/USBUART_episr.c ****             {
 315:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC4/USBUART_episr.c ****             }
 317:Generated_Source\PSoC4/USBUART_episr.c **** 
 318:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC4/USBUART_episr.c ****             */
 324:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC4/USBUART_episr.c ****         }
 326:Generated_Source\PSoC4/USBUART_episr.c **** 
 327:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC4/USBUART_episr.c ****             {
 332:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC4/USBUART_episr.c ****             }
 334:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC4/USBUART_episr.c **** 
 337:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC4/USBUART_episr.c **** 
 339:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC4/USBUART_episr.c **** 
 341:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC4/USBUART_episr.c **** 
 345:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC4/USBUART_episr.c ****         
 348:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 11


 349:Generated_Source\PSoC4/USBUART_episr.c ****         }
 350:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC4/USBUART_episr.c ****     }
 352:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC4/USBUART_episr.c **** 
 354:Generated_Source\PSoC4/USBUART_episr.c **** 
 355:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC4/USBUART_episr.c ****     *
 360:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC4/USBUART_episr.c ****     *
 362:Generated_Source\PSoC4/USBUART_episr.c ****     *
 363:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC4/USBUART_episr.c ****     {
 366:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC4/USBUART_episr.c **** 
 370:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC4/USBUART_episr.c **** 
 372:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC4/USBUART_episr.c **** 
 374:Generated_Source\PSoC4/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC4/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC4/USBUART_episr.c ****         {
 377:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC4/USBUART_episr.c **** 
 381:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC4/USBUART_episr.c ****     
 383:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC4/USBUART_episr.c ****         */
 387:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC4/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC4/USBUART_episr.c **** 
 394:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC4/USBUART_episr.c ****             {
 397:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC4/USBUART_episr.c ****             }
 399:Generated_Source\PSoC4/USBUART_episr.c **** 
 400:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC4/USBUART_episr.c ****             */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 12


 406:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC4/USBUART_episr.c ****         }
 408:Generated_Source\PSoC4/USBUART_episr.c **** 
 409:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC4/USBUART_episr.c ****             {
 414:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC4/USBUART_episr.c ****             }
 416:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC4/USBUART_episr.c **** 
 419:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC4/USBUART_episr.c **** 
 421:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC4/USBUART_episr.c **** 
 423:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC4/USBUART_episr.c **** 
 427:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC4/USBUART_episr.c ****         
 430:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC4/USBUART_episr.c ****         }
 432:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC4/USBUART_episr.c ****     }
 434:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC4/USBUART_episr.c **** 
 436:Generated_Source\PSoC4/USBUART_episr.c **** 
 437:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC4/USBUART_episr.c ****     *
 442:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC4/USBUART_episr.c ****     *
 444:Generated_Source\PSoC4/USBUART_episr.c ****     *
 445:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC4/USBUART_episr.c ****     {
 448:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC4/USBUART_episr.c **** 
 452:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC4/USBUART_episr.c **** 
 454:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC4/USBUART_episr.c **** 
 456:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC4/USBUART_episr.c ****         {
 459:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC4/USBUART_episr.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 13


 463:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC4/USBUART_episr.c ****         
 465:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC4/USBUART_episr.c ****         */
 469:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC4/USBUART_episr.c ****         {
 473:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC4/USBUART_episr.c **** 
 476:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC4/USBUART_episr.c ****             {
 479:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC4/USBUART_episr.c ****             }
 481:Generated_Source\PSoC4/USBUART_episr.c ****             
 482:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC4/USBUART_episr.c ****             */
 488:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC4/USBUART_episr.c ****         }
 490:Generated_Source\PSoC4/USBUART_episr.c **** 
 491:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC4/USBUART_episr.c ****             {
 496:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC4/USBUART_episr.c ****             }
 498:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC4/USBUART_episr.c **** 
 501:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC4/USBUART_episr.c **** 
 503:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC4/USBUART_episr.c **** 
 505:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC4/USBUART_episr.c **** 
 509:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC4/USBUART_episr.c ****         
 512:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC4/USBUART_episr.c ****         }
 514:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC4/USBUART_episr.c ****     }
 516:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC4/USBUART_episr.c **** 
 518:Generated_Source\PSoC4/USBUART_episr.c **** 
 519:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 14


 520:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC4/USBUART_episr.c ****     *
 524:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC4/USBUART_episr.c ****     *
 526:Generated_Source\PSoC4/USBUART_episr.c ****     *
 527:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC4/USBUART_episr.c ****     {
 530:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC4/USBUART_episr.c **** 
 534:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC4/USBUART_episr.c **** 
 536:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC4/USBUART_episr.c **** 
 538:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC4/USBUART_episr.c ****         {
 541:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC4/USBUART_episr.c ****     
 545:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC4/USBUART_episr.c ****         
 547:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC4/USBUART_episr.c ****         */
 551:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC4/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC4/USBUART_episr.c **** 
 558:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC4/USBUART_episr.c ****             {
 561:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC4/USBUART_episr.c ****             }
 563:Generated_Source\PSoC4/USBUART_episr.c ****             
 564:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC4/USBUART_episr.c ****             */
 570:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC4/USBUART_episr.c ****         }
 572:Generated_Source\PSoC4/USBUART_episr.c **** 
 573:Generated_Source\PSoC4/USBUART_episr.c **** 
 574:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 15


 577:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC4/USBUART_episr.c ****             {
 579:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC4/USBUART_episr.c ****             }
 581:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC4/USBUART_episr.c **** 
 584:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC4/USBUART_episr.c **** 
 586:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC4/USBUART_episr.c **** 
 588:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC4/USBUART_episr.c **** 
 592:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC4/USBUART_episr.c ****         
 595:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC4/USBUART_episr.c ****         }
 597:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC4/USBUART_episr.c ****     }
 599:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC4/USBUART_episr.c **** 
 601:Generated_Source\PSoC4/USBUART_episr.c **** 
 602:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC4/USBUART_episr.c ****     *
 607:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC4/USBUART_episr.c ****     *
 609:Generated_Source\PSoC4/USBUART_episr.c ****     *
 610:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC4/USBUART_episr.c ****     {
 613:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC4/USBUART_episr.c **** 
 617:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC4/USBUART_episr.c **** 
 619:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC4/USBUART_episr.c **** 
 621:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC4/USBUART_episr.c ****         {
 624:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC4/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC4/USBUART_episr.c **** 
 628:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC4/USBUART_episr.c ****         
 630:Generated_Source\PSoC4/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC4/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC4/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC4/USBUART_episr.c ****         */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 16


 634:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC4/USBUART_episr.c ****         {
 638:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC4/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC4/USBUART_episr.c **** 
 641:Generated_Source\PSoC4/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC4/USBUART_episr.c ****             {
 644:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC4/USBUART_episr.c ****             }
 646:Generated_Source\PSoC4/USBUART_episr.c **** 
 647:Generated_Source\PSoC4/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC4/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC4/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC4/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC4/USBUART_episr.c ****             */
 653:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC4/USBUART_episr.c ****         }
 655:Generated_Source\PSoC4/USBUART_episr.c **** 
 656:Generated_Source\PSoC4/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC4/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC4/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC4/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC4/USBUART_episr.c ****             {
 661:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC4/USBUART_episr.c ****             }
 663:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC4/USBUART_episr.c **** 
 666:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC4/USBUART_episr.c **** 
 668:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC4/USBUART_episr.c **** 
 670:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC4/USBUART_episr.c **** 
 674:Generated_Source\PSoC4/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC4/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC4/USBUART_episr.c ****         
 677:Generated_Source\PSoC4/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC4/USBUART_episr.c ****         }
 679:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC4/USBUART_episr.c ****     }
 681:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC4/USBUART_episr.c **** 
 683:Generated_Source\PSoC4/USBUART_episr.c **** 
 684:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC4/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC4/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC4/USBUART_episr.c ****     *
 689:Generated_Source\PSoC4/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC4/USBUART_episr.c ****     *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 17


 691:Generated_Source\PSoC4/USBUART_episr.c ****     *
 692:Generated_Source\PSoC4/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC4/USBUART_episr.c ****     {
 223              		.loc 1 694 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 00AF     		add	r7, sp, #0
 232              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC4/USBUART_episr.c **** 
 699:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC4/USBUART_episr.c **** 
 701:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC4/USBUART_episr.c **** 
 703:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 233              		.loc 1 703 0
 234 0004 024B     		ldr	r3, .L14
 235 0006 0122     		movs	r2, #1
 236 0008 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBUART_episr.c **** 
 705:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC4/USBUART_episr.c ****     }
 237              		.loc 1 708 0
 238 000a C046     		nop
 239 000c BD46     		mov	sp, r7
 240              		@ sp needed
 241 000e 80BD     		pop	{r7, pc}
 242              	.L15:
 243              		.align	2
 244              	.L14:
 245 0010 20202C40 		.word	1076633632
 246              		.cfi_endproc
 247              	.LFE4:
 248              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 249              		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 250              		.align	2
 251              		.global	USBUART_BUS_RESET_ISR
 252              		.code	16
 253              		.thumb_func
 254              		.type	USBUART_BUS_RESET_ISR, %function
 255              	USBUART_BUS_RESET_ISR:
 256              	.LFB5:
 709:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC4/USBUART_episr.c **** 
 711:Generated_Source\PSoC4/USBUART_episr.c **** 
 712:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC4/USBUART_episr.c **** /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 18


 714:Generated_Source\PSoC4/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC4/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC4/USBUART_episr.c **** *
 717:Generated_Source\PSoC4/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC4/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC4/USBUART_episr.c **** *
 720:Generated_Source\PSoC4/USBUART_episr.c **** *
 721:Generated_Source\PSoC4/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC4/USBUART_episr.c **** {
 257              		.loc 1 723 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC4/USBUART_episr.c **** 
 728:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC4/USBUART_episr.c **** 
 730:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC4/USBUART_episr.c **** 
 732:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 267              		.loc 1 732 0
 268 0004 034B     		ldr	r3, .L17
 269 0006 0222     		movs	r2, #2
 270 0008 1A60     		str	r2, [r3]
 733:Generated_Source\PSoC4/USBUART_episr.c **** 
 734:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ReInitComponent();
 271              		.loc 1 734 0
 272 000a FFF7FEFF 		bl	USBUART_ReInitComponent
 735:Generated_Source\PSoC4/USBUART_episr.c **** 
 736:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC4/USBUART_episr.c **** }
 273              		.loc 1 739 0
 274 000e C046     		nop
 275 0010 BD46     		mov	sp, r7
 276              		@ sp needed
 277 0012 80BD     		pop	{r7, pc}
 278              	.L18:
 279              		.align	2
 280              	.L17:
 281 0014 20202C40 		.word	1076633632
 282              		.cfi_endproc
 283              	.LFE5:
 284              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 285              		.section	.text.USBUART_IntrHandler,"ax",%progbits
 286              		.align	2
 287              		.code	16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 19


 288              		.thumb_func
 289              		.type	USBUART_IntrHandler, %function
 290              	USBUART_IntrHandler:
 291              	.LFB6:
 740:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ACTIVE) */
 741:Generated_Source\PSoC4/USBUART_episr.c **** 
 742:Generated_Source\PSoC4/USBUART_episr.c **** 
 743:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_LPM_ACTIVE)
 744:Generated_Source\PSoC4/USBUART_episr.c **** /***************************************************************************
 745:Generated_Source\PSoC4/USBUART_episr.c **** * Function Name: USBUART_INTR_LPM_ISR
 746:Generated_Source\PSoC4/USBUART_episr.c **** ************************************************************************//**
 747:Generated_Source\PSoC4/USBUART_episr.c **** *
 748:Generated_Source\PSoC4/USBUART_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:Generated_Source\PSoC4/USBUART_episr.c **** *
 750:Generated_Source\PSoC4/USBUART_episr.c **** *
 751:Generated_Source\PSoC4/USBUART_episr.c **** ***************************************************************************/
 752:Generated_Source\PSoC4/USBUART_episr.c **** CY_ISR(USBUART_LPM_ISR)
 753:Generated_Source\PSoC4/USBUART_episr.c **** {
 754:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_ENTRY_CALLBACK
 755:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_LPM_ISR_EntryCallback();
 756:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_ENTRY_CALLBACK) */
 757:Generated_Source\PSoC4/USBUART_episr.c **** 
 758:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:Generated_Source\PSoC4/USBUART_episr.c **** 
 760:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 761:Generated_Source\PSoC4/USBUART_episr.c **** 
 762:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_LPM_INTR);
 763:Generated_Source\PSoC4/USBUART_episr.c **** 
 764:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:Generated_Source\PSoC4/USBUART_episr.c **** 
 766:Generated_Source\PSoC4/USBUART_episr.c ****     /* `#END` */
 767:Generated_Source\PSoC4/USBUART_episr.c **** 
 768:Generated_Source\PSoC4/USBUART_episr.c **** #ifdef USBUART_LPM_ISR_EXIT_CALLBACK
 769:Generated_Source\PSoC4/USBUART_episr.c ****     USBUART_LPM_ISR_ExitCallback();
 770:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ISR_EXIT_CALLBACK) */
 771:Generated_Source\PSoC4/USBUART_episr.c **** }
 772:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_LPM_ACTIVE) */
 773:Generated_Source\PSoC4/USBUART_episr.c **** 
 774:Generated_Source\PSoC4/USBUART_episr.c **** 
 775:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 776:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
 777:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_ARB_ISR
 778:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
 779:Generated_Source\PSoC4/USBUART_episr.c ****     *
 780:Generated_Source\PSoC4/USBUART_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:Generated_Source\PSoC4/USBUART_episr.c ****     *
 782:Generated_Source\PSoC4/USBUART_episr.c ****     *
 783:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
 784:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_ARB_ISR)
 785:Generated_Source\PSoC4/USBUART_episr.c ****     {
 786:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 arbIntrStatus;
 787:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 epStatus;
 788:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 ep = USBUART_EP1;
 789:Generated_Source\PSoC4/USBUART_episr.c **** 
 790:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_ARB_ISR_ENTRY_CALLBACK
 791:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ARB_ISR_EntryCallback();
 792:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_ARB_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 20


 793:Generated_Source\PSoC4/USBUART_episr.c **** 
 794:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:Generated_Source\PSoC4/USBUART_episr.c **** 
 796:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 797:Generated_Source\PSoC4/USBUART_episr.c **** 
 798:Generated_Source\PSoC4/USBUART_episr.c ****         /* Get pending ARB interrupt sources. */
 799:Generated_Source\PSoC4/USBUART_episr.c ****         arbIntrStatus = USBUART_ARB_INT_SR_REG;
 800:Generated_Source\PSoC4/USBUART_episr.c **** 
 801:Generated_Source\PSoC4/USBUART_episr.c ****         while (0u != arbIntrStatus)
 802:Generated_Source\PSoC4/USBUART_episr.c ****         {
 803:Generated_Source\PSoC4/USBUART_episr.c ****             /* Check which EP is interrupt source. */
 804:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 805:Generated_Source\PSoC4/USBUART_episr.c ****             {
 806:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:Generated_Source\PSoC4/USBUART_episr.c ****                 epStatus = (USBUART_ARB_EP_BASE.arbEp[ep].epSr & USBUART_ARB_EP_BASE.arbEp[ep].epIn
 808:Generated_Source\PSoC4/USBUART_episr.c **** 
 809:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_IN_BUF_FULL))
 811:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 812:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u != (USBUART_EP[ep].addr & USBUART_DIR_IN))
 813:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 814:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Clear data ready status. */
 815:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_ARB_EP_BASE.arbEp[ep].epCfg &= (uint32) ~USBUART_ARB_EPX_CFG_IN_DAT
 816:Generated_Source\PSoC4/USBUART_episr.c **** 
 817:Generated_Source\PSoC4/USBUART_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:Generated_Source\PSoC4/USBUART_episr.c ****                         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 819:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:Generated_Source\PSoC4/USBUART_episr.c ****                             if(USBUART_inLength[ep] > USBUART_DMA_BYTES_PER_BURST)
 821:Generated_Source\PSoC4/USBUART_episr.c ****                             {
 822:Generated_Source\PSoC4/USBUART_episr.c ****                                 USBUART_LoadNextInEP(ep, 0u);
 823:Generated_Source\PSoC4/USBUART_episr.c ****                             }
 824:Generated_Source\PSoC4/USBUART_episr.c ****                             else
 825:Generated_Source\PSoC4/USBUART_episr.c ****                             {
 826:Generated_Source\PSoC4/USBUART_episr.c ****                                 USBUART_inBufFull[ep] = 1u;
 827:Generated_Source\PSoC4/USBUART_episr.c ****                             }
 828:Generated_Source\PSoC4/USBUART_episr.c ****                         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u
 829:Generated_Source\PSoC4/USBUART_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:Generated_Source\PSoC4/USBUART_episr.c **** 
 831:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Arm IN endpoint. */
 832:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_SIE_EP_BASE.sieEp[ep].epCr0 = USBUART_EP[ep].epMode;
 833:Generated_Source\PSoC4/USBUART_episr.c **** 
 834:Generated_Source\PSoC4/USBUART_episr.c ****                     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && USBUART_ISR_SERVICE_MIDI_IN)
 835:Generated_Source\PSoC4/USBUART_episr.c ****                         if (ep == USBUART_midi_in_ep)
 836:Generated_Source\PSoC4/USBUART_episr.c ****                         {
 837:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Clear MIDI input pointer. */
 838:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_midiInPointer = 0u;
 839:Generated_Source\PSoC4/USBUART_episr.c ****                         }
 840:Generated_Source\PSoC4/USBUART_episr.c ****                     #endif /* (USBUART_ENABLE_MIDI_STREAMING) */
 841:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 842:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 843:Generated_Source\PSoC4/USBUART_episr.c **** 
 844:Generated_Source\PSoC4/USBUART_episr.c ****             #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
 845:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_SR_DMA_GNT))
 847:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 848:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u == (USBUART_EP[ep].addr & USBUART_DIR_IN))
 849:Generated_Source\PSoC4/USBUART_episr.c ****                     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 21


 850:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_EP[ep].apiEpState = USBUART_NO_EVENT_PENDING;
 852:Generated_Source\PSoC4/USBUART_episr.c **** 
 853:Generated_Source\PSoC4/USBUART_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 855:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 856:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
 857:Generated_Source\PSoC4/USBUART_episr.c **** 
 858:Generated_Source\PSoC4/USBUART_episr.c ****             #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 859:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:Generated_Source\PSoC4/USBUART_episr.c ****                 if (0u != (epStatus & USBUART_ARB_EPX_INT_DMA_TERMIN))
 861:Generated_Source\PSoC4/USBUART_episr.c ****                 {
 862:Generated_Source\PSoC4/USBUART_episr.c ****                     uint32 channelNum = USBUART_DmaChan[ep];
 863:Generated_Source\PSoC4/USBUART_episr.c **** 
 864:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore burst counter for endpoint. */
 865:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_DmaEpBurstCnt[ep] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCntBack
 866:Generated_Source\PSoC4/USBUART_episr.c **** 
 867:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaChDisable(channelNum);
 869:Generated_Source\PSoC4/USBUART_episr.c **** 
 870:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:Generated_Source\PSoC4/USBUART_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:Generated_Source\PSoC4/USBUART_episr.c ****                     */
 873:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaTriggerOut(USBUART_DmaBurstEndOut[ep]);
 874:Generated_Source\PSoC4/USBUART_episr.c **** 
 875:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore destination address for output endpoint. */
 876:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
 877:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
 878:Generated_Source\PSoC4/USBUART_episr.c ****                                                                                                    
 879:Generated_Source\PSoC4/USBUART_episr.c **** 
 880:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:Generated_Source\PSoC4/USBUART_episr.c ****                     if (0u != (USBUART_DmaEpLastBurstEl[ep] & USBUART_DMA_DESCR_REVERT))
 882:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 883:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_CyDmaSetNumDataElements(channelNum, (USBUART_DmaEpLastBurstEl[ep] >
 884:Generated_Source\PSoC4/USBUART_episr.c ****                                                                              USBUART_DMA_GET_MAX_EL
 885:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 886:Generated_Source\PSoC4/USBUART_episr.c **** 
 887:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
 889:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_DmaEpBurstCntBackup[ep] > 1u)
 890:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 891:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
 892:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 893:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
 894:Generated_Source\PSoC4/USBUART_episr.c **** 
 895:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Enable DMA channel: configuration complete. */
 896:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_CyDmaChEnable(channelNum);
 897:Generated_Source\PSoC4/USBUART_episr.c ****                     
 898:Generated_Source\PSoC4/USBUART_episr.c ****                     
 899:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 900:Generated_Source\PSoC4/USBUART_episr.c ****                     (void) USBUART_SIE_EP_BASE.sieEp[ep].epCr0;
 901:Generated_Source\PSoC4/USBUART_episr.c ****                     
 902:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 903:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_GET_EP_TYPE(ep) != USBUART_EP_TYPE_ISOC)
 904:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 905:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_EP[ep].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 906:Generated_Source\PSoC4/USBUART_episr.c ****                     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 22


 907:Generated_Source\PSoC4/USBUART_episr.c ****             
 908:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 909:Generated_Source\PSoC4/USBUART_episr.c ****                     USBUART_EP[ep].apiEpState = USBUART_EVENT_PENDING;
 910:Generated_Source\PSoC4/USBUART_episr.c ****                     
 911:Generated_Source\PSoC4/USBUART_episr.c ****                 #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 912:Generated_Source\PSoC4/USBUART_episr.c ****                     !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 913:Generated_Source\PSoC4/USBUART_episr.c ****                     if (USBUART_midi_out_ep == ep)
 914:Generated_Source\PSoC4/USBUART_episr.c ****                     {
 915:Generated_Source\PSoC4/USBUART_episr.c ****                         USBUART_MIDI_OUT_Service();
 916:Generated_Source\PSoC4/USBUART_episr.c ****                     }
 917:Generated_Source\PSoC4/USBUART_episr.c ****                 #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 918:Generated_Source\PSoC4/USBUART_episr.c ****                 }
 919:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 920:Generated_Source\PSoC4/USBUART_episr.c **** 
 921:Generated_Source\PSoC4/USBUART_episr.c **** 
 922:Generated_Source\PSoC4/USBUART_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 923:Generated_Source\PSoC4/USBUART_episr.c **** 
 924:Generated_Source\PSoC4/USBUART_episr.c ****                 /* `#END` */
 925:Generated_Source\PSoC4/USBUART_episr.c **** 
 926:Generated_Source\PSoC4/USBUART_episr.c ****             #ifdef USBUART_ARB_ISR_CALLBACK
 927:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_ARB_ISR_Callback(ep, epStatus);
 928:Generated_Source\PSoC4/USBUART_episr.c ****             #endif /* (USBUART_ARB_ISR_CALLBACK) */
 929:Generated_Source\PSoC4/USBUART_episr.c **** 
 930:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 931:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 932:Generated_Source\PSoC4/USBUART_episr.c ****             }
 933:Generated_Source\PSoC4/USBUART_episr.c **** 
 934:Generated_Source\PSoC4/USBUART_episr.c ****             ++ep;
 935:Generated_Source\PSoC4/USBUART_episr.c ****             arbIntrStatus >>= 1u;
 936:Generated_Source\PSoC4/USBUART_episr.c ****         }
 937:Generated_Source\PSoC4/USBUART_episr.c **** 
 938:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 939:Generated_Source\PSoC4/USBUART_episr.c **** 
 940:Generated_Source\PSoC4/USBUART_episr.c ****         /* `#END` */
 941:Generated_Source\PSoC4/USBUART_episr.c **** 
 942:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_ARB_ISR_EXIT_CALLBACK
 943:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_ARB_ISR_ExitCallback();
 944:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_ARB_ISR_EXIT_CALLBACK) */
 945:Generated_Source\PSoC4/USBUART_episr.c ****     }
 946:Generated_Source\PSoC4/USBUART_episr.c **** 
 947:Generated_Source\PSoC4/USBUART_episr.c **** #endif /*  (USBUART_ARB_ISR_ACTIVE && USBUART_EP_MANAGEMENT_DMA) */
 948:Generated_Source\PSoC4/USBUART_episr.c **** 
 949:Generated_Source\PSoC4/USBUART_episr.c **** 
 950:Generated_Source\PSoC4/USBUART_episr.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 951:Generated_Source\PSoC4/USBUART_episr.c **** #if (CY_PSOC4)
 952:Generated_Source\PSoC4/USBUART_episr.c **** 
 953:Generated_Source\PSoC4/USBUART_episr.c ****     /******************************************************************************
 954:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_EPxDmaDone
 955:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************//**
 956:Generated_Source\PSoC4/USBUART_episr.c ****     *
 957:Generated_Source\PSoC4/USBUART_episr.c ****     * \internal
 958:Generated_Source\PSoC4/USBUART_episr.c ****     *  Endpoint  DMA Done Interrupt Service Routine basic function .
 959:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 960:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param dmaCh
 961:Generated_Source\PSoC4/USBUART_episr.c ****     *  number of DMA channel
 962:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 963:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param ep
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 23


 964:Generated_Source\PSoC4/USBUART_episr.c ****     *  number of USB end point
 965:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 966:Generated_Source\PSoC4/USBUART_episr.c ****     *  \param dmaDone
 967:Generated_Source\PSoC4/USBUART_episr.c ****     *  transfer completion flag
 968:Generated_Source\PSoC4/USBUART_episr.c ****     *  
 969:Generated_Source\PSoC4/USBUART_episr.c ****     *  \return
 970:Generated_Source\PSoC4/USBUART_episr.c ****     *   updated transfer completion flag
 971:Generated_Source\PSoC4/USBUART_episr.c ****     *
 972:Generated_Source\PSoC4/USBUART_episr.c ****     ******************************************************************************/
 973:Generated_Source\PSoC4/USBUART_episr.c ****     CY_INLINE static void USBUART_EPxDmaDone(uint8 dmaCh, uint8 ep)
 974:Generated_Source\PSoC4/USBUART_episr.c ****     {
 975:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 nextAddr;
 976:Generated_Source\PSoC4/USBUART_episr.c **** 
 977:Generated_Source\PSoC4/USBUART_episr.c ****         /* Manage data elements which remain to transfer. */
 978:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != USBUART_DmaEpBurstCnt[ep])
 979:Generated_Source\PSoC4/USBUART_episr.c ****         {
 980:Generated_Source\PSoC4/USBUART_episr.c ****             if(USBUART_DmaEpBurstCnt[ep] <= 2u)
 981:Generated_Source\PSoC4/USBUART_episr.c ****             {
 982:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Adjust length of last burst. */
 983:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetNumDataElements(dmaCh,
 984:Generated_Source\PSoC4/USBUART_episr.c ****                                                     ((uint32) USBUART_DmaEpLastBurstEl[ep] >> USBUA
 985:Generated_Source\PSoC4/USBUART_episr.c ****                                                     ((uint32) USBUART_DmaEpLastBurstEl[ep] &  USBUA
 986:Generated_Source\PSoC4/USBUART_episr.c ****             }
 987:Generated_Source\PSoC4/USBUART_episr.c ****             
 988:Generated_Source\PSoC4/USBUART_episr.c **** 
 989:Generated_Source\PSoC4/USBUART_episr.c ****             /* Advance source for input endpoint or destination for output endpoint. */
 990:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (USBUART_EP[ep].addr & USBUART_DIR_IN))
 991:Generated_Source\PSoC4/USBUART_episr.c ****             {
 992:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change source for descriptor 0. */
 993:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr = (uint32) USBUART_CyDmaGetSrcAddress(dmaCh, USBUART_DMA_DESCR0);
 994:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += (2u * USBUART_DMA_BYTES_PER_BURST);
 995:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetSrcAddress(dmaCh, USBUART_DMA_DESCR0, (void *) nextAddr);
 996:Generated_Source\PSoC4/USBUART_episr.c **** 
 997:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change source for descriptor 1. */
 998:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += USBUART_DMA_BYTES_PER_BURST;
 999:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetSrcAddress(dmaCh, USBUART_DMA_DESCR1, (void *) nextAddr);
1000:Generated_Source\PSoC4/USBUART_episr.c ****             }
1001:Generated_Source\PSoC4/USBUART_episr.c ****             else
1002:Generated_Source\PSoC4/USBUART_episr.c ****             {
1003:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change destination for descriptor 0. */
1004:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr  = (uint32) USBUART_CyDmaGetDstAddress(dmaCh, USBUART_DMA_DESCR0);
1005:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += (2u * USBUART_DMA_BYTES_PER_BURST);
1006:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetDstAddress(dmaCh, USBUART_DMA_DESCR0, (void *) nextAddr);
1007:Generated_Source\PSoC4/USBUART_episr.c **** 
1008:Generated_Source\PSoC4/USBUART_episr.c ****                 /* Change destination for descriptor 1. */
1009:Generated_Source\PSoC4/USBUART_episr.c ****                 nextAddr += USBUART_DMA_BYTES_PER_BURST;
1010:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaSetDstAddress(dmaCh, USBUART_DMA_DESCR1, (void *) nextAddr);
1011:Generated_Source\PSoC4/USBUART_episr.c ****             }
1012:Generated_Source\PSoC4/USBUART_episr.c **** 
1013:Generated_Source\PSoC4/USBUART_episr.c ****             /* Enable DMA to execute transfer as it was disabled because there were no valid descri
1014:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaValidateDescriptor(dmaCh, USBUART_DMA_DESCR0);
1015:Generated_Source\PSoC4/USBUART_episr.c ****             
1016:Generated_Source\PSoC4/USBUART_episr.c ****             --USBUART_DmaEpBurstCnt[ep];
1017:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != USBUART_DmaEpBurstCnt[ep])
1018:Generated_Source\PSoC4/USBUART_episr.c ****             {
1019:Generated_Source\PSoC4/USBUART_episr.c ****                 USBUART_CyDmaValidateDescriptor(dmaCh, USBUART_DMA_DESCR1);
1020:Generated_Source\PSoC4/USBUART_episr.c ****                 --USBUART_DmaEpBurstCnt[ep];
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 24


1021:Generated_Source\PSoC4/USBUART_episr.c ****             }
1022:Generated_Source\PSoC4/USBUART_episr.c ****             
1023:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaChEnable (dmaCh);
1024:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_CyDmaTriggerIn(USBUART_DmaReqOut[ep]);
1025:Generated_Source\PSoC4/USBUART_episr.c ****         }
1026:Generated_Source\PSoC4/USBUART_episr.c ****         else
1027:Generated_Source\PSoC4/USBUART_episr.c ****         {
1028:Generated_Source\PSoC4/USBUART_episr.c ****             /* No data to transfer. False DMA trig. Ignore.  */
1029:Generated_Source\PSoC4/USBUART_episr.c ****         }
1030:Generated_Source\PSoC4/USBUART_episr.c **** 
1031:Generated_Source\PSoC4/USBUART_episr.c ****     }
1032:Generated_Source\PSoC4/USBUART_episr.c **** 
1033:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA1_ACTIVE)
1034:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1035:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP1_DMA_DONE_ISR
1036:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1037:Generated_Source\PSoC4/USBUART_episr.c ****         *
1038:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 1 DMA Done Interrupt Service Routine.
1039:Generated_Source\PSoC4/USBUART_episr.c ****         *
1040:Generated_Source\PSoC4/USBUART_episr.c ****         *
1041:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1042:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP1_DMA_DONE_ISR(void)
1043:Generated_Source\PSoC4/USBUART_episr.c ****         {
1044:Generated_Source\PSoC4/USBUART_episr.c **** 
1045:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP1_DMA_CH,
1046:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP1);
1047:Generated_Source\PSoC4/USBUART_episr.c ****                 
1048:Generated_Source\PSoC4/USBUART_episr.c ****         }
1049:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1050:Generated_Source\PSoC4/USBUART_episr.c **** 
1051:Generated_Source\PSoC4/USBUART_episr.c **** 
1052:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA2_ACTIVE)
1053:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1054:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP2_DMA_DONE_ISR
1055:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1056:Generated_Source\PSoC4/USBUART_episr.c ****         *
1057:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 2 DMA Done Interrupt Service Routine.
1058:Generated_Source\PSoC4/USBUART_episr.c ****         *
1059:Generated_Source\PSoC4/USBUART_episr.c ****         *
1060:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1061:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP2_DMA_DONE_ISR(void)
1062:Generated_Source\PSoC4/USBUART_episr.c ****         {
1063:Generated_Source\PSoC4/USBUART_episr.c **** 
1064:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP2_DMA_CH,
1065:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP2);
1066:Generated_Source\PSoC4/USBUART_episr.c ****         }
1067:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1068:Generated_Source\PSoC4/USBUART_episr.c **** 
1069:Generated_Source\PSoC4/USBUART_episr.c **** 
1070:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA3_ACTIVE)
1071:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1072:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP3_DMA_DONE_ISR
1073:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1074:Generated_Source\PSoC4/USBUART_episr.c ****         *
1075:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 3 DMA Done Interrupt Service Routine.
1076:Generated_Source\PSoC4/USBUART_episr.c ****         *
1077:Generated_Source\PSoC4/USBUART_episr.c ****         *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 25


1078:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1079:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP3_DMA_DONE_ISR(void)
1080:Generated_Source\PSoC4/USBUART_episr.c ****         {
1081:Generated_Source\PSoC4/USBUART_episr.c **** 
1082:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP3_DMA_CH,
1083:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP3);
1084:Generated_Source\PSoC4/USBUART_episr.c ****         }
1085:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1086:Generated_Source\PSoC4/USBUART_episr.c **** 
1087:Generated_Source\PSoC4/USBUART_episr.c **** 
1088:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA4_ACTIVE)
1089:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1090:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP4_DMA_DONE_ISR
1091:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1092:Generated_Source\PSoC4/USBUART_episr.c ****         *
1093:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 4 DMA Done Interrupt Service Routine.
1094:Generated_Source\PSoC4/USBUART_episr.c ****         *
1095:Generated_Source\PSoC4/USBUART_episr.c ****         *
1096:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1097:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP4_DMA_DONE_ISR(void)
1098:Generated_Source\PSoC4/USBUART_episr.c ****         {
1099:Generated_Source\PSoC4/USBUART_episr.c **** 
1100:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP4_DMA_CH,
1101:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP4);
1102:Generated_Source\PSoC4/USBUART_episr.c ****         }
1103:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1104:Generated_Source\PSoC4/USBUART_episr.c **** 
1105:Generated_Source\PSoC4/USBUART_episr.c **** 
1106:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA5_ACTIVE)
1107:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1108:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP5_DMA_DONE_ISR
1109:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1110:Generated_Source\PSoC4/USBUART_episr.c ****         *
1111:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 5 DMA Done Interrupt Service Routine.
1112:Generated_Source\PSoC4/USBUART_episr.c ****         *
1113:Generated_Source\PSoC4/USBUART_episr.c ****         *
1114:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1115:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP5_DMA_DONE_ISR(void)
1116:Generated_Source\PSoC4/USBUART_episr.c ****         {
1117:Generated_Source\PSoC4/USBUART_episr.c **** 
1118:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP5_DMA_CH,
1119:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP5);
1120:Generated_Source\PSoC4/USBUART_episr.c ****         }
1121:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1122:Generated_Source\PSoC4/USBUART_episr.c **** 
1123:Generated_Source\PSoC4/USBUART_episr.c **** 
1124:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA6_ACTIVE)
1125:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1126:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP6_DMA_DONE_ISR
1127:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1128:Generated_Source\PSoC4/USBUART_episr.c ****         *
1129:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 6 DMA Done Interrupt Service Routine.
1130:Generated_Source\PSoC4/USBUART_episr.c ****         *
1131:Generated_Source\PSoC4/USBUART_episr.c ****         *
1132:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1133:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP6_DMA_DONE_ISR(void)
1134:Generated_Source\PSoC4/USBUART_episr.c ****         {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 26


1135:Generated_Source\PSoC4/USBUART_episr.c **** 
1136:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP6_DMA_CH,
1137:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP6);
1138:Generated_Source\PSoC4/USBUART_episr.c ****         }
1139:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1140:Generated_Source\PSoC4/USBUART_episr.c **** 
1141:Generated_Source\PSoC4/USBUART_episr.c **** 
1142:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA7_ACTIVE)
1143:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1144:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP7_DMA_DONE_ISR
1145:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1146:Generated_Source\PSoC4/USBUART_episr.c ****         *
1147:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 7 DMA Done Interrupt Service Routine.
1148:Generated_Source\PSoC4/USBUART_episr.c ****         *
1149:Generated_Source\PSoC4/USBUART_episr.c ****         *
1150:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1151:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP7_DMA_DONE_ISR(void)
1152:Generated_Source\PSoC4/USBUART_episr.c ****         {
1153:Generated_Source\PSoC4/USBUART_episr.c **** 
1154:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP7_DMA_CH,
1155:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP7);
1156:Generated_Source\PSoC4/USBUART_episr.c ****         }
1157:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1158:Generated_Source\PSoC4/USBUART_episr.c **** 
1159:Generated_Source\PSoC4/USBUART_episr.c **** 
1160:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_DMA8_ACTIVE)
1161:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1162:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP8_DMA_DONE_ISR
1163:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1164:Generated_Source\PSoC4/USBUART_episr.c ****         *
1165:Generated_Source\PSoC4/USBUART_episr.c ****         *  Endpoint 8 DMA Done Interrupt Service Routine.
1166:Generated_Source\PSoC4/USBUART_episr.c ****         *
1167:Generated_Source\PSoC4/USBUART_episr.c ****         *
1168:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1169:Generated_Source\PSoC4/USBUART_episr.c ****         void USBUART_EP8_DMA_DONE_ISR(void)
1170:Generated_Source\PSoC4/USBUART_episr.c ****         {
1171:Generated_Source\PSoC4/USBUART_episr.c **** 
1172:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EPxDmaDone((uint8)USBUART_EP8_DMA_CH,
1173:Generated_Source\PSoC4/USBUART_episr.c ****                                                   USBUART_EP8);
1174:Generated_Source\PSoC4/USBUART_episr.c ****         }
1175:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1176:Generated_Source\PSoC4/USBUART_episr.c **** 
1177:Generated_Source\PSoC4/USBUART_episr.c **** 
1178:Generated_Source\PSoC4/USBUART_episr.c **** #else
1179:Generated_Source\PSoC4/USBUART_episr.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1180:Generated_Source\PSoC4/USBUART_episr.c ****         /******************************************************************************
1181:Generated_Source\PSoC4/USBUART_episr.c ****         * Function Name: USBUART_EP_DMA_DONE_ISR
1182:Generated_Source\PSoC4/USBUART_episr.c ****         ***************************************************************************//**
1183:Generated_Source\PSoC4/USBUART_episr.c ****         *
1184:Generated_Source\PSoC4/USBUART_episr.c ****         *  DMA Done Interrupt Service Routine.
1185:Generated_Source\PSoC4/USBUART_episr.c ****         *
1186:Generated_Source\PSoC4/USBUART_episr.c ****         *
1187:Generated_Source\PSoC4/USBUART_episr.c ****         ******************************************************************************/
1188:Generated_Source\PSoC4/USBUART_episr.c ****         CY_ISR(USBUART_EP_DMA_DONE_ISR)
1189:Generated_Source\PSoC4/USBUART_episr.c ****         {
1190:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 int8Status;
1191:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 int17Status;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 27


1192:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 ep_status;
1193:Generated_Source\PSoC4/USBUART_episr.c ****             uint8 ep = USBUART_EP1;
1194:Generated_Source\PSoC4/USBUART_episr.c **** 
1195:Generated_Source\PSoC4/USBUART_episr.c ****         #ifdef USBUART_EP_DMA_DONE_ISR_ENTRY_CALLBACK
1196:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_EP_DMA_DONE_ISR_EntryCallback();
1197:Generated_Source\PSoC4/USBUART_episr.c ****         #endif /* (USBUART_EP_DMA_DONE_ISR_ENTRY_CALLBACK) */
1198:Generated_Source\PSoC4/USBUART_episr.c **** 
1199:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#START EP_DMA_DONE_BEGIN_USER_CODE` Place your code here */
1200:Generated_Source\PSoC4/USBUART_episr.c **** 
1201:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#END` */
1202:Generated_Source\PSoC4/USBUART_episr.c **** 
1203:Generated_Source\PSoC4/USBUART_episr.c ****             /* Read clear on read status register with EP source of interrupt. */
1204:Generated_Source\PSoC4/USBUART_episr.c ****             int17Status = USBUART_EP17_DMA_Done_SR_Read() & USBUART_EP17_SR_MASK;
1205:Generated_Source\PSoC4/USBUART_episr.c ****             int8Status  = USBUART_EP8_DMA_Done_SR_Read()  & USBUART_EP8_SR_MASK;
1206:Generated_Source\PSoC4/USBUART_episr.c **** 
1207:Generated_Source\PSoC4/USBUART_episr.c ****             while (int8Status != 0u)
1208:Generated_Source\PSoC4/USBUART_episr.c ****             {
1209:Generated_Source\PSoC4/USBUART_episr.c ****                 while (int17Status != 0u)
1210:Generated_Source\PSoC4/USBUART_episr.c ****                 {
1211:Generated_Source\PSoC4/USBUART_episr.c ****                     if ((int17Status & 1u) != 0u)  /* If EpX interrupt present. */
1212:Generated_Source\PSoC4/USBUART_episr.c ****                     {
1213:Generated_Source\PSoC4/USBUART_episr.c ****                         /* Read Endpoint Status Register. */
1214:Generated_Source\PSoC4/USBUART_episr.c ****                         ep_status = USBUART_ARB_EP_BASE.arbEp[ep].epSr;
1215:Generated_Source\PSoC4/USBUART_episr.c **** 
1216:Generated_Source\PSoC4/USBUART_episr.c ****                         if ((0u == (ep_status & USBUART_ARB_EPX_SR_IN_BUF_FULL)) &&
1217:Generated_Source\PSoC4/USBUART_episr.c ****                             (0u ==USBUART_inBufFull[ep]))
1218:Generated_Source\PSoC4/USBUART_episr.c ****                         {
1219:Generated_Source\PSoC4/USBUART_episr.c ****                             /* `#START EP_DMA_DONE_USER_CODE` Place your code here */
1220:Generated_Source\PSoC4/USBUART_episr.c **** 
1221:Generated_Source\PSoC4/USBUART_episr.c ****                             /* `#END` */
1222:Generated_Source\PSoC4/USBUART_episr.c **** 
1223:Generated_Source\PSoC4/USBUART_episr.c ****                         #ifdef USBUART_EP_DMA_DONE_ISR_CALLBACK
1224:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_EP_DMA_DONE_ISR_Callback();
1225:Generated_Source\PSoC4/USBUART_episr.c ****                         #endif /* (USBUART_EP_DMA_DONE_ISR_CALLBACK) */
1226:Generated_Source\PSoC4/USBUART_episr.c **** 
1227:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Transfer again 2 last bytes into pre-fetch endpoint area. */
1228:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].rwWaMsb = 0u;
1229:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].rwWa = (USBUART_DMA_BYTES_PER_BURST * ep)
1230:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_LoadNextInEP(ep, 1u);
1231:Generated_Source\PSoC4/USBUART_episr.c **** 
1232:Generated_Source\PSoC4/USBUART_episr.c ****                             /* Set Data ready status to generate DMA request. */
1233:Generated_Source\PSoC4/USBUART_episr.c ****                             USBUART_ARB_EP_BASE.arbEp[ep].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1234:Generated_Source\PSoC4/USBUART_episr.c ****                         }
1235:Generated_Source\PSoC4/USBUART_episr.c ****                     }
1236:Generated_Source\PSoC4/USBUART_episr.c **** 
1237:Generated_Source\PSoC4/USBUART_episr.c ****                     ep++;
1238:Generated_Source\PSoC4/USBUART_episr.c ****                     int17Status >>= 1u;
1239:Generated_Source\PSoC4/USBUART_episr.c ****                 }
1240:Generated_Source\PSoC4/USBUART_episr.c **** 
1241:Generated_Source\PSoC4/USBUART_episr.c ****                 int8Status >>= 1u;
1242:Generated_Source\PSoC4/USBUART_episr.c **** 
1243:Generated_Source\PSoC4/USBUART_episr.c ****                 if (int8Status != 0u)
1244:Generated_Source\PSoC4/USBUART_episr.c ****                 {
1245:Generated_Source\PSoC4/USBUART_episr.c ****                     /* Prepare pointer for EP8. */
1246:Generated_Source\PSoC4/USBUART_episr.c ****                     ep = USBUART_EP8;
1247:Generated_Source\PSoC4/USBUART_episr.c ****                     int17Status = int8Status & 0x01u;
1248:Generated_Source\PSoC4/USBUART_episr.c ****                 }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 28


1249:Generated_Source\PSoC4/USBUART_episr.c ****             }
1250:Generated_Source\PSoC4/USBUART_episr.c **** 
1251:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#START EP_DMA_DONE_END_USER_CODE` Place your code here */
1252:Generated_Source\PSoC4/USBUART_episr.c **** 
1253:Generated_Source\PSoC4/USBUART_episr.c ****             /* `#END` */
1254:Generated_Source\PSoC4/USBUART_episr.c **** 
1255:Generated_Source\PSoC4/USBUART_episr.c ****     #ifdef USBUART_EP_DMA_DONE_ISR_EXIT_CALLBACK
1256:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_EP_DMA_DONE_ISR_ExitCallback();
1257:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_DMA_DONE_ISR_EXIT_CALLBACK) */
1258:Generated_Source\PSoC4/USBUART_episr.c ****         }
1259:Generated_Source\PSoC4/USBUART_episr.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1260:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (CY_PSOC4) */
1261:Generated_Source\PSoC4/USBUART_episr.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1262:Generated_Source\PSoC4/USBUART_episr.c **** 
1263:Generated_Source\PSoC4/USBUART_episr.c **** 
1264:Generated_Source\PSoC4/USBUART_episr.c **** #if (CY_PSOC4)
1265:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1266:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_IntrHandler
1267:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1268:Generated_Source\PSoC4/USBUART_episr.c ****     *
1269:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt handler for Hi/Mid/Low ISRs.
1270:Generated_Source\PSoC4/USBUART_episr.c ****     *
1271:Generated_Source\PSoC4/USBUART_episr.c ****     *  regCause - The cause register of interrupt. One of the three variants:
1272:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_LO_REG - Low interrupts.
1273:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_MED_REG - Med interrupts.
1274:Generated_Source\PSoC4/USBUART_episr.c ****     *       USBUART_INTR_CAUSE_HI_REG - - High interrupts.
1275:Generated_Source\PSoC4/USBUART_episr.c ****     *
1276:Generated_Source\PSoC4/USBUART_episr.c ****     *
1277:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1278:Generated_Source\PSoC4/USBUART_episr.c ****     CY_INLINE static void USBUART_IntrHandler(uint32 intrCause)
1279:Generated_Source\PSoC4/USBUART_episr.c ****     {
 292              		.loc 1 1279 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 16
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 7, -8
 299              		.cfi_offset 14, -4
 300 0002 84B0     		sub	sp, sp, #16
 301              		.cfi_def_cfa_offset 24
 302 0004 00AF     		add	r7, sp, #0
 303              		.cfi_def_cfa_register 7
 304 0006 7860     		str	r0, [r7, #4]
1280:Generated_Source\PSoC4/USBUART_episr.c ****         /* Array of pointers to component interrupt handlers. */
1281:Generated_Source\PSoC4/USBUART_episr.c ****         static const cyisraddress USBUART_isrCallbacks[] =
1282:Generated_Source\PSoC4/USBUART_episr.c ****         {
1283:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_SOF_ISR,
1284:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_BUS_RESET_ISR,
1285:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_0_ISR,
1286:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1287:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1288:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_1_ISR,
1289:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_2_ISR,
1290:Generated_Source\PSoC4/USBUART_episr.c ****             &USBUART_EP_3_ISR,
1291:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1292:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 29


1293:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1294:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1295:Generated_Source\PSoC4/USBUART_episr.c ****             NULL,
1296:Generated_Source\PSoC4/USBUART_episr.c ****         };
1297:Generated_Source\PSoC4/USBUART_episr.c **** 
1298:Generated_Source\PSoC4/USBUART_episr.c ****         uint32 cbIdx = 0u;
 305              		.loc 1 1298 0
 306 0008 0023     		movs	r3, #0
 307 000a FB60     		str	r3, [r7, #12]
1299:Generated_Source\PSoC4/USBUART_episr.c **** 
1300:Generated_Source\PSoC4/USBUART_episr.c ****         /* Check arbiter interrupt source first. */
1301:Generated_Source\PSoC4/USBUART_episr.c ****         if (0u != (intrCause & USBUART_INTR_CAUSE_ARB_INTR))
 308              		.loc 1 1301 0
 309 000c 7B68     		ldr	r3, [r7, #4]
 310 000e 8022     		movs	r2, #128
 311 0010 1340     		ands	r3, r2
 312 0012 02D0     		beq	.L20
1302:Generated_Source\PSoC4/USBUART_episr.c ****         {
1303:Generated_Source\PSoC4/USBUART_episr.c ****             USBUART_isrCallbacks[USBUART_ARB_EP_INTR_NUM]();
 313              		.loc 1 1303 0
 314 0014 114B     		ldr	r3, .L24
 315 0016 1B69     		ldr	r3, [r3, #16]
 316 0018 9847     		blx	r3
 317              	.L20:
1304:Generated_Source\PSoC4/USBUART_episr.c ****         }
1305:Generated_Source\PSoC4/USBUART_episr.c **** 
1306:Generated_Source\PSoC4/USBUART_episr.c ****         /* Check all other interrupt sources (except arbiter and resume). */
1307:Generated_Source\PSoC4/USBUART_episr.c ****         intrCause = (intrCause  & USBUART_INTR_CAUSE_CTRL_INTR_MASK) |
 318              		.loc 1 1307 0
 319 001a 7B68     		ldr	r3, [r7, #4]
 320 001c 0F22     		movs	r2, #15
 321 001e 1A40     		ands	r2, r3
1308:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 322              		.loc 1 1308 0
 323 0020 7B68     		ldr	r3, [r7, #4]
 324 0022 D908     		lsrs	r1, r3, #3
 325 0024 FF23     		movs	r3, #255
 326 0026 5B01     		lsls	r3, r3, #5
 327 0028 0B40     		ands	r3, r1
1307:Generated_Source\PSoC4/USBUART_episr.c ****                     ((intrCause & USBUART_INTR_CAUSE_EP1_8_INTR_MASK) >>
 328              		.loc 1 1307 0
 329 002a 1343     		orrs	r3, r2
 330 002c 7B60     		str	r3, [r7, #4]
1309:Generated_Source\PSoC4/USBUART_episr.c ****                                   USBUART_INTR_CAUSE_EP_INTR_SHIFT);
1310:Generated_Source\PSoC4/USBUART_episr.c **** 
1311:Generated_Source\PSoC4/USBUART_episr.c ****         /* Call interrupt handlers for active interrupt sources. */
1312:Generated_Source\PSoC4/USBUART_episr.c ****         while (0u != intrCause)
 331              		.loc 1 1312 0
 332 002e 0EE0     		b	.L21
 333              	.L23:
1313:Generated_Source\PSoC4/USBUART_episr.c ****         {
1314:Generated_Source\PSoC4/USBUART_episr.c ****             if (0u != (intrCause & 0x1u))
 334              		.loc 1 1314 0
 335 0030 7B68     		ldr	r3, [r7, #4]
 336 0032 0122     		movs	r2, #1
 337 0034 1340     		ands	r3, r2
 338 0036 04D0     		beq	.L22
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 30


1315:Generated_Source\PSoC4/USBUART_episr.c ****             {
1316:Generated_Source\PSoC4/USBUART_episr.c ****                  USBUART_isrCallbacks[cbIdx]();
 339              		.loc 1 1316 0
 340 0038 084B     		ldr	r3, .L24
 341 003a FA68     		ldr	r2, [r7, #12]
 342 003c 9200     		lsls	r2, r2, #2
 343 003e D358     		ldr	r3, [r2, r3]
 344 0040 9847     		blx	r3
 345              	.L22:
1317:Generated_Source\PSoC4/USBUART_episr.c ****             }
1318:Generated_Source\PSoC4/USBUART_episr.c **** 
1319:Generated_Source\PSoC4/USBUART_episr.c ****             intrCause >>= 1u;
 346              		.loc 1 1319 0
 347 0042 7B68     		ldr	r3, [r7, #4]
 348 0044 5B08     		lsrs	r3, r3, #1
 349 0046 7B60     		str	r3, [r7, #4]
1320:Generated_Source\PSoC4/USBUART_episr.c ****             ++cbIdx;
 350              		.loc 1 1320 0
 351 0048 FB68     		ldr	r3, [r7, #12]
 352 004a 0133     		adds	r3, r3, #1
 353 004c FB60     		str	r3, [r7, #12]
 354              	.L21:
1312:Generated_Source\PSoC4/USBUART_episr.c ****         {
 355              		.loc 1 1312 0
 356 004e 7B68     		ldr	r3, [r7, #4]
 357 0050 002B     		cmp	r3, #0
 358 0052 EDD1     		bne	.L23
1321:Generated_Source\PSoC4/USBUART_episr.c ****         }
1322:Generated_Source\PSoC4/USBUART_episr.c ****     }
 359              		.loc 1 1322 0
 360 0054 C046     		nop
 361 0056 BD46     		mov	sp, r7
 362 0058 04B0     		add	sp, sp, #16
 363              		@ sp needed
 364 005a 80BD     		pop	{r7, pc}
 365              	.L25:
 366              		.align	2
 367              	.L24:
 368 005c 00000000 		.word	USBUART_isrCallbacks.5262
 369              		.cfi_endproc
 370              	.LFE6:
 371              		.size	USBUART_IntrHandler, .-USBUART_IntrHandler
 372              		.section	.text.USBUART_INTR_HI_ISR,"ax",%progbits
 373              		.align	2
 374              		.global	USBUART_INTR_HI_ISR
 375              		.code	16
 376              		.thumb_func
 377              		.type	USBUART_INTR_HI_ISR, %function
 378              	USBUART_INTR_HI_ISR:
 379              	.LFB7:
1323:Generated_Source\PSoC4/USBUART_episr.c **** 
1324:Generated_Source\PSoC4/USBUART_episr.c **** 
1325:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1326:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_HI_ISR
1327:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1328:Generated_Source\PSoC4/USBUART_episr.c ****     *
1329:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the high group of the interrupt sources.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 31


1330:Generated_Source\PSoC4/USBUART_episr.c ****     *
1331:Generated_Source\PSoC4/USBUART_episr.c ****     *
1332:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1333:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_HI_ISR)
1334:Generated_Source\PSoC4/USBUART_episr.c ****     {
 380              		.loc 1 1334 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384 0000 80B5     		push	{r7, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
1335:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_IntrHandler(USBUART_INTR_CAUSE_HI_REG);
 390              		.loc 1 1335 0
 391 0004 034B     		ldr	r3, .L27
 392 0006 1B68     		ldr	r3, [r3]
 393 0008 1800     		movs	r0, r3
 394 000a FFF7FEFF 		bl	USBUART_IntrHandler
1336:Generated_Source\PSoC4/USBUART_episr.c ****     }
 395              		.loc 1 1336 0
 396 000e C046     		nop
 397 0010 BD46     		mov	sp, r7
 398              		@ sp needed
 399 0012 80BD     		pop	{r7, pc}
 400              	.L28:
 401              		.align	2
 402              	.L27:
 403 0014 34202C40 		.word	1076633652
 404              		.cfi_endproc
 405              	.LFE7:
 406              		.size	USBUART_INTR_HI_ISR, .-USBUART_INTR_HI_ISR
 407              		.section	.text.USBUART_INTR_MED_ISR,"ax",%progbits
 408              		.align	2
 409              		.global	USBUART_INTR_MED_ISR
 410              		.code	16
 411              		.thumb_func
 412              		.type	USBUART_INTR_MED_ISR, %function
 413              	USBUART_INTR_MED_ISR:
 414              	.LFB8:
1337:Generated_Source\PSoC4/USBUART_episr.c **** 
1338:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1339:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_MED_ISR
1340:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1341:Generated_Source\PSoC4/USBUART_episr.c ****     *
1342:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the medium group of the interrupt sources.
1343:Generated_Source\PSoC4/USBUART_episr.c ****     *
1344:Generated_Source\PSoC4/USBUART_episr.c ****     *
1345:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1346:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_MED_ISR)
1347:Generated_Source\PSoC4/USBUART_episr.c ****     {
 415              		.loc 1 1347 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 32


 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
1348:Generated_Source\PSoC4/USBUART_episr.c ****        USBUART_IntrHandler(USBUART_INTR_CAUSE_MED_REG);
 425              		.loc 1 1348 0
 426 0004 034B     		ldr	r3, .L30
 427 0006 1B68     		ldr	r3, [r3]
 428 0008 1800     		movs	r0, r3
 429 000a FFF7FEFF 		bl	USBUART_IntrHandler
1349:Generated_Source\PSoC4/USBUART_episr.c ****     }
 430              		.loc 1 1349 0
 431 000e C046     		nop
 432 0010 BD46     		mov	sp, r7
 433              		@ sp needed
 434 0012 80BD     		pop	{r7, pc}
 435              	.L31:
 436              		.align	2
 437              	.L30:
 438 0014 38202C40 		.word	1076633656
 439              		.cfi_endproc
 440              	.LFE8:
 441              		.size	USBUART_INTR_MED_ISR, .-USBUART_INTR_MED_ISR
 442              		.section	.text.USBUART_INTR_LO_ISR,"ax",%progbits
 443              		.align	2
 444              		.global	USBUART_INTR_LO_ISR
 445              		.code	16
 446              		.thumb_func
 447              		.type	USBUART_INTR_LO_ISR, %function
 448              	USBUART_INTR_LO_ISR:
 449              	.LFB9:
1350:Generated_Source\PSoC4/USBUART_episr.c **** 
1351:Generated_Source\PSoC4/USBUART_episr.c ****     /***************************************************************************
1352:Generated_Source\PSoC4/USBUART_episr.c ****     * Function Name: USBUART_INTR_LO_ISR
1353:Generated_Source\PSoC4/USBUART_episr.c ****     ************************************************************************//**
1354:Generated_Source\PSoC4/USBUART_episr.c ****     *
1355:Generated_Source\PSoC4/USBUART_episr.c ****     *   Interrupt Service Routine for the low group of the interrupt sources.
1356:Generated_Source\PSoC4/USBUART_episr.c ****     *
1357:Generated_Source\PSoC4/USBUART_episr.c ****     *
1358:Generated_Source\PSoC4/USBUART_episr.c ****     ***************************************************************************/
1359:Generated_Source\PSoC4/USBUART_episr.c ****     CY_ISR(USBUART_INTR_LO_ISR)
1360:Generated_Source\PSoC4/USBUART_episr.c ****     {
 450              		.loc 1 1360 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
1361:Generated_Source\PSoC4/USBUART_episr.c ****         USBUART_IntrHandler(USBUART_INTR_CAUSE_LO_REG);
 460              		.loc 1 1361 0
 461 0004 034B     		ldr	r3, .L33
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 33


 462 0006 1B68     		ldr	r3, [r3]
 463 0008 1800     		movs	r0, r3
 464 000a FFF7FEFF 		bl	USBUART_IntrHandler
1362:Generated_Source\PSoC4/USBUART_episr.c ****     }
 465              		.loc 1 1362 0
 466 000e C046     		nop
 467 0010 BD46     		mov	sp, r7
 468              		@ sp needed
 469 0012 80BD     		pop	{r7, pc}
 470              	.L34:
 471              		.align	2
 472              	.L33:
 473 0014 3C202C40 		.word	1076633660
 474              		.cfi_endproc
 475              	.LFE9:
 476              		.size	USBUART_INTR_LO_ISR, .-USBUART_INTR_LO_ISR
 477              		.section	.rodata
 478              		.align	2
 479              		.type	USBUART_isrCallbacks.5262, %object
 480              		.size	USBUART_isrCallbacks.5262, 52
 481              	USBUART_isrCallbacks.5262:
 482 0000 00000000 		.word	USBUART_SOF_ISR
 483 0004 00000000 		.word	USBUART_BUS_RESET_ISR
 484 0008 00000000 		.word	USBUART_EP_0_ISR
 485 000c 00000000 		.word	0
 486 0010 00000000 		.word	0
 487 0014 00000000 		.word	USBUART_EP_1_ISR
 488 0018 00000000 		.word	USBUART_EP_2_ISR
 489 001c 00000000 		.word	USBUART_EP_3_ISR
 490 0020 00000000 		.word	0
 491 0024 00000000 		.word	0
 492 0028 00000000 		.word	0
 493 002c 00000000 		.word	0
 494 0030 00000000 		.word	0
 495              		.text
 496              	.Letext0:
 497              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 498              		.file 3 "Generated_Source\\PSoC4\\USBUART.h"
 499              		.file 4 "Generated_Source\\PSoC4\\USBUART_pvt.h"
 500              		.section	.debug_info,"",%progbits
 501              	.Ldebug_info0:
 502 0000 EE020000 		.4byte	0x2ee
 503 0004 0400     		.2byte	0x4
 504 0006 00000000 		.4byte	.Ldebug_abbrev0
 505 000a 04       		.byte	0x4
 506 000b 01       		.uleb128 0x1
 507 000c 4E010000 		.4byte	.LASF45
 508 0010 0C       		.byte	0xc
 509 0011 5E030000 		.4byte	.LASF46
 510 0015 5D000000 		.4byte	.LASF47
 511 0019 00000000 		.4byte	.Ldebug_ranges0+0
 512 001d 00000000 		.4byte	0
 513 0021 00000000 		.4byte	.Ldebug_line0
 514 0025 02       		.uleb128 0x2
 515 0026 01       		.byte	0x1
 516 0027 06       		.byte	0x6
 517 0028 41030000 		.4byte	.LASF0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 34


 518 002c 02       		.uleb128 0x2
 519 002d 01       		.byte	0x1
 520 002e 08       		.byte	0x8
 521 002f F9010000 		.4byte	.LASF1
 522 0033 02       		.uleb128 0x2
 523 0034 02       		.byte	0x2
 524 0035 05       		.byte	0x5
 525 0036 C1020000 		.4byte	.LASF2
 526 003a 02       		.uleb128 0x2
 527 003b 02       		.byte	0x2
 528 003c 07       		.byte	0x7
 529 003d 39000000 		.4byte	.LASF3
 530 0041 02       		.uleb128 0x2
 531 0042 04       		.byte	0x4
 532 0043 05       		.byte	0x5
 533 0044 0E030000 		.4byte	.LASF4
 534 0048 02       		.uleb128 0x2
 535 0049 04       		.byte	0x4
 536 004a 07       		.byte	0x7
 537 004b 37010000 		.4byte	.LASF5
 538 004f 02       		.uleb128 0x2
 539 0050 08       		.byte	0x8
 540 0051 05       		.byte	0x5
 541 0052 A3020000 		.4byte	.LASF6
 542 0056 02       		.uleb128 0x2
 543 0057 08       		.byte	0x8
 544 0058 07       		.byte	0x7
 545 0059 50020000 		.4byte	.LASF7
 546 005d 03       		.uleb128 0x3
 547 005e 04       		.byte	0x4
 548 005f 05       		.byte	0x5
 549 0060 696E7400 		.ascii	"int\000"
 550 0064 02       		.uleb128 0x2
 551 0065 04       		.byte	0x4
 552 0066 07       		.byte	0x7
 553 0067 43020000 		.4byte	.LASF8
 554 006b 04       		.uleb128 0x4
 555 006c F8020000 		.4byte	.LASF9
 556 0070 02       		.byte	0x2
 557 0071 D201     		.2byte	0x1d2
 558 0073 2C000000 		.4byte	0x2c
 559 0077 04       		.uleb128 0x4
 560 0078 20020000 		.4byte	.LASF10
 561 007c 02       		.byte	0x2
 562 007d D301     		.2byte	0x1d3
 563 007f 3A000000 		.4byte	0x3a
 564 0083 04       		.uleb128 0x4
 565 0084 3C020000 		.4byte	.LASF11
 566 0088 02       		.byte	0x2
 567 0089 D401     		.2byte	0x1d4
 568 008b 48000000 		.4byte	0x48
 569 008f 02       		.uleb128 0x2
 570 0090 04       		.byte	0x4
 571 0091 04       		.byte	0x4
 572 0092 33000000 		.4byte	.LASF12
 573 0096 02       		.uleb128 0x2
 574 0097 08       		.byte	0x8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 35


 575 0098 04       		.byte	0x4
 576 0099 07020000 		.4byte	.LASF13
 577 009d 02       		.uleb128 0x2
 578 009e 01       		.byte	0x1
 579 009f 08       		.byte	0x8
 580 00a0 B1020000 		.4byte	.LASF14
 581 00a4 04       		.uleb128 0x4
 582 00a5 11000000 		.4byte	.LASF15
 583 00a9 02       		.byte	0x2
 584 00aa 7E02     		.2byte	0x27e
 585 00ac B0000000 		.4byte	0xb0
 586 00b0 05       		.uleb128 0x5
 587 00b1 83000000 		.4byte	0x83
 588 00b5 04       		.uleb128 0x4
 589 00b6 86020000 		.4byte	.LASF16
 590 00ba 02       		.byte	0x2
 591 00bb 8E02     		.2byte	0x28e
 592 00bd C1000000 		.4byte	0xc1
 593 00c1 06       		.uleb128 0x6
 594 00c2 04       		.byte	0x4
 595 00c3 C7000000 		.4byte	0xc7
 596 00c7 07       		.uleb128 0x7
 597 00c8 02       		.uleb128 0x2
 598 00c9 08       		.byte	0x8
 599 00ca 04       		.byte	0x4
 600 00cb 35030000 		.4byte	.LASF17
 601 00cf 02       		.uleb128 0x2
 602 00d0 04       		.byte	0x4
 603 00d1 07       		.byte	0x7
 604 00d2 93020000 		.4byte	.LASF18
 605 00d6 08       		.uleb128 0x8
 606 00d7 0C       		.byte	0xc
 607 00d8 03       		.byte	0x3
 608 00d9 92       		.byte	0x92
 609 00da 4B010000 		.4byte	0x14b
 610 00de 09       		.uleb128 0x9
 611 00df 0E020000 		.4byte	.LASF19
 612 00e3 03       		.byte	0x3
 613 00e4 94       		.byte	0x94
 614 00e5 6B000000 		.4byte	0x6b
 615 00e9 00       		.byte	0
 616 00ea 09       		.uleb128 0x9
 617 00eb 2C010000 		.4byte	.LASF20
 618 00ef 03       		.byte	0x3
 619 00f0 95       		.byte	0x95
 620 00f1 6B000000 		.4byte	0x6b
 621 00f5 01       		.byte	0x1
 622 00f6 09       		.uleb128 0x9
 623 00f7 67020000 		.4byte	.LASF21
 624 00fb 03       		.byte	0x3
 625 00fc 96       		.byte	0x96
 626 00fd 6B000000 		.4byte	0x6b
 627 0101 02       		.byte	0x2
 628 0102 09       		.uleb128 0x9
 629 0103 18010000 		.4byte	.LASF22
 630 0107 03       		.byte	0x3
 631 0108 97       		.byte	0x97
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 36


 632 0109 6B000000 		.4byte	0x6b
 633 010d 03       		.byte	0x3
 634 010e 09       		.uleb128 0x9
 635 010f 49010000 		.4byte	.LASF23
 636 0113 03       		.byte	0x3
 637 0114 98       		.byte	0x98
 638 0115 6B000000 		.4byte	0x6b
 639 0119 04       		.byte	0x4
 640 011a 09       		.uleb128 0x9
 641 011b 9C020000 		.4byte	.LASF24
 642 011f 03       		.byte	0x3
 643 0120 99       		.byte	0x99
 644 0121 6B000000 		.4byte	0x6b
 645 0125 05       		.byte	0x5
 646 0126 09       		.uleb128 0x9
 647 0127 15020000 		.4byte	.LASF25
 648 012b 03       		.byte	0x3
 649 012c 9A       		.byte	0x9a
 650 012d 77000000 		.4byte	0x77
 651 0131 06       		.byte	0x6
 652 0132 09       		.uleb128 0x9
 653 0133 B6020000 		.4byte	.LASF26
 654 0137 03       		.byte	0x3
 655 0138 9B       		.byte	0x9b
 656 0139 77000000 		.4byte	0x77
 657 013d 08       		.byte	0x8
 658 013e 09       		.uleb128 0x9
 659 013f FE020000 		.4byte	.LASF27
 660 0143 03       		.byte	0x3
 661 0144 9C       		.byte	0x9c
 662 0145 6B000000 		.4byte	0x6b
 663 0149 0A       		.byte	0xa
 664 014a 00       		.byte	0
 665 014b 0A       		.uleb128 0xa
 666 014c CB020000 		.4byte	.LASF28
 667 0150 03       		.byte	0x3
 668 0151 9D       		.byte	0x9d
 669 0152 D6000000 		.4byte	0xd6
 670 0156 08       		.uleb128 0x8
 671 0157 40       		.byte	0x40
 672 0158 03       		.byte	0x3
 673 0159 D9       		.byte	0xd9
 674 015a 8F010000 		.4byte	0x18f
 675 015e 09       		.uleb128 0x9
 676 015f 0A010000 		.4byte	.LASF29
 677 0163 03       		.byte	0x3
 678 0164 DB       		.byte	0xdb
 679 0165 83000000 		.4byte	0x83
 680 0169 00       		.byte	0
 681 016a 09       		.uleb128 0x9
 682 016b 11010000 		.4byte	.LASF30
 683 016f 03       		.byte	0x3
 684 0170 DC       		.byte	0xdc
 685 0171 83000000 		.4byte	0x83
 686 0175 04       		.byte	0x4
 687 0176 09       		.uleb128 0x9
 688 0177 2D000000 		.4byte	.LASF31
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 37


 689 017b 03       		.byte	0x3
 690 017c DD       		.byte	0xdd
 691 017d 83000000 		.4byte	0x83
 692 0181 08       		.byte	0x8
 693 0182 0B       		.uleb128 0xb
 694 0183 67617000 		.ascii	"gap\000"
 695 0187 03       		.byte	0x3
 696 0188 DE       		.byte	0xde
 697 0189 8F010000 		.4byte	0x18f
 698 018d 0C       		.byte	0xc
 699 018e 00       		.byte	0
 700 018f 0C       		.uleb128 0xc
 701 0190 83000000 		.4byte	0x83
 702 0194 9F010000 		.4byte	0x19f
 703 0198 0D       		.uleb128 0xd
 704 0199 CF000000 		.4byte	0xcf
 705 019d 0C       		.byte	0xc
 706 019e 00       		.byte	0
 707 019f 0A       		.uleb128 0xa
 708 01a0 17000000 		.4byte	.LASF32
 709 01a4 03       		.byte	0x3
 710 01a5 DF       		.byte	0xdf
 711 01a6 56010000 		.4byte	0x156
 712 01aa 0E       		.uleb128 0xe
 713 01ab 4002     		.2byte	0x240
 714 01ad 03       		.byte	0x3
 715 01ae 1301     		.2byte	0x113
 716 01b0 C2010000 		.4byte	0x1c2
 717 01b4 0F       		.uleb128 0xf
 718 01b5 DC010000 		.4byte	.LASF33
 719 01b9 03       		.byte	0x3
 720 01ba 1501     		.2byte	0x115
 721 01bc C2010000 		.4byte	0x1c2
 722 01c0 00       		.byte	0
 723 01c1 00       		.byte	0
 724 01c2 0C       		.uleb128 0xc
 725 01c3 9F010000 		.4byte	0x19f
 726 01c7 D2010000 		.4byte	0x1d2
 727 01cb 0D       		.uleb128 0xd
 728 01cc CF000000 		.4byte	0xcf
 729 01d0 08       		.byte	0x8
 730 01d1 00       		.byte	0
 731 01d2 04       		.uleb128 0x4
 732 01d3 E2010000 		.4byte	.LASF34
 733 01d7 03       		.byte	0x3
 734 01d8 1601     		.2byte	0x116
 735 01da AA010000 		.4byte	0x1aa
 736 01de 10       		.uleb128 0x10
 737 01df 4D030000 		.4byte	.LASF35
 738 01e3 01       		.byte	0x1
 739 01e4 25       		.byte	0x25
 740 01e5 00000000 		.4byte	.LFB1
 741 01e9 48000000 		.4byte	.LFE1-.LFB1
 742 01ed 01       		.uleb128 0x1
 743 01ee 9C       		.byte	0x9c
 744 01ef 10       		.uleb128 0x10
 745 01f0 4C000000 		.4byte	.LASF36
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 38


 746 01f4 01       		.byte	0x1
 747 01f5 78       		.byte	0x78
 748 01f6 00000000 		.4byte	.LFB2
 749 01fa 4C000000 		.4byte	.LFE2-.LFB2
 750 01fe 01       		.uleb128 0x1
 751 01ff 9C       		.byte	0x9c
 752 0200 10       		.uleb128 0x10
 753 0201 00000000 		.4byte	.LASF37
 754 0205 01       		.byte	0x1
 755 0206 C9       		.byte	0xc9
 756 0207 00000000 		.4byte	.LFB3
 757 020b 54000000 		.4byte	.LFE3-.LFB3
 758 020f 01       		.uleb128 0x1
 759 0210 9C       		.byte	0x9c
 760 0211 11       		.uleb128 0x11
 761 0212 E6000000 		.4byte	.LASF38
 762 0216 01       		.byte	0x1
 763 0217 B502     		.2byte	0x2b5
 764 0219 00000000 		.4byte	.LFB4
 765 021d 14000000 		.4byte	.LFE4-.LFB4
 766 0221 01       		.uleb128 0x1
 767 0222 9C       		.byte	0x9c
 768 0223 12       		.uleb128 0x12
 769 0224 E2020000 		.4byte	.LASF39
 770 0228 01       		.byte	0x1
 771 0229 D202     		.2byte	0x2d2
 772 022b 00000000 		.4byte	.LFB5
 773 022f 18000000 		.4byte	.LFE5-.LFB5
 774 0233 01       		.uleb128 0x1
 775 0234 9C       		.byte	0x9c
 776 0235 13       		.uleb128 0x13
 777 0236 F6000000 		.4byte	.LASF48
 778 023a 01       		.byte	0x1
 779 023b FE04     		.2byte	0x4fe
 780 023d 00000000 		.4byte	.LFB6
 781 0241 60000000 		.4byte	.LFE6-.LFB6
 782 0245 01       		.uleb128 0x1
 783 0246 9C       		.byte	0x9c
 784 0247 7C020000 		.4byte	0x27c
 785 024b 14       		.uleb128 0x14
 786 024c 17030000 		.4byte	.LASF49
 787 0250 01       		.byte	0x1
 788 0251 FE04     		.2byte	0x4fe
 789 0253 83000000 		.4byte	0x83
 790 0257 02       		.uleb128 0x2
 791 0258 91       		.byte	0x91
 792 0259 6C       		.sleb128 -20
 793 025a 15       		.uleb128 0x15
 794 025b 27020000 		.4byte	.LASF40
 795 025f 01       		.byte	0x1
 796 0260 0105     		.2byte	0x501
 797 0262 91020000 		.4byte	0x291
 798 0266 05       		.uleb128 0x5
 799 0267 03       		.byte	0x3
 800 0268 00000000 		.4byte	USBUART_isrCallbacks.5262
 801 026c 15       		.uleb128 0x15
 802 026d 08030000 		.4byte	.LASF41
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 39


 803 0271 01       		.byte	0x1
 804 0272 1205     		.2byte	0x512
 805 0274 83000000 		.4byte	0x83
 806 0278 02       		.uleb128 0x2
 807 0279 91       		.byte	0x91
 808 027a 74       		.sleb128 -12
 809 027b 00       		.byte	0
 810 027c 0C       		.uleb128 0xc
 811 027d 8C020000 		.4byte	0x28c
 812 0281 8C020000 		.4byte	0x28c
 813 0285 0D       		.uleb128 0xd
 814 0286 CF000000 		.4byte	0xcf
 815 028a 0C       		.byte	0xc
 816 028b 00       		.byte	0
 817 028c 16       		.uleb128 0x16
 818 028d B5000000 		.4byte	0xb5
 819 0291 16       		.uleb128 0x16
 820 0292 7C020000 		.4byte	0x27c
 821 0296 12       		.uleb128 0x12
 822 0297 21030000 		.4byte	.LASF42
 823 029b 01       		.byte	0x1
 824 029c 3505     		.2byte	0x535
 825 029e 00000000 		.4byte	.LFB7
 826 02a2 18000000 		.4byte	.LFE7-.LFB7
 827 02a6 01       		.uleb128 0x1
 828 02a7 9C       		.byte	0x9c
 829 02a8 12       		.uleb128 0x12
 830 02a9 71020000 		.4byte	.LASF43
 831 02ad 01       		.byte	0x1
 832 02ae 4205     		.2byte	0x542
 833 02b0 00000000 		.4byte	.LFB8
 834 02b4 18000000 		.4byte	.LFE8-.LFB8
 835 02b8 01       		.uleb128 0x1
 836 02b9 9C       		.byte	0x9c
 837 02ba 12       		.uleb128 0x12
 838 02bb D2000000 		.4byte	.LASF44
 839 02bf 01       		.byte	0x1
 840 02c0 4F05     		.2byte	0x54f
 841 02c2 00000000 		.4byte	.LFB9
 842 02c6 18000000 		.4byte	.LFE9-.LFB9
 843 02ca 01       		.uleb128 0x1
 844 02cb 9C       		.byte	0x9c
 845 02cc 0C       		.uleb128 0xc
 846 02cd DC020000 		.4byte	0x2dc
 847 02d1 DC020000 		.4byte	0x2dc
 848 02d5 0D       		.uleb128 0xd
 849 02d6 CF000000 		.4byte	0xcf
 850 02da 08       		.byte	0x8
 851 02db 00       		.byte	0
 852 02dc 05       		.uleb128 0x5
 853 02dd 4B010000 		.4byte	0x14b
 854 02e1 17       		.uleb128 0x17
 855 02e2 21010000 		.4byte	.LASF50
 856 02e6 04       		.byte	0x4
 857 02e7 7A       		.byte	0x7a
 858 02e8 EC020000 		.4byte	0x2ec
 859 02ec 05       		.uleb128 0x5
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 40


 860 02ed CC020000 		.4byte	0x2cc
 861 02f1 00       		.byte	0
 862              		.section	.debug_abbrev,"",%progbits
 863              	.Ldebug_abbrev0:
 864 0000 01       		.uleb128 0x1
 865 0001 11       		.uleb128 0x11
 866 0002 01       		.byte	0x1
 867 0003 25       		.uleb128 0x25
 868 0004 0E       		.uleb128 0xe
 869 0005 13       		.uleb128 0x13
 870 0006 0B       		.uleb128 0xb
 871 0007 03       		.uleb128 0x3
 872 0008 0E       		.uleb128 0xe
 873 0009 1B       		.uleb128 0x1b
 874 000a 0E       		.uleb128 0xe
 875 000b 55       		.uleb128 0x55
 876 000c 17       		.uleb128 0x17
 877 000d 11       		.uleb128 0x11
 878 000e 01       		.uleb128 0x1
 879 000f 10       		.uleb128 0x10
 880 0010 17       		.uleb128 0x17
 881 0011 00       		.byte	0
 882 0012 00       		.byte	0
 883 0013 02       		.uleb128 0x2
 884 0014 24       		.uleb128 0x24
 885 0015 00       		.byte	0
 886 0016 0B       		.uleb128 0xb
 887 0017 0B       		.uleb128 0xb
 888 0018 3E       		.uleb128 0x3e
 889 0019 0B       		.uleb128 0xb
 890 001a 03       		.uleb128 0x3
 891 001b 0E       		.uleb128 0xe
 892 001c 00       		.byte	0
 893 001d 00       		.byte	0
 894 001e 03       		.uleb128 0x3
 895 001f 24       		.uleb128 0x24
 896 0020 00       		.byte	0
 897 0021 0B       		.uleb128 0xb
 898 0022 0B       		.uleb128 0xb
 899 0023 3E       		.uleb128 0x3e
 900 0024 0B       		.uleb128 0xb
 901 0025 03       		.uleb128 0x3
 902 0026 08       		.uleb128 0x8
 903 0027 00       		.byte	0
 904 0028 00       		.byte	0
 905 0029 04       		.uleb128 0x4
 906 002a 16       		.uleb128 0x16
 907 002b 00       		.byte	0
 908 002c 03       		.uleb128 0x3
 909 002d 0E       		.uleb128 0xe
 910 002e 3A       		.uleb128 0x3a
 911 002f 0B       		.uleb128 0xb
 912 0030 3B       		.uleb128 0x3b
 913 0031 05       		.uleb128 0x5
 914 0032 49       		.uleb128 0x49
 915 0033 13       		.uleb128 0x13
 916 0034 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 41


 917 0035 00       		.byte	0
 918 0036 05       		.uleb128 0x5
 919 0037 35       		.uleb128 0x35
 920 0038 00       		.byte	0
 921 0039 49       		.uleb128 0x49
 922 003a 13       		.uleb128 0x13
 923 003b 00       		.byte	0
 924 003c 00       		.byte	0
 925 003d 06       		.uleb128 0x6
 926 003e 0F       		.uleb128 0xf
 927 003f 00       		.byte	0
 928 0040 0B       		.uleb128 0xb
 929 0041 0B       		.uleb128 0xb
 930 0042 49       		.uleb128 0x49
 931 0043 13       		.uleb128 0x13
 932 0044 00       		.byte	0
 933 0045 00       		.byte	0
 934 0046 07       		.uleb128 0x7
 935 0047 15       		.uleb128 0x15
 936 0048 00       		.byte	0
 937 0049 27       		.uleb128 0x27
 938 004a 19       		.uleb128 0x19
 939 004b 00       		.byte	0
 940 004c 00       		.byte	0
 941 004d 08       		.uleb128 0x8
 942 004e 13       		.uleb128 0x13
 943 004f 01       		.byte	0x1
 944 0050 0B       		.uleb128 0xb
 945 0051 0B       		.uleb128 0xb
 946 0052 3A       		.uleb128 0x3a
 947 0053 0B       		.uleb128 0xb
 948 0054 3B       		.uleb128 0x3b
 949 0055 0B       		.uleb128 0xb
 950 0056 01       		.uleb128 0x1
 951 0057 13       		.uleb128 0x13
 952 0058 00       		.byte	0
 953 0059 00       		.byte	0
 954 005a 09       		.uleb128 0x9
 955 005b 0D       		.uleb128 0xd
 956 005c 00       		.byte	0
 957 005d 03       		.uleb128 0x3
 958 005e 0E       		.uleb128 0xe
 959 005f 3A       		.uleb128 0x3a
 960 0060 0B       		.uleb128 0xb
 961 0061 3B       		.uleb128 0x3b
 962 0062 0B       		.uleb128 0xb
 963 0063 49       		.uleb128 0x49
 964 0064 13       		.uleb128 0x13
 965 0065 38       		.uleb128 0x38
 966 0066 0B       		.uleb128 0xb
 967 0067 00       		.byte	0
 968 0068 00       		.byte	0
 969 0069 0A       		.uleb128 0xa
 970 006a 16       		.uleb128 0x16
 971 006b 00       		.byte	0
 972 006c 03       		.uleb128 0x3
 973 006d 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 42


 974 006e 3A       		.uleb128 0x3a
 975 006f 0B       		.uleb128 0xb
 976 0070 3B       		.uleb128 0x3b
 977 0071 0B       		.uleb128 0xb
 978 0072 49       		.uleb128 0x49
 979 0073 13       		.uleb128 0x13
 980 0074 00       		.byte	0
 981 0075 00       		.byte	0
 982 0076 0B       		.uleb128 0xb
 983 0077 0D       		.uleb128 0xd
 984 0078 00       		.byte	0
 985 0079 03       		.uleb128 0x3
 986 007a 08       		.uleb128 0x8
 987 007b 3A       		.uleb128 0x3a
 988 007c 0B       		.uleb128 0xb
 989 007d 3B       		.uleb128 0x3b
 990 007e 0B       		.uleb128 0xb
 991 007f 49       		.uleb128 0x49
 992 0080 13       		.uleb128 0x13
 993 0081 38       		.uleb128 0x38
 994 0082 0B       		.uleb128 0xb
 995 0083 00       		.byte	0
 996 0084 00       		.byte	0
 997 0085 0C       		.uleb128 0xc
 998 0086 01       		.uleb128 0x1
 999 0087 01       		.byte	0x1
 1000 0088 49       		.uleb128 0x49
 1001 0089 13       		.uleb128 0x13
 1002 008a 01       		.uleb128 0x1
 1003 008b 13       		.uleb128 0x13
 1004 008c 00       		.byte	0
 1005 008d 00       		.byte	0
 1006 008e 0D       		.uleb128 0xd
 1007 008f 21       		.uleb128 0x21
 1008 0090 00       		.byte	0
 1009 0091 49       		.uleb128 0x49
 1010 0092 13       		.uleb128 0x13
 1011 0093 2F       		.uleb128 0x2f
 1012 0094 0B       		.uleb128 0xb
 1013 0095 00       		.byte	0
 1014 0096 00       		.byte	0
 1015 0097 0E       		.uleb128 0xe
 1016 0098 13       		.uleb128 0x13
 1017 0099 01       		.byte	0x1
 1018 009a 0B       		.uleb128 0xb
 1019 009b 05       		.uleb128 0x5
 1020 009c 3A       		.uleb128 0x3a
 1021 009d 0B       		.uleb128 0xb
 1022 009e 3B       		.uleb128 0x3b
 1023 009f 05       		.uleb128 0x5
 1024 00a0 01       		.uleb128 0x1
 1025 00a1 13       		.uleb128 0x13
 1026 00a2 00       		.byte	0
 1027 00a3 00       		.byte	0
 1028 00a4 0F       		.uleb128 0xf
 1029 00a5 0D       		.uleb128 0xd
 1030 00a6 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 43


 1031 00a7 03       		.uleb128 0x3
 1032 00a8 0E       		.uleb128 0xe
 1033 00a9 3A       		.uleb128 0x3a
 1034 00aa 0B       		.uleb128 0xb
 1035 00ab 3B       		.uleb128 0x3b
 1036 00ac 05       		.uleb128 0x5
 1037 00ad 49       		.uleb128 0x49
 1038 00ae 13       		.uleb128 0x13
 1039 00af 38       		.uleb128 0x38
 1040 00b0 0B       		.uleb128 0xb
 1041 00b1 00       		.byte	0
 1042 00b2 00       		.byte	0
 1043 00b3 10       		.uleb128 0x10
 1044 00b4 2E       		.uleb128 0x2e
 1045 00b5 00       		.byte	0
 1046 00b6 3F       		.uleb128 0x3f
 1047 00b7 19       		.uleb128 0x19
 1048 00b8 03       		.uleb128 0x3
 1049 00b9 0E       		.uleb128 0xe
 1050 00ba 3A       		.uleb128 0x3a
 1051 00bb 0B       		.uleb128 0xb
 1052 00bc 3B       		.uleb128 0x3b
 1053 00bd 0B       		.uleb128 0xb
 1054 00be 27       		.uleb128 0x27
 1055 00bf 19       		.uleb128 0x19
 1056 00c0 11       		.uleb128 0x11
 1057 00c1 01       		.uleb128 0x1
 1058 00c2 12       		.uleb128 0x12
 1059 00c3 06       		.uleb128 0x6
 1060 00c4 40       		.uleb128 0x40
 1061 00c5 18       		.uleb128 0x18
 1062 00c6 9742     		.uleb128 0x2117
 1063 00c8 19       		.uleb128 0x19
 1064 00c9 00       		.byte	0
 1065 00ca 00       		.byte	0
 1066 00cb 11       		.uleb128 0x11
 1067 00cc 2E       		.uleb128 0x2e
 1068 00cd 00       		.byte	0
 1069 00ce 3F       		.uleb128 0x3f
 1070 00cf 19       		.uleb128 0x19
 1071 00d0 03       		.uleb128 0x3
 1072 00d1 0E       		.uleb128 0xe
 1073 00d2 3A       		.uleb128 0x3a
 1074 00d3 0B       		.uleb128 0xb
 1075 00d4 3B       		.uleb128 0x3b
 1076 00d5 05       		.uleb128 0x5
 1077 00d6 27       		.uleb128 0x27
 1078 00d7 19       		.uleb128 0x19
 1079 00d8 11       		.uleb128 0x11
 1080 00d9 01       		.uleb128 0x1
 1081 00da 12       		.uleb128 0x12
 1082 00db 06       		.uleb128 0x6
 1083 00dc 40       		.uleb128 0x40
 1084 00dd 18       		.uleb128 0x18
 1085 00de 9742     		.uleb128 0x2117
 1086 00e0 19       		.uleb128 0x19
 1087 00e1 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 44


 1088 00e2 00       		.byte	0
 1089 00e3 12       		.uleb128 0x12
 1090 00e4 2E       		.uleb128 0x2e
 1091 00e5 00       		.byte	0
 1092 00e6 3F       		.uleb128 0x3f
 1093 00e7 19       		.uleb128 0x19
 1094 00e8 03       		.uleb128 0x3
 1095 00e9 0E       		.uleb128 0xe
 1096 00ea 3A       		.uleb128 0x3a
 1097 00eb 0B       		.uleb128 0xb
 1098 00ec 3B       		.uleb128 0x3b
 1099 00ed 05       		.uleb128 0x5
 1100 00ee 27       		.uleb128 0x27
 1101 00ef 19       		.uleb128 0x19
 1102 00f0 11       		.uleb128 0x11
 1103 00f1 01       		.uleb128 0x1
 1104 00f2 12       		.uleb128 0x12
 1105 00f3 06       		.uleb128 0x6
 1106 00f4 40       		.uleb128 0x40
 1107 00f5 18       		.uleb128 0x18
 1108 00f6 9642     		.uleb128 0x2116
 1109 00f8 19       		.uleb128 0x19
 1110 00f9 00       		.byte	0
 1111 00fa 00       		.byte	0
 1112 00fb 13       		.uleb128 0x13
 1113 00fc 2E       		.uleb128 0x2e
 1114 00fd 01       		.byte	0x1
 1115 00fe 03       		.uleb128 0x3
 1116 00ff 0E       		.uleb128 0xe
 1117 0100 3A       		.uleb128 0x3a
 1118 0101 0B       		.uleb128 0xb
 1119 0102 3B       		.uleb128 0x3b
 1120 0103 05       		.uleb128 0x5
 1121 0104 27       		.uleb128 0x27
 1122 0105 19       		.uleb128 0x19
 1123 0106 11       		.uleb128 0x11
 1124 0107 01       		.uleb128 0x1
 1125 0108 12       		.uleb128 0x12
 1126 0109 06       		.uleb128 0x6
 1127 010a 40       		.uleb128 0x40
 1128 010b 18       		.uleb128 0x18
 1129 010c 9642     		.uleb128 0x2116
 1130 010e 19       		.uleb128 0x19
 1131 010f 01       		.uleb128 0x1
 1132 0110 13       		.uleb128 0x13
 1133 0111 00       		.byte	0
 1134 0112 00       		.byte	0
 1135 0113 14       		.uleb128 0x14
 1136 0114 05       		.uleb128 0x5
 1137 0115 00       		.byte	0
 1138 0116 03       		.uleb128 0x3
 1139 0117 0E       		.uleb128 0xe
 1140 0118 3A       		.uleb128 0x3a
 1141 0119 0B       		.uleb128 0xb
 1142 011a 3B       		.uleb128 0x3b
 1143 011b 05       		.uleb128 0x5
 1144 011c 49       		.uleb128 0x49
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 45


 1145 011d 13       		.uleb128 0x13
 1146 011e 02       		.uleb128 0x2
 1147 011f 18       		.uleb128 0x18
 1148 0120 00       		.byte	0
 1149 0121 00       		.byte	0
 1150 0122 15       		.uleb128 0x15
 1151 0123 34       		.uleb128 0x34
 1152 0124 00       		.byte	0
 1153 0125 03       		.uleb128 0x3
 1154 0126 0E       		.uleb128 0xe
 1155 0127 3A       		.uleb128 0x3a
 1156 0128 0B       		.uleb128 0xb
 1157 0129 3B       		.uleb128 0x3b
 1158 012a 05       		.uleb128 0x5
 1159 012b 49       		.uleb128 0x49
 1160 012c 13       		.uleb128 0x13
 1161 012d 02       		.uleb128 0x2
 1162 012e 18       		.uleb128 0x18
 1163 012f 00       		.byte	0
 1164 0130 00       		.byte	0
 1165 0131 16       		.uleb128 0x16
 1166 0132 26       		.uleb128 0x26
 1167 0133 00       		.byte	0
 1168 0134 49       		.uleb128 0x49
 1169 0135 13       		.uleb128 0x13
 1170 0136 00       		.byte	0
 1171 0137 00       		.byte	0
 1172 0138 17       		.uleb128 0x17
 1173 0139 34       		.uleb128 0x34
 1174 013a 00       		.byte	0
 1175 013b 03       		.uleb128 0x3
 1176 013c 0E       		.uleb128 0xe
 1177 013d 3A       		.uleb128 0x3a
 1178 013e 0B       		.uleb128 0xb
 1179 013f 3B       		.uleb128 0x3b
 1180 0140 0B       		.uleb128 0xb
 1181 0141 49       		.uleb128 0x49
 1182 0142 13       		.uleb128 0x13
 1183 0143 3F       		.uleb128 0x3f
 1184 0144 19       		.uleb128 0x19
 1185 0145 3C       		.uleb128 0x3c
 1186 0146 19       		.uleb128 0x19
 1187 0147 00       		.byte	0
 1188 0148 00       		.byte	0
 1189 0149 00       		.byte	0
 1190              		.section	.debug_aranges,"",%progbits
 1191 0000 5C000000 		.4byte	0x5c
 1192 0004 0200     		.2byte	0x2
 1193 0006 00000000 		.4byte	.Ldebug_info0
 1194 000a 04       		.byte	0x4
 1195 000b 00       		.byte	0
 1196 000c 0000     		.2byte	0
 1197 000e 0000     		.2byte	0
 1198 0010 00000000 		.4byte	.LFB1
 1199 0014 48000000 		.4byte	.LFE1-.LFB1
 1200 0018 00000000 		.4byte	.LFB2
 1201 001c 4C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 46


 1202 0020 00000000 		.4byte	.LFB3
 1203 0024 54000000 		.4byte	.LFE3-.LFB3
 1204 0028 00000000 		.4byte	.LFB4
 1205 002c 14000000 		.4byte	.LFE4-.LFB4
 1206 0030 00000000 		.4byte	.LFB5
 1207 0034 18000000 		.4byte	.LFE5-.LFB5
 1208 0038 00000000 		.4byte	.LFB6
 1209 003c 60000000 		.4byte	.LFE6-.LFB6
 1210 0040 00000000 		.4byte	.LFB7
 1211 0044 18000000 		.4byte	.LFE7-.LFB7
 1212 0048 00000000 		.4byte	.LFB8
 1213 004c 18000000 		.4byte	.LFE8-.LFB8
 1214 0050 00000000 		.4byte	.LFB9
 1215 0054 18000000 		.4byte	.LFE9-.LFB9
 1216 0058 00000000 		.4byte	0
 1217 005c 00000000 		.4byte	0
 1218              		.section	.debug_ranges,"",%progbits
 1219              	.Ldebug_ranges0:
 1220 0000 00000000 		.4byte	.LFB1
 1221 0004 48000000 		.4byte	.LFE1
 1222 0008 00000000 		.4byte	.LFB2
 1223 000c 4C000000 		.4byte	.LFE2
 1224 0010 00000000 		.4byte	.LFB3
 1225 0014 54000000 		.4byte	.LFE3
 1226 0018 00000000 		.4byte	.LFB4
 1227 001c 14000000 		.4byte	.LFE4
 1228 0020 00000000 		.4byte	.LFB5
 1229 0024 18000000 		.4byte	.LFE5
 1230 0028 00000000 		.4byte	.LFB6
 1231 002c 60000000 		.4byte	.LFE6
 1232 0030 00000000 		.4byte	.LFB7
 1233 0034 18000000 		.4byte	.LFE7
 1234 0038 00000000 		.4byte	.LFB8
 1235 003c 18000000 		.4byte	.LFE8
 1236 0040 00000000 		.4byte	.LFB9
 1237 0044 18000000 		.4byte	.LFE9
 1238 0048 00000000 		.4byte	0
 1239 004c 00000000 		.4byte	0
 1240              		.section	.debug_line,"",%progbits
 1241              	.Ldebug_line0:
 1242 0000 49010000 		.section	.debug_str,"MS",%progbits,1
 1242      02006800 
 1242      00000201 
 1242      FB0E0D00 
 1242      01010101 
 1243              	.LASF37:
 1244 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 1244      4152545F 
 1244      45505F33 
 1244      5F495352 
 1244      00
 1245              	.LASF15:
 1246 0011 72656733 		.ascii	"reg32\000"
 1246      3200
 1247              	.LASF32:
 1248 0017 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 1248      4152545F 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 47


 1248      7369655F 
 1248      65705F73 
 1248      74727563 
 1249              	.LASF31:
 1250 002d 65704372 		.ascii	"epCr0\000"
 1250      3000
 1251              	.LASF12:
 1252 0033 666C6F61 		.ascii	"float\000"
 1252      7400
 1253              	.LASF3:
 1254 0039 73686F72 		.ascii	"short unsigned int\000"
 1254      7420756E 
 1254      7369676E 
 1254      65642069 
 1254      6E7400
 1255              	.LASF36:
 1256 004c 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 1256      4152545F 
 1256      45505F32 
 1256      5F495352 
 1256      00
 1257              	.LASF47:
 1258 005d 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 1258      73657273 
 1258      5C48507A 
 1258      3432305C 
 1258      446F6375 
 1259 008a 6C622D62 		.ascii	"lb-boards\\FPGA Cards\\RETRO-EP4CE15\\PSOC\\USBFS_U"
 1259      6F617264 
 1259      735C4650 
 1259      47412043 
 1259      61726473 
 1260 00b9 41525430 		.ascii	"ART01\\USBFS_UART01.cydsn\000"
 1260      315C5553 
 1260      4246535F 
 1260      55415254 
 1260      30312E63 
 1261              	.LASF44:
 1262 00d2 55534255 		.ascii	"USBUART_INTR_LO_ISR\000"
 1262      4152545F 
 1262      494E5452 
 1262      5F4C4F5F 
 1262      49535200 
 1263              	.LASF38:
 1264 00e6 55534255 		.ascii	"USBUART_SOF_ISR\000"
 1264      4152545F 
 1264      534F465F 
 1264      49535200 
 1265              	.LASF48:
 1266 00f6 55534255 		.ascii	"USBUART_IntrHandler\000"
 1266      4152545F 
 1266      496E7472 
 1266      48616E64 
 1266      6C657200 
 1267              	.LASF29:
 1268 010a 6570436E 		.ascii	"epCnt0\000"
 1268      743000
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 48


 1269              	.LASF30:
 1270 0111 6570436E 		.ascii	"epCnt1\000"
 1270      743100
 1271              	.LASF22:
 1272 0118 6570546F 		.ascii	"epToggle\000"
 1272      67676C65 
 1272      00
 1273              	.LASF50:
 1274 0121 55534255 		.ascii	"USBUART_EP\000"
 1274      4152545F 
 1274      455000
 1275              	.LASF20:
 1276 012c 61706945 		.ascii	"apiEpState\000"
 1276      70537461 
 1276      746500
 1277              	.LASF5:
 1278 0137 6C6F6E67 		.ascii	"long unsigned int\000"
 1278      20756E73 
 1278      69676E65 
 1278      6420696E 
 1278      7400
 1279              	.LASF23:
 1280 0149 61646472 		.ascii	"addr\000"
 1280      00
 1281              	.LASF45:
 1282 014e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1282      43313120 
 1282      352E342E 
 1282      31203230 
 1282      31363036 
 1283 0181 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1283      20726576 
 1283      6973696F 
 1283      6E203233 
 1283      37373135 
 1284 01b4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1284      66756E63 
 1284      74696F6E 
 1284      2D736563 
 1284      74696F6E 
 1285              	.LASF33:
 1286 01dc 73696545 		.ascii	"sieEp\000"
 1286      7000
 1287              	.LASF34:
 1288 01e2 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 1288      4152545F 
 1288      7369655F 
 1288      6570735F 
 1288      73747275 
 1289              	.LASF1:
 1290 01f9 756E7369 		.ascii	"unsigned char\000"
 1290      676E6564 
 1290      20636861 
 1290      7200
 1291              	.LASF13:
 1292 0207 646F7562 		.ascii	"double\000"
 1292      6C6500
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 49


 1293              	.LASF19:
 1294 020e 61747472 		.ascii	"attrib\000"
 1294      696200
 1295              	.LASF25:
 1296 0215 62756666 		.ascii	"buffOffset\000"
 1296      4F666673 
 1296      657400
 1297              	.LASF10:
 1298 0220 75696E74 		.ascii	"uint16\000"
 1298      313600
 1299              	.LASF40:
 1300 0227 55534255 		.ascii	"USBUART_isrCallbacks\000"
 1300      4152545F 
 1300      69737243 
 1300      616C6C62 
 1300      61636B73 
 1301              	.LASF11:
 1302 023c 75696E74 		.ascii	"uint32\000"
 1302      333200
 1303              	.LASF8:
 1304 0243 756E7369 		.ascii	"unsigned int\000"
 1304      676E6564 
 1304      20696E74 
 1304      00
 1305              	.LASF7:
 1306 0250 6C6F6E67 		.ascii	"long long unsigned int\000"
 1306      206C6F6E 
 1306      6720756E 
 1306      7369676E 
 1306      65642069 
 1307              	.LASF21:
 1308 0267 68774570 		.ascii	"hwEpState\000"
 1308      53746174 
 1308      6500
 1309              	.LASF43:
 1310 0271 55534255 		.ascii	"USBUART_INTR_MED_ISR\000"
 1310      4152545F 
 1310      494E5452 
 1310      5F4D4544 
 1310      5F495352 
 1311              	.LASF16:
 1312 0286 63796973 		.ascii	"cyisraddress\000"
 1312      72616464 
 1312      72657373 
 1312      00
 1313              	.LASF18:
 1314 0293 73697A65 		.ascii	"sizetype\000"
 1314      74797065 
 1314      00
 1315              	.LASF24:
 1316 029c 65704D6F 		.ascii	"epMode\000"
 1316      646500
 1317              	.LASF6:
 1318 02a3 6C6F6E67 		.ascii	"long long int\000"
 1318      206C6F6E 
 1318      6720696E 
 1318      7400
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 50


 1319              	.LASF14:
 1320 02b1 63686172 		.ascii	"char\000"
 1320      00
 1321              	.LASF26:
 1322 02b6 62756666 		.ascii	"bufferSize\000"
 1322      65725369 
 1322      7A6500
 1323              	.LASF2:
 1324 02c1 73686F72 		.ascii	"short int\000"
 1324      7420696E 
 1324      7400
 1325              	.LASF28:
 1326 02cb 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 1326      42554152 
 1326      545F4550 
 1326      5F43544C 
 1326      5F424C4F 
 1327              	.LASF39:
 1328 02e2 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 1328      4152545F 
 1328      4255535F 
 1328      52455345 
 1328      545F4953 
 1329              	.LASF9:
 1330 02f8 75696E74 		.ascii	"uint8\000"
 1330      3800
 1331              	.LASF27:
 1332 02fe 696E7465 		.ascii	"interface\000"
 1332      72666163 
 1332      6500
 1333              	.LASF41:
 1334 0308 63624964 		.ascii	"cbIdx\000"
 1334      7800
 1335              	.LASF4:
 1336 030e 6C6F6E67 		.ascii	"long int\000"
 1336      20696E74 
 1336      00
 1337              	.LASF49:
 1338 0317 696E7472 		.ascii	"intrCause\000"
 1338      43617573 
 1338      6500
 1339              	.LASF42:
 1340 0321 55534255 		.ascii	"USBUART_INTR_HI_ISR\000"
 1340      4152545F 
 1340      494E5452 
 1340      5F48495F 
 1340      49535200 
 1341              	.LASF17:
 1342 0335 6C6F6E67 		.ascii	"long double\000"
 1342      20646F75 
 1342      626C6500 
 1343              	.LASF0:
 1344 0341 7369676E 		.ascii	"signed char\000"
 1344      65642063 
 1344      68617200 
 1345              	.LASF35:
 1346 034d 55534255 		.ascii	"USBUART_EP_1_ISR\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccnQNJPH.s 			page 51


 1346      4152545F 
 1346      45505F31 
 1346      5F495352 
 1346      00
 1347              	.LASF46:
 1348 035e 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBUART_episr.c\000"
 1348      72617465 
 1348      645F536F 
 1348      75726365 
 1348      5C50536F 
 1349              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
