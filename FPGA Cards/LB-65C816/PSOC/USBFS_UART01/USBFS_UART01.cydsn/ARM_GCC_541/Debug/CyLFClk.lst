ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysClkWcoSetHighPowerMode, %function
  24              	CySysClkWcoSetHighPowerMode:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (-1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  26:Generated_Source\PSoC4/CyLFClk.h **** {
  27:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  29:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  30:Generated_Source\PSoC4/CyLFClk.h **** 
  31:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 2


  32:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
  33:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  34:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  35:Generated_Source\PSoC4/CyLFClk.h **** /**
  36:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  37:Generated_Source\PSoC4/CyLFClk.h **** * @{
  38:Generated_Source\PSoC4/CyLFClk.h **** */
  39:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  40:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  43:Generated_Source\PSoC4/CyLFClk.h **** 
  44:Generated_Source\PSoC4/CyLFClk.h **** /**
  45:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  46:Generated_Source\PSoC4/CyLFClk.h **** * @{
  47:Generated_Source\PSoC4/CyLFClk.h **** */
  48:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  49:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  52:Generated_Source\PSoC4/CyLFClk.h **** 
  53:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  54:Generated_Source\PSoC4/CyLFClk.h ****     /**
  55:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_compensate
  56:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  57:Generated_Source\PSoC4/CyLFClk.h ****     */
  58:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  60:Generated_Source\PSoC4/CyLFClk.h ****     /** @} compensate */
  61:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  62:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  63:Generated_Source\PSoC4/CyLFClk.h **** 
  64:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  65:Generated_Source\PSoC4/CyLFClk.h ****     /**
  66:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_general
  67:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  68:Generated_Source\PSoC4/CyLFClk.h ****     */
  69:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  70:Generated_Source\PSoC4/CyLFClk.h ****     /** @} group_general */
  71:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  72:Generated_Source\PSoC4/CyLFClk.h **** 
  73:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  74:Generated_Source\PSoC4/CyLFClk.h ****     /**
  75:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wco
  76:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  77:Generated_Source\PSoC4/CyLFClk.h ****     */
  78:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  81:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  82:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wco */
  83:Generated_Source\PSoC4/CyLFClk.h **** 
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 3


  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h ****     /**
  97:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h ****     * @{
  99:Generated_Source\PSoC4/CyLFClk.h ****     */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h ****     /**
 131:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 133:Generated_Source\PSoC4/CyLFClk.h ****     */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 4


 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h ****     /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h ****     /**
 155:Generated_Source\PSoC4/CyLFClk.h ****     * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h ****     * @{
 157:Generated_Source\PSoC4/CyLFClk.h ****     */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h ****     /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 5


 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h ****     /**********************************************************************************
 227:Generated_Source\PSoC4/CyLFClk.h ****     * CySysClkIloCompensate() - value to walk over oversamling in calculations with 
 228:Generated_Source\PSoC4/CyLFClk.h ****     * srsslite. The oversample can be obtained when ilo frequency in equal 80 KHz and
 229:Generated_Source\PSoC4/CyLFClk.h ****     * desired clocks are 80 000 clocks.
 230:Generated_Source\PSoC4/CyLFClk.h ****     **********************************************************************************/
 231:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 232:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 233:Generated_Source\PSoC4/CyLFClk.h **** 
 234:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 237:Generated_Source\PSoC4/CyLFClk.h **** 
 238:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 239:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 240:Generated_Source\PSoC4/CyLFClk.h **** 
 241:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)
 243:Generated_Source\PSoC4/CyLFClk.h **** 
 244:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 245:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))
 246:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 247:Generated_Source\PSoC4/CyLFClk.h **** 
 248:Generated_Source\PSoC4/CyLFClk.h **** 
 249:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 250:Generated_Source\PSoC4/CyLFClk.h **** 
 251:Generated_Source\PSoC4/CyLFClk.h ****     /* CySysClkSetLfclkSource() - implementation definitions */
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 258:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 259:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 6


 260:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 261:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 262:Generated_Source\PSoC4/CyLFClk.h **** 
 263:Generated_Source\PSoC4/CyLFClk.h ****     /** Internal Low Frequency (32 kHz) Oscillator (ILO) */
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)
 265:Generated_Source\PSoC4/CyLFClk.h **** 
 266:Generated_Source\PSoC4/CyLFClk.h ****     /** Low Frequency Watch Crystal Oscillator (WCO) */
 267:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))
 268:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 269:Generated_Source\PSoC4/CyLFClk.h **** 
 270:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
 271:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External crystal as WCO’s clock source */
 274:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)
 275:Generated_Source\PSoC4/CyLFClk.h **** 
 276:Generated_Source\PSoC4/CyLFClk.h ****     /** Selects External clock input on wco_in pin as WCO’s clock source */
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 284:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 285:Generated_Source\PSoC4/CyLFClk.h **** 
 286:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 287:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 288:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 289:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 291:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 292:Generated_Source\PSoC4/CyLFClk.h **** 
 293:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS))
 295:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 299:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 300:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 301:Generated_Source\PSoC4/CyLFClk.h **** 
 302:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 303:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 305:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!CY_IP_CPUSS)) */
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 308:Generated_Source\PSoC4/CyLFClk.h **** 
 309:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 313:Generated_Source\PSoC4/CyLFClk.h **** 
 314:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 315:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 316:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 7


 317:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 320:Generated_Source\PSoC4/CyLFClk.h **** 
 321:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 322:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 323:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 324:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 325:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 326:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 327:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 329:Generated_Source\PSoC4/CyLFClk.h **** 
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 332:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 334:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 335:Generated_Source\PSoC4/CyLFClk.h **** 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 338:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 339:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 340:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 341:Generated_Source\PSoC4/CyLFClk.h **** 
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 344:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 346:Generated_Source\PSoC4/CyLFClk.h **** 
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 348:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 350:Generated_Source\PSoC4/CyLFClk.h **** 
 351:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 352:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 354:Generated_Source\PSoC4/CyLFClk.h **** 
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 356:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 358:Generated_Source\PSoC4/CyLFClk.h **** 
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 360:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 364:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 365:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 366:Generated_Source\PSoC4/CyLFClk.h **** 
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h **** 
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 372:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 8


 374:Generated_Source\PSoC4/CyLFClk.h **** 
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 379:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 380:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 381:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 382:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 383:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 384:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 385:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 386:Generated_Source\PSoC4/CyLFClk.h **** 
 387:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 388:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 389:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 392:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 393:Generated_Source\PSoC4/CyLFClk.h **** 
 394:Generated_Source\PSoC4/CyLFClk.h ****     #else
 395:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 396:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 397:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 398:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 399:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 400:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 401:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 402:Generated_Source\PSoC4/CyLFClk.h **** 
 403:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 404:Generated_Source\PSoC4/CyLFClk.h **** 
 405:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 406:Generated_Source\PSoC4/CyLFClk.h **** 
 407:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 408:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 409:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 410:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 411:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 414:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 415:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 416:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 419:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 420:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 421:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 422:Generated_Source\PSoC4/CyLFClk.h ****     #else
 423:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 424:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 425:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 426:Generated_Source\PSoC4/CyLFClk.h **** 
 427:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 428:Generated_Source\PSoC4/CyLFClk.h **** 
 429:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 9


 431:Generated_Source\PSoC4/CyLFClk.h **** 
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 433:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 435:Generated_Source\PSoC4/CyLFClk.h **** 
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 437:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 439:Generated_Source\PSoC4/CyLFClk.h **** 
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 441:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 442:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
 447:Generated_Source\PSoC4/CyLFClk.h **** 
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 451:Generated_Source\PSoC4/CyLFClk.h **** 
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 453:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 457:Generated_Source\PSoC4/CyLFClk.h **** 
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 459:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 463:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 469:Generated_Source\PSoC4/CyLFClk.h **** 
 470:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 471:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 472:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 473:Generated_Source\PSoC4/CyLFClk.h **** 
 474:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 475:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 476:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 479:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 480:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 481:Generated_Source\PSoC4/CyLFClk.h **** 
 482:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 483:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 484:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 486:Generated_Source\PSoC4/CyLFClk.h **** 
 487:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 10


 488:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 489:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 490:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 491:Generated_Source\PSoC4/CyLFClk.h **** 
 492:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 493:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 494:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 495:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 498:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 499:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 500:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 501:Generated_Source\PSoC4/CyLFClk.h **** 
 502:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 503:Generated_Source\PSoC4/CyLFClk.h **** 
 504:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 505:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< WCO High power mode */
 506:Generated_Source\PSoC4/CyLFClk.h **** 
 507:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_BLESS)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< WCO Low power mode */
 509:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_BLESS) */
 510:Generated_Source\PSoC4/CyLFClk.h **** 
 511:Generated_Source\PSoC4/CyLFClk.h **** 
 512:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 513:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 514:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 515:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                  ((uint32)0x0Au)
 516:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE               ((uint32)0x00000100u)
 517:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                     (( int32)0x0f)
 518:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                     (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >> 1u)
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (32000u)
 522:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x3F)
 523:Generated_Source\PSoC4/CyLFClk.h **** #else
 524:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 529:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_SELECT_CLK1              ((uint32) ((uint32) CYDEV_DFT_SELECT_CLK1 << 8u))
 530:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1       ((uint32) (CY_SYS_TST_DDFT_SELECT_CLK1 | CYDEV_DFT
 531:Generated_Source\PSoC4/CyLFClk.h **** 
 532:Generated_Source\PSoC4/CyLFClk.h **** 
 533:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 535:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 536:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Control Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 1 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h **** /* DFT TST Counter 2 Register*/
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 11


 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h **** /* DFT Muxes Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Configuration Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 554:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 555:Generated_Source\PSoC4/CyLFClk.h **** 
 556:Generated_Source\PSoC4/CyLFClk.h **** /* ILO Trim Register*/
 557:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 558:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 560:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 561:Generated_Source\PSoC4/CyLFClk.h **** 
 562:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 563:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_IP_BLESS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 572:Generated_Source\PSoC4/CyLFClk.h **** 
 573:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 574:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 576:Generated_Source\PSoC4/CyLFClk.h ****     #else
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 585:Generated_Source\PSoC4/CyLFClk.h **** 
 586:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 587:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 588:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 589:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_IP_BLESS) */
 590:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 591:Generated_Source\PSoC4/CyLFClk.h **** 
 592:Generated_Source\PSoC4/CyLFClk.h **** 
 593:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 594:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 595:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 596:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 12


 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 608:Generated_Source\PSoC4/CyLFClk.h **** 
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 611:Generated_Source\PSoC4/CyLFClk.h **** #else
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 623:Generated_Source\PSoC4/CyLFClk.h **** 
 624:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 625:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 626:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 627:Generated_Source\PSoC4/CyLFClk.h **** 
 628:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 643:Generated_Source\PSoC4/CyLFClk.h **** 
 644:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 645:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 646:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 649:Generated_Source\PSoC4/CyLFClk.h **** 
 650:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 652:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 653:Generated_Source\PSoC4/CyLFClk.h ****     *
 654:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 655:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 656:Generated_Source\PSoC4/CyLFClk.h ****     *
 657:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 658:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****     {
  27              		.loc 1 659 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 660:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
 661:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  37              		.loc 1 661 0
  38 0004 0F4B     		ldr	r3, .L2
  39 0006 0F4A     		ldr	r2, .L2
  40 0008 1268     		ldr	r2, [r2]
  41 000a 0121     		movs	r1, #1
  42 000c 8A43     		bics	r2, r1
  43 000e 1A60     		str	r2, [r3]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
 663:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 664:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
  44              		.loc 1 664 0
  45 0010 0C4B     		ldr	r3, .L2
  46 0012 0C4A     		ldr	r2, .L2
  47 0014 1268     		ldr	r2, [r2]
  48 0016 0221     		movs	r1, #2
  49 0018 8A43     		bics	r2, r1
  50 001a 1A60     		str	r2, [r3]
 665:Generated_Source\PSoC4/CyLFClk.h **** 
 666:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
  51              		.loc 1 667 0
  52 001c 0A4B     		ldr	r3, .L2+4
  53 001e 0A4A     		ldr	r2, .L2+4
  54 0020 1268     		ldr	r2, [r2]
  55 0022 3021     		movs	r1, #48
  56 0024 8A43     		bics	r2, r1
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  57              		.loc 1 668 0
  58 0026 1021     		movs	r1, #16
  59 0028 0A43     		orrs	r2, r1
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  60              		.loc 1 667 0
  61 002a 1A60     		str	r2, [r3]
 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  62              		.loc 1 669 0
  63 002c 064B     		ldr	r3, .L2+4
  64 002e 064A     		ldr	r2, .L2+4
  65 0030 1268     		ldr	r2, [r2]
  66 0032 0721     		movs	r1, #7
  67 0034 8A43     		bics	r2, r1
 670:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  68              		.loc 1 670 0
  69 0036 0121     		movs	r1, #1
  70 0038 0A43     		orrs	r2, r1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 14


 669:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  71              		.loc 1 669 0
  72 003a 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/CyLFClk.h ****     }
  73              		.loc 1 671 0
  74 003c C046     		nop
  75 003e BD46     		mov	sp, r7
  76              		@ sp needed
  77 0040 80BD     		pop	{r7, pc}
  78              	.L3:
  79 0042 C046     		.align	2
  80              	.L2:
  81 0044 00002240 		.word	1075970048
  82 0048 000F2240 		.word	1075973888
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  86              		.data
  87              		.align	1
  88              		.type	defaultIloTrimRegValue, %object
  89              		.size	defaultIloTrimRegValue, 2
  90              	defaultIloTrimRegValue:
  91 0000 F000     		.short	240
  92              		.bss
  93              		.align	2
  94              	lfclkPosedgeWdtCounter0Enabled:
  95 0000 00000000 		.space	4
  96              		.align	2
  97              	lfclkPosedgeWdtCounter0Mode:
  98 0004 00000000 		.space	4
  99              		.align	2
 100              	disableServicedIsr:
 101 0008 00000000 		.space	4
 102              		.data
 103 0002 0000     		.align	2
 104              		.type	wdtIsrMask, %object
 105              		.size	wdtIsrMask, 4
 106              	wdtIsrMask:
 107 0004 04040400 		.word	263172
 108              		.section	.rodata
 109              		.align	2
 110              		.type	counterIntMaskTbl, %object
 111              		.size	counterIntMaskTbl, 12
 112              	counterIntMaskTbl:
 113 0000 04000000 		.word	4
 114 0004 00040000 		.word	1024
 115 0008 00000400 		.word	262144
 116              		.bss
 117              		.align	2
 118              	cySysWdtCallback:
 119 000c 00000000 		.space	12
 119      00000000 
 119      00000000 
 120              		.section	.text.CySysClkIloStart,"ax",%progbits
 121              		.align	2
 122              		.global	CySysClkIloStart
 123              		.code	16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 15


 124              		.thumb_func
 125              		.type	CySysClkIloStart, %function
 126              	CySysClkIloStart:
 127              	.LFB1:
 128              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 16


  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
 129              		.loc 2 84 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 80B5     		push	{r7, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 00AF     		add	r7, sp, #0
 138              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 139              		.loc 2 85 0
 140 0004 044B     		ldr	r3, .L5
 141 0006 044A     		ldr	r2, .L5
 142 0008 1268     		ldr	r2, [r2]
 143 000a 8021     		movs	r1, #128
 144 000c 0906     		lsls	r1, r1, #24
 145 000e 0A43     		orrs	r2, r1
 146 0010 1A60     		str	r2, [r3]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 147              		.loc 2 86 0
 148 0012 C046     		nop
 149 0014 BD46     		mov	sp, r7
 150              		@ sp needed
 151 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 17


 152              	.L6:
 153              		.align	2
 154              	.L5:
 155 0018 04010B40 		.word	1074462980
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	CySysClkIloStart, .-CySysClkIloStart
 159              		.section	.text.CySysClkIloStop,"ax",%progbits
 160              		.align	2
 161              		.global	CySysClkIloStop
 162              		.code	16
 163              		.thumb_func
 164              		.type	CySysClkIloStop, %function
 165              	CySysClkIloStop:
 166              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 167              		.loc 2 109 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 90B5     		push	{r4, r7, lr}
 172              		.cfi_def_cfa_offset 12
 173              		.cfi_offset 4, -12
 174              		.cfi_offset 7, -8
 175              		.cfi_offset 14, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              		.cfi_def_cfa_offset 24
 178 0004 00AF     		add	r7, sp, #0
 179              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 180              		.loc 2 114 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 18


 181 0006 FFF7FEFF 		bl	CySysWdtLocked
 182 000a 031E     		subs	r3, r0, #0
 183 000c 22D1     		bne	.L10
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 184              		.loc 2 116 0
 185 000e FFF7FEFF 		bl	CySysClkIloEnabled
 186 0012 031E     		subs	r3, r0, #0
 187 0014 1ED0     		beq	.L10
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 188              		.loc 2 120 0
 189 0016 FFF7FEFF 		bl	CySysClkGetLfclkSource
 190 001a 031E     		subs	r3, r0, #0
 191 001c 14D1     		bne	.L9
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 192              		.loc 2 124 0
 193 001e FC1D     		adds	r4, r7, #7
 194 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 195 0024 0300     		movs	r3, r0
 196 0026 2370     		strb	r3, [r4]
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 197              		.loc 2 125 0
 198 0028 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 199              		.loc 2 126 0
 200 002c 0B4B     		ldr	r3, .L11
 201 002e 0B4A     		ldr	r2, .L11
 202 0030 1268     		ldr	r2, [r2]
 203 0032 5200     		lsls	r2, r2, #1
 204 0034 5208     		lsrs	r2, r2, #1
 205 0036 1A60     		str	r2, [r3]
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 206              		.loc 2 127 0
 207 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 208              		.loc 2 128 0
 209 003c FB1D     		adds	r3, r7, #7
 210 003e 1B78     		ldrb	r3, [r3]
 211 0040 1800     		movs	r0, r3
 212 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 19


 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 213              		.loc 2 143 0
 214 0046 05E0     		b	.L10
 215              	.L9:
 134:Generated_Source\PSoC4/CyLFClk.c ****                 }
 216              		.loc 2 134 0
 217 0048 044B     		ldr	r3, .L11
 218 004a 044A     		ldr	r2, .L11
 219 004c 1268     		ldr	r2, [r2]
 220 004e 5200     		lsls	r2, r2, #1
 221 0050 5208     		lsrs	r2, r2, #1
 222 0052 1A60     		str	r2, [r3]
 223              	.L10:
 224              		.loc 2 143 0
 225 0054 C046     		nop
 226 0056 BD46     		mov	sp, r7
 227 0058 03B0     		add	sp, sp, #12
 228              		@ sp needed
 229 005a 90BD     		pop	{r4, r7, pc}
 230              	.L12:
 231              		.align	2
 232              	.L11:
 233 005c 04010B40 		.word	1074462980
 234              		.cfi_endproc
 235              	.LFE2:
 236              		.size	CySysClkIloStop, .-CySysClkIloStop
 237              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 238              		.align	2
 239              		.global	CySysClkIloStartMeasurement
 240              		.code	16
 241              		.thumb_func
 242              		.type	CySysClkIloStartMeasurement, %function
 243              	CySysClkIloStartMeasurement:
 244              	.LFB3:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 20


 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 245              		.loc 2 169 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 255              		.loc 2 174 0
 256 0004 114B     		ldr	r3, .L15
 257 0006 1B78     		ldrb	r3, [r3]
 258 0008 002B     		cmp	r3, #0
 259 000a 0BD1     		bne	.L14
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 260              		.loc 2 176 0
 261 000c 104B     		ldr	r3, .L15+4
 262 000e 1B68     		ldr	r3, [r3]
 263 0010 DBB2     		uxtb	r3, r3
 264 0012 9BB2     		uxth	r3, r3
 265 0014 0F22     		movs	r2, #15
 266 0016 1340     		ands	r3, r2
 267 0018 9AB2     		uxth	r2, r3
 268 001a 0E4B     		ldr	r3, .L15+8
 269 001c 1A80     		strh	r2, [r3]
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 270              		.loc 2 177 0
 271 001e 0B4B     		ldr	r3, .L15
 272 0020 0122     		movs	r2, #1
 273 0022 1A70     		strb	r2, [r3]
 274              	.L14:
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 275              		.loc 2 182 0
 276 0024 0C4B     		ldr	r3, .L15+12
 277 0026 0C4A     		ldr	r2, .L15+12
 278 0028 1268     		ldr	r2, [r2]
 279 002a 0C49     		ldr	r1, .L15+16
 280 002c 0A40     		ands	r2, r1
 281 002e 8021     		movs	r1, #128
 282 0030 4900     		lsls	r1, r1, #1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 21


 283 0032 0A43     		orrs	r2, r1
 284 0034 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 285              		.loc 2 185 0
 286 0036 0A4B     		ldr	r3, .L15+20
 287 0038 094A     		ldr	r2, .L15+20
 288 003a 1268     		ldr	r2, [r2]
 289 003c 0949     		ldr	r1, .L15+24
 290 003e 0A40     		ands	r2, r1
 291 0040 0949     		ldr	r1, .L15+28
 292 0042 0A43     		orrs	r2, r1
 293 0044 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 294              		.loc 2 187 0
 295 0046 C046     		nop
 296 0048 BD46     		mov	sp, r7
 297              		@ sp needed
 298 004a 80BD     		pop	{r7, pc}
 299              	.L16:
 300              		.align	2
 301              	.L15:
 302 004c 18000000 		.word	iloTrimTrig.4931
 303 0050 24FF0B40 		.word	1074528036
 304 0054 00000000 		.word	defaultIloTrimRegValue
 305 0058 10010B40 		.word	1074462992
 306 005c FFF0FFFF 		.word	-3841
 307 0060 08000340 		.word	1073938440
 308 0064 C0C0FFFF 		.word	-16192
 309 0068 08090000 		.word	2312
 310              		.cfi_endproc
 311              	.LFE3:
 312              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 313              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 314              		.align	2
 315              		.global	CySysClkIloStopMeasurement
 316              		.code	16
 317              		.thumb_func
 318              		.type	CySysClkIloStopMeasurement, %function
 319              	CySysClkIloStopMeasurement:
 320              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 22


 202:Generated_Source\PSoC4/CyLFClk.c **** {
 321              		.loc 2 202 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 7, -8
 328              		.cfi_offset 14, -4
 329 0002 00AF     		add	r7, sp, #0
 330              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 331              		.loc 2 204 0
 332 0004 044B     		ldr	r3, .L18
 333 0006 044A     		ldr	r2, .L18
 334 0008 1268     		ldr	r2, [r2]
 335 000a 0449     		ldr	r1, .L18+4
 336 000c 0A40     		ands	r2, r1
 337 000e 1A60     		str	r2, [r3]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 338              		.loc 2 208 0
 339 0010 C046     		nop
 340 0012 BD46     		mov	sp, r7
 341              		@ sp needed
 342 0014 80BD     		pop	{r7, pc}
 343              	.L19:
 344 0016 C046     		.align	2
 345              	.L18:
 346 0018 10010B40 		.word	1074462992
 347 001c FFF0FFFF 		.word	-3841
 348              		.cfi_endproc
 349              	.LFE4:
 350              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 351              		.global	__aeabi_uidiv
 352              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 353              		.align	2
 354              		.global	CySysClkIloCompensate
 355              		.code	16
 356              		.thumb_func
 357              		.type	CySysClkIloCompensate, %function
 358              	CySysClkIloCompensate:
 359              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 23


 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 360              		.loc 2 268 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 24
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 0000 90B5     		push	{r4, r7, lr}
 365              		.cfi_def_cfa_offset 12
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 7, -8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 24


 368              		.cfi_offset 14, -4
 369 0002 87B0     		sub	sp, sp, #28
 370              		.cfi_def_cfa_offset 40
 371 0004 00AF     		add	r7, sp, #0
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 374 0008 3960     		str	r1, [r7]
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 375              		.loc 2 275 0
 376 000a 474B     		ldr	r3, .L32
 377 000c 1B68     		ldr	r3, [r3]
 378 000e 474A     		ldr	r2, .L32+4
 379 0010 1340     		ands	r3, r2
 380 0012 FB60     		str	r3, [r7, #12]
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 381              		.loc 2 278 0
 382 0014 FA68     		ldr	r2, [r7, #12]
 383 0016 8023     		movs	r3, #128
 384 0018 5B00     		lsls	r3, r3, #1
 385 001a 9A42     		cmp	r2, r3
 386 001c 00D0     		beq	.LCB279
 387 001e 7CE0     		b	.L21	@long jump
 388              	.LCB279:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 389              		.loc 2 279 0 discriminator 1
 390 0020 434B     		ldr	r3, .L32+8
 391 0022 1B68     		ldr	r3, [r3]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 392              		.loc 2 278 0 discriminator 1
 393 0024 434A     		ldr	r2, .L32+12
 394 0026 9342     		cmp	r3, r2
 395 0028 00D0     		beq	.LCB284
 396 002a 76E0     		b	.L21	@long jump
 397              	.LCB284:
 398              		.loc 2 279 0
 399 002c 7B68     		ldr	r3, [r7, #4]
 400 002e 424A     		ldr	r2, .L32+16
 401 0030 9342     		cmp	r3, r2
 402 0032 00D9     		bls	.LCB288
 403 0034 71E0     		b	.L21	@long jump
 404              	.LCB288:
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 405              		.loc 2 280 0
 406 0036 7B68     		ldr	r3, [r7, #4]
 407 0038 632B     		cmp	r3, #99
 408 003a 6ED9     		bls	.L21
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 409              		.loc 2 281 0
 410 003c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 25


 411 003e 002B     		cmp	r3, #0
 412 0040 6BD0     		beq	.L21
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 413              		.loc 2 284 0
 414 0042 3E4B     		ldr	r3, .L32+20
 415 0044 1B68     		ldr	r3, [r3]
 416 0046 002B     		cmp	r3, #0
 417 0048 5CD0     		beq	.L22
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 418              		.loc 2 287 0
 419 004a 3D4B     		ldr	r3, .L32+24
 420 004c 1B68     		ldr	r3, [r3]
 421 004e 002B     		cmp	r3, #0
 422 0050 55DA     		bge	.L23
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 423              		.loc 2 289 0
 424 0052 3C4B     		ldr	r3, .L32+28
 425 0054 1B68     		ldr	r3, [r3]
 426 0056 002B     		cmp	r3, #0
 427 0058 4ED0     		beq	.L24
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 428              		.loc 2 293 0
 429 005a 7B68     		ldr	r3, [r7, #4]
 430 005c 3A4A     		ldr	r2, .L32+32
 431 005e 9342     		cmp	r3, r2
 432 0060 1ED9     		bls	.L25
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 433              		.loc 2 295 0
 434 0062 7B68     		ldr	r3, [r7, #4]
 435 0064 1F21     		movs	r1, #31
 436 0066 1800     		movs	r0, r3
 437 0068 FFF7FEFF 		bl	__aeabi_uidiv
 438 006c 0300     		movs	r3, r0
 439 006e BB60     		str	r3, [r7, #8]
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 440              		.loc 2 297 0
 441 0070 344B     		ldr	r3, .L32+28
 442 0072 1A68     		ldr	r2, [r3]
 443 0074 354B     		ldr	r3, .L32+36
 444 0076 1B68     		ldr	r3, [r3]
 445 0078 5A43     		muls	r2, r3
 446 007a 344B     		ldr	r3, .L32+36
 447 007c 1B68     		ldr	r3, [r3]
 448 007e 9B0A     		lsrs	r3, r3, #10
 449 0080 1900     		movs	r1, r3
 450 0082 1000     		movs	r0, r2
 451 0084 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 26


 452 0088 0300     		movs	r3, r0
 453 008a 5C09     		lsrs	r4, r3, #5
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 454              		.loc 2 298 0
 455 008c BA68     		ldr	r2, [r7, #8]
 456 008e FA23     		movs	r3, #250
 457 0090 9900     		lsls	r1, r3, #2
 458 0092 1000     		movs	r0, r2
 459 0094 FFF7FEFF 		bl	__aeabi_uidiv
 460 0098 0300     		movs	r3, r0
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 461              		.loc 2 296 0
 462 009a 6343     		muls	r3, r4
 463 009c 7B61     		str	r3, [r7, #20]
 464 009e 22E0     		b	.L26
 465              	.L25:
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 466              		.loc 2 302 0
 467 00a0 7B68     		ldr	r3, [r7, #4]
 468 00a2 6422     		movs	r2, #100
 469 00a4 5343     		muls	r3, r2
 470 00a6 2A4A     		ldr	r2, .L32+40
 471 00a8 9446     		mov	ip, r2
 472 00aa 6344     		add	r3, r3, ip
 473 00ac 2949     		ldr	r1, .L32+44
 474 00ae 1800     		movs	r0, r3
 475 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 476 00b4 0300     		movs	r3, r0
 477 00b6 BB60     		str	r3, [r7, #8]
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 478              		.loc 2 305 0
 479 00b8 224B     		ldr	r3, .L32+28
 480 00ba 1A68     		ldr	r2, [r3]
 481 00bc 234B     		ldr	r3, .L32+36
 482 00be 1B68     		ldr	r3, [r3]
 483 00c0 5A43     		muls	r2, r3
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 484              		.loc 2 306 0
 485 00c2 224B     		ldr	r3, .L32+36
 486 00c4 1B68     		ldr	r3, [r3]
 487 00c6 9B0A     		lsrs	r3, r3, #10
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 488              		.loc 2 305 0
 489 00c8 1900     		movs	r1, r3
 490 00ca 1000     		movs	r0, r2
 491 00cc FFF7FEFF 		bl	__aeabi_uidiv
 492 00d0 0300     		movs	r3, r0
 493 00d2 1A00     		movs	r2, r3
 494              		.loc 2 306 0
 495 00d4 BB68     		ldr	r3, [r7, #8]
 496 00d6 5A43     		muls	r2, r3
 305:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 27


 497              		.loc 2 305 0
 498 00d8 FA23     		movs	r3, #250
 499 00da D901     		lsls	r1, r3, #7
 500 00dc 1000     		movs	r0, r2
 501 00de FFF7FEFF 		bl	__aeabi_uidiv
 502 00e2 0300     		movs	r3, r0
 503 00e4 7B61     		str	r3, [r7, #20]
 504              	.L26:
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 505              		.loc 2 326 0
 506 00e6 3B68     		ldr	r3, [r7]
 507 00e8 7A69     		ldr	r2, [r7, #20]
 508 00ea 1A60     		str	r2, [r3]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 509              		.loc 2 327 0
 510 00ec 134B     		ldr	r3, .L32+20
 511 00ee 0022     		movs	r2, #0
 512 00f0 1A60     		str	r2, [r3]
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 513              		.loc 2 328 0
 514 00f2 0023     		movs	r3, #0
 515 00f4 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 516              		.loc 2 284 0
 517 00f6 12E0     		b	.L30
 518              	.L24:
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 519              		.loc 2 332 0
 520 00f8 1123     		movs	r3, #17
 521 00fa 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 522              		.loc 2 284 0
 523 00fc 0FE0     		b	.L30
 524              	.L23:
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 28


 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 525              		.loc 2 337 0
 526 00fe 0723     		movs	r3, #7
 527 0100 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 528              		.loc 2 284 0
 529 0102 0CE0     		b	.L30
 530              	.L22:
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 531              		.loc 2 343 0
 532 0104 0E4A     		ldr	r2, .L32+24
 533 0106 114B     		ldr	r3, .L32+36
 534 0108 1B68     		ldr	r3, [r3]
 535 010a 9B0A     		lsrs	r3, r3, #10
 536 010c 1360     		str	r3, [r2]
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 537              		.loc 2 344 0
 538 010e 0B4B     		ldr	r3, .L32+20
 539 0110 0122     		movs	r2, #1
 540 0112 1A60     		str	r2, [r3]
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 541              		.loc 2 345 0
 542 0114 0723     		movs	r3, #7
 543 0116 3B61     		str	r3, [r7, #16]
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 544              		.loc 2 284 0
 545 0118 01E0     		b	.L30
 546              	.L21:
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 547              		.loc 2 350 0
 548 011a 1123     		movs	r3, #17
 549 011c 3B61     		str	r3, [r7, #16]
 550              	.L30:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 551              		.loc 2 353 0
 552 011e 3B69     		ldr	r3, [r7, #16]
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 553              		.loc 2 354 0
 554 0120 1800     		movs	r0, r3
 555 0122 BD46     		mov	sp, r7
 556 0124 07B0     		add	sp, sp, #28
 557              		@ sp needed
 558 0126 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 29


 559              	.L33:
 560              		.align	2
 561              	.L32:
 562 0128 10010B40 		.word	1074462992
 563 012c 3F3F0000 		.word	16191
 564 0130 08000340 		.word	1073938440
 565 0134 08090000 		.word	2312
 566 0138 00286BEE 		.word	-294967296
 567 013c 1C000000 		.word	compensateRunningStatus.4941
 568 0140 18000340 		.word	1073938456
 569 0144 1C000340 		.word	1073938460
 570 0148 60D10000 		.word	53600
 571 014c 00000000 		.word	cydelayFreqHz
 572 0150 0D030000 		.word	781
 573 0154 350C0000 		.word	3125
 574              		.cfi_endproc
 575              	.LFE5:
 576              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 577              		.section	.text.CySysClkIloEnabled,"ax",%progbits
 578              		.align	2
 579              		.code	16
 580              		.thumb_func
 581              		.type	CySysClkIloEnabled, %function
 582              	CySysClkIloEnabled:
 583              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 584              		.loc 2 371 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588 0000 80B5     		push	{r7, lr}
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 7, -8
 591              		.cfi_offset 14, -4
 592 0002 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 594              		.loc 2 373 0
 595 0004 044B     		ldr	r3, .L38
 596 0006 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 30


 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 597              		.loc 2 374 0
 598 0008 002B     		cmp	r3, #0
 599 000a 01DA     		bge	.L35
 600              		.loc 2 374 0 is_stmt 0 discriminator 1
 601 000c 0123     		movs	r3, #1
 373:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 602              		.loc 2 373 0 is_stmt 1 discriminator 1
 603 000e 00E0     		b	.L37
 604              	.L35:
 605              		.loc 2 374 0 discriminator 2
 606 0010 0023     		movs	r3, #0
 607              	.L37:
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 608              		.loc 2 376 0 discriminator 1
 609 0012 1800     		movs	r0, r3
 610 0014 BD46     		mov	sp, r7
 611              		@ sp needed
 612 0016 80BD     		pop	{r7, pc}
 613              	.L39:
 614              		.align	2
 615              	.L38:
 616 0018 04010B40 		.word	1074462980
 617              		.cfi_endproc
 618              	.LFE6:
 619              		.size	CySysClkIloEnabled, .-CySysClkIloEnabled
 620              		.section	.text.CySysClkIloTrim,"ax",%progbits
 621              		.align	2
 622              		.global	CySysClkIloTrim
 623              		.code	16
 624              		.thumb_func
 625              		.type	CySysClkIloTrim, %function
 626              	CySysClkIloTrim:
 627              	.LFB7:
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 31


 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 628              		.loc 2 450 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 24
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 32


 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 86B0     		sub	sp, sp, #24
 637              		.cfi_def_cfa_offset 32
 638 0004 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 640 0006 7860     		str	r0, [r7, #4]
 641 0008 3960     		str	r1, [r7]
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 642              		.loc 2 451 0
 643 000a 0523     		movs	r3, #5
 644 000c 7B61     		str	r3, [r7, #20]
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 645              		.loc 2 457 0
 646 000e 3E4B     		ldr	r3, .L58
 647 0010 1B68     		ldr	r3, [r3]
 648 0012 3E4A     		ldr	r2, .L58+4
 649 0014 1340     		ands	r3, r2
 650 0016 BB60     		str	r3, [r7, #8]
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 651              		.loc 2 460 0
 652 0018 BA68     		ldr	r2, [r7, #8]
 653 001a 8023     		movs	r3, #128
 654 001c 5B00     		lsls	r3, r3, #1
 655 001e 9A42     		cmp	r2, r3
 656 0020 00D0     		beq	.LCB511
 657 0022 69E0     		b	.L41	@long jump
 658              	.LCB511:
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 659              		.loc 2 461 0 discriminator 1
 660 0024 3A4B     		ldr	r3, .L58+8
 661 0026 1B68     		ldr	r3, [r3]
 460:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 662              		.loc 2 460 0 discriminator 1
 663 0028 3A4A     		ldr	r2, .L58+12
 664 002a 9342     		cmp	r3, r2
 665 002c 00D0     		beq	.LCB516
 666 002e 63E0     		b	.L41	@long jump
 667              	.LCB516:
 668              		.loc 2 461 0
 669 0030 3B68     		ldr	r3, [r7]
 670 0032 002B     		cmp	r3, #0
 671 0034 60D0     		beq	.L41
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 672              		.loc 2 464 0
 673 0036 7B68     		ldr	r3, [r7, #4]
 674 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 33


 675 003a 3DD1     		bne	.L42
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 676              		.loc 2 466 0
 677 003c 364B     		ldr	r3, .L58+16
 678 003e 1B68     		ldr	r3, [r3]
 679 0040 9B0A     		lsrs	r3, r3, #10
 680 0042 3B61     		str	r3, [r7, #16]
 681              	.L47:
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 682              		.loc 2 470 0
 683 0044 354A     		ldr	r2, .L58+20
 684 0046 344B     		ldr	r3, .L58+16
 685 0048 1B68     		ldr	r3, [r3]
 686 004a 9B0A     		lsrs	r3, r3, #10
 687 004c 1360     		str	r3, [r2]
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 688              		.loc 2 473 0
 689 004e 05E0     		b	.L43
 690              	.L45:
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 691              		.loc 2 475 0
 692 0050 3B69     		ldr	r3, [r7, #16]
 693 0052 013B     		subs	r3, r3, #1
 694 0054 3B61     		str	r3, [r7, #16]
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 695              		.loc 2 476 0
 696 0056 3B69     		ldr	r3, [r7, #16]
 697 0058 002B     		cmp	r3, #0
 698 005a 04D0     		beq	.L57
 699              	.L43:
 473:Generated_Source\PSoC4/CyLFClk.c ****                 {
 700              		.loc 2 473 0
 701 005c 2F4B     		ldr	r3, .L58+20
 702 005e 1B68     		ldr	r3, [r3]
 703 0060 002B     		cmp	r3, #0
 704 0062 F5DA     		bge	.L45
 705 0064 00E0     		b	.L44
 706              	.L57:
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 707              		.loc 2 478 0
 708 0066 C046     		nop
 709              	.L44:
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 710              		.loc 2 481 0
 711 0068 3B68     		ldr	r3, [r7]
 712 006a 1800     		movs	r0, r3
 713 006c FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 34


 714 0070 0200     		movs	r2, r0
 715 0072 2B4B     		ldr	r3, .L58+24
 716 0074 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 717              		.loc 2 482 0
 718 0076 7B69     		ldr	r3, [r7, #20]
 719 0078 013B     		subs	r3, r3, #1
 720 007a 7B61     		str	r3, [r7, #20]
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 721              		.loc 2 485 0
 722 007c 284B     		ldr	r3, .L58+24
 723 007e 1B68     		ldr	r3, [r3]
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 724              		.loc 2 487 0
 725 0080 002B     		cmp	r3, #0
 726 0082 06D0     		beq	.L46
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 727              		.loc 2 486 0
 728 0084 264B     		ldr	r3, .L58+24
 729 0086 1B68     		ldr	r3, [r3]
 485:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 730              		.loc 2 485 0
 731 0088 112B     		cmp	r3, #17
 732 008a 02D0     		beq	.L46
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 733              		.loc 2 486 0
 734 008c 7B69     		ldr	r3, [r7, #20]
 735 008e 002B     		cmp	r3, #0
 736 0090 D8D1     		bne	.L47
 737              	.L46:
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 738              		.loc 2 489 0
 739 0092 234B     		ldr	r3, .L58+24
 740 0094 1B68     		ldr	r3, [r3]
 741 0096 002B     		cmp	r3, #0
 742 0098 02D1     		bne	.L48
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 743              		.loc 2 491 0
 744 009a 0023     		movs	r3, #0
 745 009c FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 746              		.loc 2 464 0
 747 009e 2DE0     		b	.L55
 748              	.L48:
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 749              		.loc 2 495 0
 750 00a0 7B69     		ldr	r3, [r7, #20]
 751 00a2 002B     		cmp	r3, #0
 752 00a4 05D1     		bne	.L50
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 35


 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 753              		.loc 2 497 0
 754 00a6 1E4B     		ldr	r3, .L58+24
 755 00a8 0022     		movs	r2, #0
 756 00aa 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 757              		.loc 2 498 0
 758 00ac 1023     		movs	r3, #16
 759 00ae FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 760              		.loc 2 464 0
 761 00b0 24E0     		b	.L55
 762              	.L50:
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 763              		.loc 2 502 0
 764 00b2 1123     		movs	r3, #17
 765 00b4 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 766              		.loc 2 464 0
 767 00b6 21E0     		b	.L55
 768              	.L42:
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 769              		.loc 2 509 0
 770 00b8 194B     		ldr	r3, .L58+24
 771 00ba 1B68     		ldr	r3, [r3]
 772 00bc 002B     		cmp	r3, #0
 773 00be 10D0     		beq	.L52
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 774              		.loc 2 512 0
 775 00c0 164B     		ldr	r3, .L58+20
 776 00c2 1B68     		ldr	r3, [r3]
 777 00c4 002B     		cmp	r3, #0
 778 00c6 09DA     		bge	.L53
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 779              		.loc 2 514 0
 780 00c8 3B68     		ldr	r3, [r7]
 781 00ca 1800     		movs	r0, r3
 782 00cc FFF7FEFF 		bl	CySysClkIloUpdateTrimReg
 783 00d0 0300     		movs	r3, r0
 784 00d2 FB60     		str	r3, [r7, #12]
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 785              		.loc 2 515 0
 786 00d4 124B     		ldr	r3, .L58+24
 787 00d6 0022     		movs	r2, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 36


 788 00d8 1A60     		str	r2, [r3]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 789              		.loc 2 464 0
 790 00da 0FE0     		b	.L55
 791              	.L53:
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 792              		.loc 2 519 0
 793 00dc 0723     		movs	r3, #7
 794 00de FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 795              		.loc 2 464 0
 796 00e0 0CE0     		b	.L55
 797              	.L52:
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 798              		.loc 2 525 0
 799 00e2 0E4A     		ldr	r2, .L58+20
 800 00e4 0C4B     		ldr	r3, .L58+16
 801 00e6 1B68     		ldr	r3, [r3]
 802 00e8 9B0A     		lsrs	r3, r3, #10
 803 00ea 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 804              		.loc 2 526 0
 805 00ec 0C4B     		ldr	r3, .L58+24
 806 00ee 0122     		movs	r2, #1
 807 00f0 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 808              		.loc 2 527 0
 809 00f2 0723     		movs	r3, #7
 810 00f4 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC4/CyLFClk.c ****         {
 811              		.loc 2 464 0
 812 00f6 01E0     		b	.L55
 813              	.L41:
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 814              		.loc 2 533 0
 815 00f8 1123     		movs	r3, #17
 816 00fa FB60     		str	r3, [r7, #12]
 817              	.L55:
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 818              		.loc 2 536 0
 819 00fc FB68     		ldr	r3, [r7, #12]
 537:Generated_Source\PSoC4/CyLFClk.c **** }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 37


 820              		.loc 2 537 0
 821 00fe 1800     		movs	r0, r3
 822 0100 BD46     		mov	sp, r7
 823 0102 06B0     		add	sp, sp, #24
 824              		@ sp needed
 825 0104 80BD     		pop	{r7, pc}
 826              	.L59:
 827 0106 C046     		.align	2
 828              	.L58:
 829 0108 10010B40 		.word	1074462992
 830 010c 3F3F0000 		.word	16191
 831 0110 08000340 		.word	1073938440
 832 0114 08090000 		.word	2312
 833 0118 00000000 		.word	cydelayFreqHz
 834 011c 18000340 		.word	1073938456
 835 0120 20000000 		.word	trimRunningStatus.4953
 836              		.cfi_endproc
 837              	.LFE7:
 838              		.size	CySysClkIloTrim, .-CySysClkIloTrim
 839              		.global	__aeabi_idiv
 840              		.section	.text.CySysClkIloUpdateTrimReg,"ax",%progbits
 841              		.align	2
 842              		.global	CySysClkIloUpdateTrimReg
 843              		.code	16
 844              		.thumb_func
 845              		.type	CySysClkIloUpdateTrimReg, %function
 846              	CySysClkIloUpdateTrimReg:
 847              	.LFB8:
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 38


 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 848              		.loc 2 572 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 32
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852 0000 80B5     		push	{r7, lr}
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 88B0     		sub	sp, sp, #32
 857              		.cfi_def_cfa_offset 40
 858 0004 00AF     		add	r7, sp, #0
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 861              		.loc 2 579 0
 862 0008 374B     		ldr	r3, .L70
 863 000a 1B68     		ldr	r3, [r3]
 864 000c 002B     		cmp	r3, #0
 865 000e 64D0     		beq	.L61
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 866              		.loc 2 581 0
 867 0010 354B     		ldr	r3, .L70
 868 0012 1A68     		ldr	r2, [r3]
 869 0014 354B     		ldr	r3, .L70+4
 870 0016 1B68     		ldr	r3, [r3]
 871 0018 5A43     		muls	r2, r3
 872 001a 344B     		ldr	r3, .L70+4
 873 001c 1B68     		ldr	r3, [r3]
 874 001e 9B0A     		lsrs	r3, r3, #10
 875 0020 1900     		movs	r1, r3
 876 0022 1000     		movs	r0, r2
 877 0024 FFF7FEFF 		bl	__aeabi_uidiv
 878 0028 0300     		movs	r3, r0
 879 002a 7B61     		str	r3, [r7, #20]
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 880              		.loc 2 585 0
 881 002c 7B69     		ldr	r3, [r7, #20]
 882 002e 304A     		ldr	r2, .L70+8
 883 0030 9446     		mov	ip, r2
 884 0032 6344     		add	r3, r3, ip
 885 0034 FA22     		movs	r2, #250
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 39


 886 0036 9200     		lsls	r2, r2, #2
 887 0038 5A43     		muls	r2, r3
 888 003a FA23     		movs	r3, #250
 889 003c D901     		lsls	r1, r3, #7
 890 003e 1000     		movs	r0, r2
 891 0040 FFF7FEFF 		bl	__aeabi_idiv
 892 0044 0300     		movs	r3, r0
 893 0046 3B61     		str	r3, [r7, #16]
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 894              		.loc 2 589 0
 895 0048 3B69     		ldr	r3, [r7, #16]
 896 004a DA17     		asrs	r2, r3, #31
 897 004c 9B18     		adds	r3, r3, r2
 898 004e 5340     		eors	r3, r2
 899 0050 382B     		cmp	r3, #56
 900 0052 3CD9     		bls	.L62
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 901              		.loc 2 591 0
 902 0054 3B69     		ldr	r3, [r7, #16]
 903 0056 002B     		cmp	r3, #0
 904 0058 0DDD     		ble	.L63
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 905              		.loc 2 593 0
 906 005a 3A69     		ldr	r2, [r7, #16]
 907 005c 1300     		movs	r3, r2
 908 005e 9B00     		lsls	r3, r3, #2
 909 0060 9B18     		adds	r3, r3, r2
 910 0062 5B00     		lsls	r3, r3, #1
 911 0064 7133     		adds	r3, r3, #113
 912 0066 FF33     		adds	r3, r3, #255
 913 0068 2249     		ldr	r1, .L70+12
 914 006a 1800     		movs	r0, r3
 915 006c FFF7FEFF 		bl	__aeabi_idiv
 916 0070 0300     		movs	r3, r0
 917 0072 FB61     		str	r3, [r7, #28]
 918 0074 0CE0     		b	.L64
 919              	.L63:
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 920              		.loc 2 598 0
 921 0076 3A69     		ldr	r2, [r7, #16]
 922 0078 1300     		movs	r3, r2
 923 007a 9B00     		lsls	r3, r3, #2
 924 007c 9B18     		adds	r3, r3, r2
 925 007e 5B00     		lsls	r3, r3, #1
 926 0080 713B     		subs	r3, r3, #113
 927 0082 FF3B     		subs	r3, r3, #255
 928 0084 1B49     		ldr	r1, .L70+12
 929 0086 1800     		movs	r0, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 40


 930 0088 FFF7FEFF 		bl	__aeabi_idiv
 931 008c 0300     		movs	r3, r0
 932 008e FB61     		str	r3, [r7, #28]
 933              	.L64:
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 934              		.loc 2 601 0
 935 0090 194B     		ldr	r3, .L70+16
 936 0092 1B68     		ldr	r3, [r3]
 937 0094 0F22     		movs	r2, #15
 938 0096 1340     		ands	r3, r2
 939 0098 FB60     		str	r3, [r7, #12]
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 940              		.loc 2 602 0
 941 009a FA68     		ldr	r2, [r7, #12]
 942 009c FB69     		ldr	r3, [r7, #28]
 943 009e D31A     		subs	r3, r2, r3
 944 00a0 FB61     		str	r3, [r7, #28]
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 945              		.loc 2 604 0
 946 00a2 FB69     		ldr	r3, [r7, #28]
 947 00a4 0F2B     		cmp	r3, #15
 948 00a6 01DD     		ble	.L65
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 949              		.loc 2 606 0
 950 00a8 0F23     		movs	r3, #15
 951 00aa FB61     		str	r3, [r7, #28]
 952              	.L65:
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 953              		.loc 2 608 0
 954 00ac FB69     		ldr	r3, [r7, #28]
 955 00ae 002B     		cmp	r3, #0
 956 00b0 01DA     		bge	.L66
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 957              		.loc 2 610 0
 958 00b2 0023     		movs	r3, #0
 959 00b4 FB61     		str	r3, [r7, #28]
 960              	.L66:
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 961              		.loc 2 612 0
 962 00b6 104B     		ldr	r3, .L70+16
 963 00b8 0F4A     		ldr	r2, .L70+16
 964 00ba 1268     		ldr	r2, [r2]
 965 00bc 0F21     		movs	r1, #15
 966 00be 8A43     		bics	r2, r1
 967 00c0 1100     		movs	r1, r2
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 968              		.loc 2 613 0
 969 00c2 FA69     		ldr	r2, [r7, #28]
 612:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 970              		.loc 2 612 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 41


 971 00c4 0A43     		orrs	r2, r1
 972 00c6 1A60     		str	r2, [r3]
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 973              		.loc 2 614 0
 974 00c8 0723     		movs	r3, #7
 975 00ca BB61     		str	r3, [r7, #24]
 976 00cc 07E0     		b	.L68
 977              	.L62:
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 978              		.loc 2 619 0
 979 00ce 7B68     		ldr	r3, [r7, #4]
 980 00d0 3A69     		ldr	r2, [r7, #16]
 981 00d2 1A60     		str	r2, [r3]
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 982              		.loc 2 620 0
 983 00d4 0023     		movs	r3, #0
 984 00d6 BB61     		str	r3, [r7, #24]
 985 00d8 01E0     		b	.L68
 986              	.L61:
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 987              		.loc 2 625 0
 988 00da 1123     		movs	r3, #17
 989 00dc BB61     		str	r3, [r7, #24]
 990              	.L68:
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 991              		.loc 2 627 0
 992 00de BB69     		ldr	r3, [r7, #24]
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 993              		.loc 2 628 0
 994 00e0 1800     		movs	r0, r3
 995 00e2 BD46     		mov	sp, r7
 996 00e4 08B0     		add	sp, sp, #32
 997              		@ sp needed
 998 00e6 80BD     		pop	{r7, pc}
 999              	.L71:
 1000              		.align	2
 1001              	.L70:
 1002 00e8 1C000340 		.word	1073938460
 1003 00ec 00000000 		.word	cydelayFreqHz
 1004 00f0 0083FFFF 		.word	-32000
 1005 00f4 E1020000 		.word	737
 1006 00f8 24FF0B40 		.word	1074528036
 1007              		.cfi_endproc
 1008              	.LFE8:
 1009              		.size	CySysClkIloUpdateTrimReg, .-CySysClkIloUpdateTrimReg
 1010              		.section	.text.CySysClkIloRestoreFactoryTrim,"ax",%progbits
 1011              		.align	2
 1012              		.global	CySysClkIloRestoreFactoryTrim
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 42


 1013              		.code	16
 1014              		.thumb_func
 1015              		.type	CySysClkIloRestoreFactoryTrim, %function
 1016              	CySysClkIloRestoreFactoryTrim:
 1017              	.LFB9:
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 1018              		.loc 2 649 0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 8
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022 0000 80B5     		push	{r7, lr}
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 82B0     		sub	sp, sp, #8
 1027              		.cfi_def_cfa_offset 16
 1028 0004 00AF     		add	r7, sp, #0
 1029              		.cfi_def_cfa_register 7
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 1030              		.loc 2 650 0
 1031 0006 0023     		movs	r3, #0
 1032 0008 7B60     		str	r3, [r7, #4]
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 1033              		.loc 2 653 0
 1034 000a 0E4B     		ldr	r3, .L76
 1035 000c 1B88     		ldrh	r3, [r3]
 1036 000e 9BB2     		uxth	r3, r3
 1037 0010 F02B     		cmp	r3, #240
 1038 0012 0ED0     		beq	.L73
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 1039              		.loc 2 655 0
 1040 0014 0C4B     		ldr	r3, .L76+4
 1041 0016 0C4A     		ldr	r2, .L76+4
 1042 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 43


 1043 001a 0F21     		movs	r1, #15
 1044 001c 8A43     		bics	r2, r1
 1045 001e 1100     		movs	r1, r2
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1046              		.loc 2 656 0
 1047 0020 084A     		ldr	r2, .L76
 1048 0022 1288     		ldrh	r2, [r2]
 1049 0024 92B2     		uxth	r2, r2
 1050 0026 1000     		movs	r0, r2
 1051 0028 0F22     		movs	r2, #15
 1052 002a 0240     		ands	r2, r0
 655:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 1053              		.loc 2 655 0
 1054 002c 0A43     		orrs	r2, r1
 1055 002e 1A60     		str	r2, [r3]
 1056 0030 02E0     		b	.L74
 1057              	.L73:
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 1058              		.loc 2 660 0
 1059 0032 0123     		movs	r3, #1
 1060 0034 5B42     		rsbs	r3, r3, #0
 1061 0036 7B60     		str	r3, [r7, #4]
 1062              	.L74:
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 1063              		.loc 2 663 0
 1064 0038 7B68     		ldr	r3, [r7, #4]
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 1065              		.loc 2 664 0
 1066 003a 1800     		movs	r0, r3
 1067 003c BD46     		mov	sp, r7
 1068 003e 02B0     		add	sp, sp, #8
 1069              		@ sp needed
 1070 0040 80BD     		pop	{r7, pc}
 1071              	.L77:
 1072 0042 C046     		.align	2
 1073              	.L76:
 1074 0044 00000000 		.word	defaultIloTrimRegValue
 1075 0048 24FF0B40 		.word	1074528036
 1076              		.cfi_endproc
 1077              	.LFE9:
 1078              		.size	CySysClkIloRestoreFactoryTrim, .-CySysClkIloRestoreFactoryTrim
 1079              		.section	.text.CySysClkGetLfclkSource,"ax",%progbits
 1080              		.align	2
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	CySysClkGetLfclkSource, %function
 1084              	CySysClkGetLfclkSource:
 1085              	.LFB10:
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 44


 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 1086              		.loc 2 686 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 8
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 82B0     		sub	sp, sp, #8
 1095              		.cfi_def_cfa_offset 16
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 1098              		.loc 2 688 0
 1099 0006 054B     		ldr	r3, .L80
 1100 0008 1B68     		ldr	r3, [r3]
 1101 000a 9B0F     		lsrs	r3, r3, #30
 1102 000c 9B07     		lsls	r3, r3, #30
 1103 000e 7B60     		str	r3, [r7, #4]
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 1104              		.loc 2 689 0
 1105 0010 7B68     		ldr	r3, [r7, #4]
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 1106              		.loc 2 690 0
 1107 0012 1800     		movs	r0, r3
 1108 0014 BD46     		mov	sp, r7
 1109 0016 02B0     		add	sp, sp, #8
 1110              		@ sp needed
 1111 0018 80BD     		pop	{r7, pc}
 1112              	.L81:
 1113 001a C046     		.align	2
 1114              	.L80:
 1115 001c 0C020B40 		.word	1074463244
 1116              		.cfi_endproc
 1117              	.LFE10:
 1118              		.size	CySysClkGetLfclkSource, .-CySysClkGetLfclkSource
 1119              		.section	.text.CySysClkSetLfclkSource,"ax",%progbits
 1120              		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 45


 1121              		.global	CySysClkSetLfclkSource
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	CySysClkSetLfclkSource, %function
 1125              	CySysClkSetLfclkSource:
 1126              	.LFB11:
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 1127              		.loc 2 735 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 16
 1130              		@ frame_needed = 1, uses_anonymous_args = 0
 1131 0000 90B5     		push	{r4, r7, lr}
 1132              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 46


 1133              		.cfi_offset 4, -12
 1134              		.cfi_offset 7, -8
 1135              		.cfi_offset 14, -4
 1136 0002 85B0     		sub	sp, sp, #20
 1137              		.cfi_def_cfa_offset 32
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 0006 7860     		str	r0, [r7, #4]
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 1141              		.loc 2 738 0
 1142 0008 FFF7FEFF 		bl	CySysClkGetLfclkSource
 1143 000c 0200     		movs	r2, r0
 1144 000e 7B68     		ldr	r3, [r7, #4]
 1145 0010 9A42     		cmp	r2, r3
 1146 0012 19D0     		beq	.L84
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1147              		.loc 2 740 0
 1148 0014 0F23     		movs	r3, #15
 1149 0016 FC18     		adds	r4, r7, r3
 1150 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 1151 001c 0300     		movs	r3, r0
 1152 001e 2370     		strb	r3, [r4]
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 1153              		.loc 2 741 0
 1154 0020 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1155              		.loc 2 742 0
 1156 0024 0A4B     		ldr	r3, .L85
 1157 0026 0A4A     		ldr	r2, .L85
 1158 0028 1268     		ldr	r2, [r2]
 1159 002a 9200     		lsls	r2, r2, #2
 1160 002c 9108     		lsrs	r1, r2, #2
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 1161              		.loc 2 743 0
 1162 002e 7A68     		ldr	r2, [r7, #4]
 1163 0030 920F     		lsrs	r2, r2, #30
 1164 0032 9207     		lsls	r2, r2, #30
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 1165              		.loc 2 742 0
 1166 0034 0A43     		orrs	r2, r1
 1167 0036 1A60     		str	r2, [r3]
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 1168              		.loc 2 744 0
 1169 0038 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1170              		.loc 2 745 0
 1171 003c 0F23     		movs	r3, #15
 1172 003e FB18     		adds	r3, r7, r3
 1173 0040 1B78     		ldrb	r3, [r3]
 1174 0042 1800     		movs	r0, r3
 1175 0044 FFF7FEFF 		bl	CyExitCriticalSection
 1176              	.L84:
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 47


 1177              		.loc 2 747 0
 1178 0048 C046     		nop
 1179 004a BD46     		mov	sp, r7
 1180 004c 05B0     		add	sp, sp, #20
 1181              		@ sp needed
 1182 004e 90BD     		pop	{r4, r7, pc}
 1183              	.L86:
 1184              		.align	2
 1185              	.L85:
 1186 0050 0C020B40 		.word	1074463244
 1187              		.cfi_endproc
 1188              	.LFE11:
 1189              		.size	CySysClkSetLfclkSource, .-CySysClkSetLfclkSource
 1190              		.section	.text.CySysClkWcoStart,"ax",%progbits
 1191              		.align	2
 1192              		.global	CySysClkWcoStart
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CySysClkWcoStart, %function
 1196              	CySysClkWcoStart:
 1197              	.LFB12:
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 1198              		.loc 2 772 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 1, uses_anonymous_args = 0
 1202 0000 80B5     		push	{r7, lr}
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 48


 1208              		.loc 2 773 0
 1209 0004 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1210              		.loc 2 774 0
 1211 0008 044B     		ldr	r3, .L88
 1212 000a 044A     		ldr	r2, .L88
 1213 000c 1268     		ldr	r2, [r2]
 1214 000e 8021     		movs	r1, #128
 1215 0010 0906     		lsls	r1, r1, #24
 1216 0012 0A43     		orrs	r2, r1
 1217 0014 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 1218              		.loc 2 775 0
 1219 0016 C046     		nop
 1220 0018 BD46     		mov	sp, r7
 1221              		@ sp needed
 1222 001a 80BD     		pop	{r7, pc}
 1223              	.L89:
 1224              		.align	2
 1225              	.L88:
 1226 001c 00002240 		.word	1075970048
 1227              		.cfi_endproc
 1228              	.LFE12:
 1229              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 1230              		.section	.text.CySysClkWcoStop,"ax",%progbits
 1231              		.align	2
 1232              		.global	CySysClkWcoStop
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	CySysClkWcoStop, %function
 1236              	CySysClkWcoStop:
 1237              	.LFB13:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 1238              		.loc 2 790 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 8
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242 0000 90B5     		push	{r4, r7, lr}
 1243              		.cfi_def_cfa_offset 12
 1244              		.cfi_offset 4, -12
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 49


 1248              		.cfi_def_cfa_offset 24
 1249 0004 00AF     		add	r7, sp, #0
 1250              		.cfi_def_cfa_register 7
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1251              		.loc 2 795 0
 1252 0006 FFF7FEFF 		bl	CySysClkWcoEnabled
 1253 000a 031E     		subs	r3, r0, #0
 1254 000c 21D0     		beq	.L93
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 1255              		.loc 2 798 0
 1256 000e FFF7FEFF 		bl	CySysClkGetLfclkSource
 1257 0012 0200     		movs	r2, r0
 1258 0014 8023     		movs	r3, #128
 1259 0016 DB05     		lsls	r3, r3, #23
 1260 0018 9A42     		cmp	r2, r3
 1261 001a 14D1     		bne	.L92
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 1262              		.loc 2 800 0
 1263 001c FC1D     		adds	r4, r7, #7
 1264 001e FFF7FEFF 		bl	CyEnterCriticalSection
 1265 0022 0300     		movs	r3, r0
 1266 0024 2370     		strb	r3, [r4]
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 1267              		.loc 2 801 0
 1268 0026 FFF7FEFF 		bl	CySysClkLfclkPosedgeCatch
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 1269              		.loc 2 802 0
 1270 002a 0C4B     		ldr	r3, .L94
 1271 002c 0B4A     		ldr	r2, .L94
 1272 002e 1268     		ldr	r2, [r2]
 1273 0030 5200     		lsls	r2, r2, #1
 1274 0032 5208     		lsrs	r2, r2, #1
 1275 0034 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 1276              		.loc 2 803 0
 1277 0036 FFF7FEFF 		bl	CySysClkLfclkPosedgeRestore
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 1278              		.loc 2 804 0
 1279 003a FB1D     		adds	r3, r7, #7
 1280 003c 1B78     		ldrb	r3, [r3]
 1281 003e 1800     		movs	r0, r3
 1282 0040 FFF7FEFF 		bl	CyExitCriticalSection
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 50


 1283              		.loc 2 812 0
 1284 0044 05E0     		b	.L93
 1285              	.L92:
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 1286              		.loc 2 809 0
 1287 0046 054B     		ldr	r3, .L94
 1288 0048 044A     		ldr	r2, .L94
 1289 004a 1268     		ldr	r2, [r2]
 1290 004c 5200     		lsls	r2, r2, #1
 1291 004e 5208     		lsrs	r2, r2, #1
 1292 0050 1A60     		str	r2, [r3]
 1293              	.L93:
 1294              		.loc 2 812 0
 1295 0052 C046     		nop
 1296 0054 BD46     		mov	sp, r7
 1297 0056 03B0     		add	sp, sp, #12
 1298              		@ sp needed
 1299 0058 90BD     		pop	{r4, r7, pc}
 1300              	.L95:
 1301 005a C046     		.align	2
 1302              	.L94:
 1303 005c 00002240 		.word	1075970048
 1304              		.cfi_endproc
 1305              	.LFE13:
 1306              		.size	CySysClkWcoStop, .-CySysClkWcoStop
 1307              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 1308              		.align	2
 1309              		.global	CySysClkWcoEnabled
 1310              		.code	16
 1311              		.thumb_func
 1312              		.type	CySysClkWcoEnabled, %function
 1313              	CySysClkWcoEnabled:
 1314              	.LFB14:
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 1315              		.loc 2 825 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 1, uses_anonymous_args = 0
 1319 0000 80B5     		push	{r7, lr}
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 7, -8
 1322              		.cfi_offset 14, -4
 1323 0002 00AF     		add	r7, sp, #0
 1324              		.cfi_def_cfa_register 7
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 51


 1325              		.loc 2 826 0
 1326 0004 044B     		ldr	r3, .L100
 1327 0006 1B68     		ldr	r3, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 1328              		.loc 2 827 0
 1329 0008 002B     		cmp	r3, #0
 1330 000a 01DA     		bge	.L97
 1331              		.loc 2 827 0 is_stmt 0 discriminator 1
 1332 000c 0123     		movs	r3, #1
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 1333              		.loc 2 826 0 is_stmt 1 discriminator 1
 1334 000e 00E0     		b	.L99
 1335              	.L97:
 1336              		.loc 2 827 0 discriminator 2
 1337 0010 0023     		movs	r3, #0
 1338              	.L99:
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 1339              		.loc 2 829 0 discriminator 1
 1340 0012 1800     		movs	r0, r3
 1341 0014 BD46     		mov	sp, r7
 1342              		@ sp needed
 1343 0016 80BD     		pop	{r7, pc}
 1344              	.L101:
 1345              		.align	2
 1346              	.L100:
 1347 0018 00002240 		.word	1075970048
 1348              		.cfi_endproc
 1349              	.LFE14:
 1350              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 1351              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 1352              		.align	2
 1353              		.global	CySysClkWcoSetPowerMode
 1354              		.code	16
 1355              		.thumb_func
 1356              		.type	CySysClkWcoSetPowerMode, %function
 1357              	CySysClkWcoSetPowerMode:
 1358              	.LFB15:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 52


 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 1359              		.loc 2 852 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 16
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 7, -8
 1366              		.cfi_offset 14, -4
 1367 0002 84B0     		sub	sp, sp, #16
 1368              		.cfi_def_cfa_offset 24
 1369 0004 00AF     		add	r7, sp, #0
 1370              		.cfi_def_cfa_register 7
 1371 0006 7860     		str	r0, [r7, #4]
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 1372              		.loc 2 855 0
 1373 0008 094B     		ldr	r3, .L108
 1374 000a 1B68     		ldr	r3, [r3]
 1375 000c 0122     		movs	r2, #1
 1376 000e 1340     		ands	r3, r2
 1377 0010 FB60     		str	r3, [r7, #12]
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 1378              		.loc 2 857 0
 1379 0012 7B68     		ldr	r3, [r7, #4]
 1380 0014 002B     		cmp	r3, #0
 1381 0016 02D1     		bne	.L107
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 1382              		.loc 2 860 0
 1383 0018 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1384              		.loc 2 861 0
 1385 001c 03E0     		b	.L105
 1386              	.L107:
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 1387              		.loc 2 870 0
 1388 001e 0020     		movs	r0, #0
 1389 0020 FFF7FEFF 		bl	CyHalt
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1390              		.loc 2 871 0
 1391 0024 C046     		nop
 1392              	.L105:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 53


 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 1393              		.loc 2 874 0
 1394 0026 FB68     		ldr	r3, [r7, #12]
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 1395              		.loc 2 875 0
 1396 0028 1800     		movs	r0, r3
 1397 002a BD46     		mov	sp, r7
 1398 002c 04B0     		add	sp, sp, #16
 1399              		@ sp needed
 1400 002e 80BD     		pop	{r7, pc}
 1401              	.L109:
 1402              		.align	2
 1403              	.L108:
 1404 0030 00002240 		.word	1075970048
 1405              		.cfi_endproc
 1406              	.LFE15:
 1407              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 1408              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 1409              		.align	2
 1410              		.global	CySysClkWcoClockOutSelect
 1411              		.code	16
 1412              		.thumb_func
 1413              		.type	CySysClkWcoClockOutSelect, %function
 1414              	CySysClkWcoClockOutSelect:
 1415              	.LFB16:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 54


 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 1416              		.loc 2 919 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 80B5     		push	{r7, lr}
 1421              		.cfi_def_cfa_offset 8
 1422              		.cfi_offset 7, -8
 1423              		.cfi_offset 14, -4
 1424 0002 82B0     		sub	sp, sp, #8
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 1429              		.loc 2 920 0
 1430 0008 FFF7FEFF 		bl	CySysClkWcoEnabled
 1431 000c 031E     		subs	r3, r0, #0
 1432 000e 10D0     		beq	.L113
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 1433              		.loc 2 922 0
 1434 0010 7B68     		ldr	r3, [r7, #4]
 1435 0012 012B     		cmp	r3, #1
 1436 0014 0AD8     		bhi	.L112
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 1437              		.loc 2 924 0
 1438 0016 094B     		ldr	r3, .L114
 1439 0018 084A     		ldr	r2, .L114
 1440 001a 1268     		ldr	r2, [r2]
 1441 001c 0421     		movs	r1, #4
 1442 001e 8A43     		bics	r2, r1
 1443 0020 1100     		movs	r1, r2
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1444              		.loc 2 925 0
 1445 0022 7A68     		ldr	r2, [r7, #4]
 1446 0024 9200     		lsls	r2, r2, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 1447              		.loc 2 924 0
 1448 0026 0A43     		orrs	r2, r1
 1449 0028 1A60     		str	r2, [r3]
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 55


 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 1450              		.loc 2 932 0
 1451 002a 02E0     		b	.L113
 1452              	.L112:
 929:Generated_Source\PSoC4/CyLFClk.c ****             }
 1453              		.loc 2 929 0 discriminator 1
 1454 002c 0020     		movs	r0, #0
 1455 002e FFF7FEFF 		bl	CyHalt
 1456              	.L113:
 1457              		.loc 2 932 0
 1458 0032 C046     		nop
 1459 0034 BD46     		mov	sp, r7
 1460 0036 02B0     		add	sp, sp, #8
 1461              		@ sp needed
 1462 0038 80BD     		pop	{r7, pc}
 1463              	.L115:
 1464 003a C046     		.align	2
 1465              	.L114:
 1466 003c 00002240 		.word	1075970048
 1467              		.cfi_endproc
 1468              	.LFE16:
 1469              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 1470              		.section	.text.CySysWdtLock,"ax",%progbits
 1471              		.align	2
 1472              		.global	CySysWdtLock
 1473              		.code	16
 1474              		.thumb_func
 1475              		.type	CySysWdtLock, %function
 1476              	CySysWdtLock:
 1477              	.LFB17:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 1478              		.loc 2 949 0
 1479              		.cfi_startproc
 1480              		@ args = 0, pretend = 0, frame = 8
 1481              		@ frame_needed = 1, uses_anonymous_args = 0
 1482 0000 90B5     		push	{r4, r7, lr}
 1483              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 56


 1484              		.cfi_offset 4, -12
 1485              		.cfi_offset 7, -8
 1486              		.cfi_offset 14, -4
 1487 0002 83B0     		sub	sp, sp, #12
 1488              		.cfi_def_cfa_offset 24
 1489 0004 00AF     		add	r7, sp, #0
 1490              		.cfi_def_cfa_register 7
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1491              		.loc 2 951 0
 1492 0006 FC1D     		adds	r4, r7, #7
 1493 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1494 000c 0300     		movs	r3, r0
 1495 000e 2370     		strb	r3, [r4]
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 1496              		.loc 2 953 0
 1497 0010 074B     		ldr	r3, .L117
 1498 0012 074A     		ldr	r2, .L117
 1499 0014 1268     		ldr	r2, [r2]
 1500 0016 C021     		movs	r1, #192
 1501 0018 0902     		lsls	r1, r1, #8
 1502 001a 0A43     		orrs	r2, r1
 1503 001c 1A60     		str	r2, [r3]
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1504              		.loc 2 956 0
 1505 001e FB1D     		adds	r3, r7, #7
 1506 0020 1B78     		ldrb	r3, [r3]
 1507 0022 1800     		movs	r0, r3
 1508 0024 FFF7FEFF 		bl	CyExitCriticalSection
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 1509              		.loc 2 957 0
 1510 0028 C046     		nop
 1511 002a BD46     		mov	sp, r7
 1512 002c 03B0     		add	sp, sp, #12
 1513              		@ sp needed
 1514 002e 90BD     		pop	{r4, r7, pc}
 1515              	.L118:
 1516              		.align	2
 1517              	.L117:
 1518 0030 00010B40 		.word	1074462976
 1519              		.cfi_endproc
 1520              	.LFE17:
 1521              		.size	CySysWdtLock, .-CySysWdtLock
 1522              		.section	.text.CySysWdtLocked,"ax",%progbits
 1523              		.align	2
 1524              		.code	16
 1525              		.thumb_func
 1526              		.type	CySysWdtLocked, %function
 1527              	CySysWdtLocked:
 1528              	.LFB18:
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 57


 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 1529              		.loc 2 970 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533 0000 80B5     		push	{r7, lr}
 1534              		.cfi_def_cfa_offset 8
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 00AF     		add	r7, sp, #0
 1538              		.cfi_def_cfa_register 7
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 1539              		.loc 2 972 0
 1540 0004 054B     		ldr	r3, .L123
 1541 0006 1A68     		ldr	r2, [r3]
 1542 0008 C023     		movs	r3, #192
 1543 000a 1B02     		lsls	r3, r3, #8
 1544 000c 1340     		ands	r3, r2
 1545 000e 01D0     		beq	.L120
 1546              		.loc 2 972 0 is_stmt 0 discriminator 1
 1547 0010 0123     		movs	r3, #1
 1548 0012 00E0     		b	.L122
 1549              	.L120:
 1550              		.loc 2 972 0 discriminator 2
 1551 0014 0023     		movs	r3, #0
 1552              	.L122:
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 1553              		.loc 2 973 0 is_stmt 1 discriminator 5
 1554 0016 1800     		movs	r0, r3
 1555 0018 BD46     		mov	sp, r7
 1556              		@ sp needed
 1557 001a 80BD     		pop	{r7, pc}
 1558              	.L124:
 1559              		.align	2
 1560              	.L123:
 1561 001c 00010B40 		.word	1074462976
 1562              		.cfi_endproc
 1563              	.LFE18:
 1564              		.size	CySysWdtLocked, .-CySysWdtLocked
 1565              		.section	.text.CySysWdtUnlock,"ax",%progbits
 1566              		.align	2
 1567              		.global	CySysWdtUnlock
 1568              		.code	16
 1569              		.thumb_func
 1570              		.type	CySysWdtUnlock, %function
 1571              	CySysWdtUnlock:
 1572              	.LFB19:
 974:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 58


 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 1573              		.loc 2 984 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 8
 1576              		@ frame_needed = 1, uses_anonymous_args = 0
 1577 0000 90B5     		push	{r4, r7, lr}
 1578              		.cfi_def_cfa_offset 12
 1579              		.cfi_offset 4, -12
 1580              		.cfi_offset 7, -8
 1581              		.cfi_offset 14, -4
 1582 0002 83B0     		sub	sp, sp, #12
 1583              		.cfi_def_cfa_offset 24
 1584 0004 00AF     		add	r7, sp, #0
 1585              		.cfi_def_cfa_register 7
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1586              		.loc 2 986 0
 1587 0006 FC1D     		adds	r4, r7, #7
 1588 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1589 000c 0300     		movs	r3, r0
 1590 000e 2370     		strb	r3, [r4]
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1591              		.loc 2 989 0
 1592 0010 0D4B     		ldr	r3, .L126
 1593 0012 0D4A     		ldr	r2, .L126
 1594 0014 1268     		ldr	r2, [r2]
 1595 0016 0D49     		ldr	r1, .L126+4
 1596 0018 0A40     		ands	r2, r1
 1597 001a 8021     		movs	r1, #128
 1598 001c C901     		lsls	r1, r1, #7
 1599 001e 0A43     		orrs	r2, r1
 1600 0020 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 1601              		.loc 2 992 0
 1602 0022 094B     		ldr	r3, .L126
 1603 0024 084A     		ldr	r2, .L126
 1604 0026 1268     		ldr	r2, [r2]
 1605 0028 0849     		ldr	r1, .L126+4
 1606 002a 0A40     		ands	r2, r1
 1607 002c 8021     		movs	r1, #128
 1608 002e 0902     		lsls	r1, r1, #8
 1609 0030 0A43     		orrs	r2, r1
 1610 0032 1A60     		str	r2, [r3]
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 59


 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 1611              		.loc 2 995 0
 1612 0034 FB1D     		adds	r3, r7, #7
 1613 0036 1B78     		ldrb	r3, [r3]
 1614 0038 1800     		movs	r0, r3
 1615 003a FFF7FEFF 		bl	CyExitCriticalSection
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 1616              		.loc 2 996 0
 1617 003e C046     		nop
 1618 0040 BD46     		mov	sp, r7
 1619 0042 03B0     		add	sp, sp, #12
 1620              		@ sp needed
 1621 0044 90BD     		pop	{r4, r7, pc}
 1622              	.L127:
 1623 0046 C046     		.align	2
 1624              	.L126:
 1625 0048 00010B40 		.word	1074462976
 1626 004c FF3FFFFF 		.word	-49153
 1627              		.cfi_endproc
 1628              	.LFE19:
 1629              		.size	CySysWdtUnlock, .-CySysWdtUnlock
 1630              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1631              		.align	2
 1632              		.global	CySysWdtGetEnabledStatus
 1633              		.code	16
 1634              		.thumb_func
 1635              		.type	CySysWdtGetEnabledStatus, %function
 1636              	CySysWdtGetEnabledStatus:
 1637              	.LFB20:
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
 1638              		.loc 2 1018 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 8
 1641              		@ frame_needed = 1, uses_anonymous_args = 0
 1642 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 60


 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 7, -8
 1645              		.cfi_offset 14, -4
 1646 0002 82B0     		sub	sp, sp, #8
 1647              		.cfi_def_cfa_offset 16
 1648 0004 00AF     		add	r7, sp, #0
 1649              		.cfi_def_cfa_register 7
 1650 0006 7860     		str	r0, [r7, #4]
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1651              		.loc 2 1019 0
 1652 0008 7B68     		ldr	r3, [r7, #4]
 1653 000a 022B     		cmp	r3, #2
 1654 000c 02D9     		bls	.L129
 1655              		.loc 2 1019 0 is_stmt 0 discriminator 1
 1656 000e 0020     		movs	r0, #0
 1657 0010 FFF7FEFF 		bl	CyHalt
 1658              	.L129:
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
 1659              		.loc 2 1020 0 is_stmt 1
 1660 0014 064B     		ldr	r3, .L131
 1661 0016 1A68     		ldr	r2, [r3]
 1662 0018 7B68     		ldr	r3, [r7, #4]
 1663 001a DB00     		lsls	r3, r3, #3
 1664 001c 0133     		adds	r3, r3, #1
 1665 001e DA40     		lsrs	r2, r2, r3
 1666 0020 1300     		movs	r3, r2
 1667 0022 0122     		movs	r2, #1
 1668 0024 1340     		ands	r3, r2
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
 1669              		.loc 2 1021 0
 1670 0026 1800     		movs	r0, r3
 1671 0028 BD46     		mov	sp, r7
 1672 002a 02B0     		add	sp, sp, #8
 1673              		@ sp needed
 1674 002c 80BD     		pop	{r7, pc}
 1675              	.L132:
 1676 002e C046     		.align	2
 1677              	.L131:
 1678 0030 10020B40 		.word	1074463248
 1679              		.cfi_endproc
 1680              	.LFE20:
 1681              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1682              		.section	.text.CySysWdtSetMode,"ax",%progbits
 1683              		.align	2
 1684              		.global	CySysWdtSetMode
 1685              		.code	16
 1686              		.thumb_func
 1687              		.type	CySysWdtSetMode, %function
 1688              	CySysWdtSetMode:
 1689              	.LFB21:
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 61


1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
 1690              		.loc 2 1048 0
 1691              		.cfi_startproc
 1692              		@ args = 0, pretend = 0, frame = 16
 1693              		@ frame_needed = 1, uses_anonymous_args = 0
 1694 0000 80B5     		push	{r7, lr}
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 7, -8
 1697              		.cfi_offset 14, -4
 1698 0002 84B0     		sub	sp, sp, #16
 1699              		.cfi_def_cfa_offset 24
 1700 0004 00AF     		add	r7, sp, #0
 1701              		.cfi_def_cfa_register 7
 1702 0006 7860     		str	r0, [r7, #4]
 1703 0008 3960     		str	r1, [r7]
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
 1704              		.loc 2 1051 0
 1705 000a 7B68     		ldr	r3, [r7, #4]
 1706 000c 022B     		cmp	r3, #2
 1707 000e 02D9     		bls	.L134
 1708              		.loc 2 1051 0 is_stmt 0 discriminator 1
 1709 0010 0020     		movs	r0, #0
 1710 0012 FFF7FEFF 		bl	CyHalt
 1711              	.L134:
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1712              		.loc 2 1053 0 is_stmt 1
 1713 0016 7B68     		ldr	r3, [r7, #4]
 1714 0018 1800     		movs	r0, r3
 1715 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1716 001e 031E     		subs	r3, r0, #0
 1717 0020 16D1     		bne	.L136
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
 1718              		.loc 2 1055 0
 1719 0022 0D4B     		ldr	r3, .L137
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 62


 1720 0024 1B68     		ldr	r3, [r3]
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1721              		.loc 2 1056 0
 1722 0026 7A68     		ldr	r2, [r7, #4]
 1723 0028 D200     		lsls	r2, r2, #3
 1724 002a 0321     		movs	r1, #3
 1725 002c 9140     		lsls	r1, r1, r2
 1726 002e 0A00     		movs	r2, r1
 1727 0030 D243     		mvns	r2, r2
1055:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
 1728              		.loc 2 1055 0
 1729 0032 1340     		ands	r3, r2
 1730 0034 FB60     		str	r3, [r7, #12]
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
 1731              		.loc 2 1057 0
 1732 0036 3B68     		ldr	r3, [r7]
 1733 0038 0322     		movs	r2, #3
 1734 003a 1A40     		ands	r2, r3
 1735 003c 7B68     		ldr	r3, [r7, #4]
 1736 003e DB00     		lsls	r3, r3, #3
 1737 0040 9A40     		lsls	r2, r2, r3
 1738 0042 1300     		movs	r3, r2
 1739 0044 FA68     		ldr	r2, [r7, #12]
 1740 0046 1343     		orrs	r3, r2
 1741 0048 FB60     		str	r3, [r7, #12]
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1742              		.loc 2 1058 0
 1743 004a 034B     		ldr	r3, .L137
 1744 004c FA68     		ldr	r2, [r7, #12]
 1745 004e 1A60     		str	r2, [r3]
 1746              	.L136:
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
 1747              		.loc 2 1060 0
 1748 0050 C046     		nop
 1749 0052 BD46     		mov	sp, r7
 1750 0054 04B0     		add	sp, sp, #16
 1751              		@ sp needed
 1752 0056 80BD     		pop	{r7, pc}
 1753              	.L138:
 1754              		.align	2
 1755              	.L137:
 1756 0058 0C020B40 		.word	1074463244
 1757              		.cfi_endproc
 1758              	.LFE21:
 1759              		.size	CySysWdtSetMode, .-CySysWdtSetMode
 1760              		.section	.text.CySysWdtGetMode,"ax",%progbits
 1761              		.align	2
 1762              		.global	CySysWdtGetMode
 1763              		.code	16
 1764              		.thumb_func
 1765              		.type	CySysWdtGetMode, %function
 1766              	CySysWdtGetMode:
 1767              	.LFB22:
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 63


1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
 1768              		.loc 2 1076 0
 1769              		.cfi_startproc
 1770              		@ args = 0, pretend = 0, frame = 8
 1771              		@ frame_needed = 1, uses_anonymous_args = 0
 1772 0000 80B5     		push	{r7, lr}
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 82B0     		sub	sp, sp, #8
 1777              		.cfi_def_cfa_offset 16
 1778 0004 00AF     		add	r7, sp, #0
 1779              		.cfi_def_cfa_register 7
 1780 0006 7860     		str	r0, [r7, #4]
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
 1781              		.loc 2 1077 0
 1782 0008 054B     		ldr	r3, .L141
 1783 000a 1A68     		ldr	r2, [r3]
 1784 000c 7B68     		ldr	r3, [r7, #4]
 1785 000e DB00     		lsls	r3, r3, #3
 1786 0010 DA40     		lsrs	r2, r2, r3
 1787 0012 1300     		movs	r3, r2
 1788 0014 0322     		movs	r2, #3
 1789 0016 1340     		ands	r3, r2
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
 1790              		.loc 2 1078 0
 1791 0018 1800     		movs	r0, r3
 1792 001a BD46     		mov	sp, r7
 1793 001c 02B0     		add	sp, sp, #8
 1794              		@ sp needed
 1795 001e 80BD     		pop	{r7, pc}
 1796              	.L142:
 1797              		.align	2
 1798              	.L141:
 1799 0020 0C020B40 		.word	1074463244
 1800              		.cfi_endproc
 1801              	.LFE22:
 1802              		.size	CySysWdtGetMode, .-CySysWdtGetMode
 1803              		.section	.text.CySysWdtSetClearOnMatch,"ax",%progbits
 1804              		.align	2
 1805              		.global	CySysWdtSetClearOnMatch
 1806              		.code	16
 1807              		.thumb_func
 1808              		.type	CySysWdtSetClearOnMatch, %function
 1809              	CySysWdtSetClearOnMatch:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 64


 1810              	.LFB23:
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
 1811              		.loc 2 1105 0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 16
 1814              		@ frame_needed = 1, uses_anonymous_args = 0
 1815 0000 80B5     		push	{r7, lr}
 1816              		.cfi_def_cfa_offset 8
 1817              		.cfi_offset 7, -8
 1818              		.cfi_offset 14, -4
 1819 0002 84B0     		sub	sp, sp, #16
 1820              		.cfi_def_cfa_offset 24
 1821 0004 00AF     		add	r7, sp, #0
 1822              		.cfi_def_cfa_register 7
 1823 0006 7860     		str	r0, [r7, #4]
 1824 0008 3960     		str	r1, [r7]
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1825              		.loc 2 1108 0
 1826 000a 7B68     		ldr	r3, [r7, #4]
 1827 000c 002B     		cmp	r3, #0
 1828 000e 02D0     		beq	.L144
 1829              		.loc 2 1108 0 is_stmt 0 discriminator 2
 1830 0010 7B68     		ldr	r3, [r7, #4]
 1831 0012 012B     		cmp	r3, #1
 1832 0014 01D1     		bne	.L145
 1833              	.L144:
 1834              		.loc 2 1108 0 discriminator 3
 1835 0016 0123     		movs	r3, #1
 1836 0018 00E0     		b	.L146
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 65


 1837              	.L145:
 1838              		.loc 2 1108 0 discriminator 4
 1839 001a 0023     		movs	r3, #0
 1840              	.L146:
 1841              		.loc 2 1108 0 discriminator 6
 1842 001c 002B     		cmp	r3, #0
 1843 001e 02D1     		bne	.L147
 1844              		.loc 2 1108 0 discriminator 7
 1845 0020 0020     		movs	r0, #0
 1846 0022 FFF7FEFF 		bl	CyHalt
 1847              	.L147:
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
 1848              		.loc 2 1111 0 is_stmt 1
 1849 0026 7B68     		ldr	r3, [r7, #4]
 1850 0028 1800     		movs	r0, r3
 1851 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 1852 002e 031E     		subs	r3, r0, #0
 1853 0030 16D1     		bne	.L149
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
 1854              		.loc 2 1113 0
 1855 0032 0D4B     		ldr	r3, .L150
 1856 0034 1B68     		ldr	r3, [r3]
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1857              		.loc 2 1114 0
 1858 0036 7A68     		ldr	r2, [r7, #4]
 1859 0038 D200     		lsls	r2, r2, #3
 1860 003a 0232     		adds	r2, r2, #2
1113:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
 1861              		.loc 2 1113 0
 1862 003c 0121     		movs	r1, #1
 1863 003e 9140     		lsls	r1, r1, r2
 1864 0040 0A00     		movs	r2, r1
 1865 0042 D243     		mvns	r2, r2
 1866 0044 1340     		ands	r3, r2
 1867 0046 FB60     		str	r3, [r7, #12]
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
 1868              		.loc 2 1117 0
 1869 0048 7B68     		ldr	r3, [r7, #4]
 1870 004a DB00     		lsls	r3, r3, #3
 1871 004c 0233     		adds	r3, r3, #2
 1872 004e 3A68     		ldr	r2, [r7]
 1873 0050 9A40     		lsls	r2, r2, r3
 1874 0052 1300     		movs	r3, r2
 1875 0054 FA68     		ldr	r2, [r7, #12]
 1876 0056 1343     		orrs	r3, r2
 1877 0058 FB60     		str	r3, [r7, #12]
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 1878              		.loc 2 1119 0
 1879 005a 034B     		ldr	r3, .L150
 1880 005c FA68     		ldr	r2, [r7, #12]
 1881 005e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 66


 1882              	.L149:
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
 1883              		.loc 2 1121 0
 1884 0060 C046     		nop
 1885 0062 BD46     		mov	sp, r7
 1886 0064 04B0     		add	sp, sp, #16
 1887              		@ sp needed
 1888 0066 80BD     		pop	{r7, pc}
 1889              	.L151:
 1890              		.align	2
 1891              	.L150:
 1892 0068 0C020B40 		.word	1074463244
 1893              		.cfi_endproc
 1894              	.LFE23:
 1895              		.size	CySysWdtSetClearOnMatch, .-CySysWdtSetClearOnMatch
 1896              		.section	.text.CySysWdtGetClearOnMatch,"ax",%progbits
 1897              		.align	2
 1898              		.global	CySysWdtGetClearOnMatch
 1899              		.code	16
 1900              		.thumb_func
 1901              		.type	CySysWdtGetClearOnMatch, %function
 1902              	CySysWdtGetClearOnMatch:
 1903              	.LFB24:
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
 1904              		.loc 2 1138 0
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 8
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908 0000 80B5     		push	{r7, lr}
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 7, -8
 1911              		.cfi_offset 14, -4
 1912 0002 82B0     		sub	sp, sp, #8
 1913              		.cfi_def_cfa_offset 16
 1914 0004 00AF     		add	r7, sp, #0
 1915              		.cfi_def_cfa_register 7
 1916 0006 7860     		str	r0, [r7, #4]
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 1917              		.loc 2 1139 0
 1918 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 67


 1919 000a 002B     		cmp	r3, #0
 1920 000c 02D0     		beq	.L153
 1921              		.loc 2 1139 0 is_stmt 0 discriminator 2
 1922 000e 7B68     		ldr	r3, [r7, #4]
 1923 0010 012B     		cmp	r3, #1
 1924 0012 01D1     		bne	.L154
 1925              	.L153:
 1926              		.loc 2 1139 0 discriminator 3
 1927 0014 0123     		movs	r3, #1
 1928 0016 00E0     		b	.L155
 1929              	.L154:
 1930              		.loc 2 1139 0 discriminator 4
 1931 0018 0023     		movs	r3, #0
 1932              	.L155:
 1933              		.loc 2 1139 0 discriminator 6
 1934 001a 002B     		cmp	r3, #0
 1935 001c 02D1     		bne	.L156
 1936              		.loc 2 1139 0 discriminator 7
 1937 001e 0020     		movs	r0, #0
 1938 0020 FFF7FEFF 		bl	CyHalt
 1939              	.L156:
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
 1940              		.loc 2 1142 0 is_stmt 1
 1941 0024 064B     		ldr	r3, .L158
 1942 0026 1A68     		ldr	r2, [r3]
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1943              		.loc 2 1143 0
 1944 0028 7B68     		ldr	r3, [r7, #4]
 1945 002a DB00     		lsls	r3, r3, #3
 1946 002c 0233     		adds	r3, r3, #2
1142:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
 1947              		.loc 2 1142 0
 1948 002e DA40     		lsrs	r2, r2, r3
 1949 0030 1300     		movs	r3, r2
 1950 0032 0122     		movs	r2, #1
 1951 0034 1340     		ands	r3, r2
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
 1952              		.loc 2 1144 0
 1953 0036 1800     		movs	r0, r3
 1954 0038 BD46     		mov	sp, r7
 1955 003a 02B0     		add	sp, sp, #8
 1956              		@ sp needed
 1957 003c 80BD     		pop	{r7, pc}
 1958              	.L159:
 1959 003e C046     		.align	2
 1960              	.L158:
 1961 0040 0C020B40 		.word	1074463244
 1962              		.cfi_endproc
 1963              	.LFE24:
 1964              		.size	CySysWdtGetClearOnMatch, .-CySysWdtGetClearOnMatch
 1965              		.section	.text.CySysWdtEnable,"ax",%progbits
 1966              		.align	2
 1967              		.global	CySysWdtEnable
 1968              		.code	16
 1969              		.thumb_func
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 68


 1970              		.type	CySysWdtEnable, %function
 1971              	CySysWdtEnable:
 1972              	.LFB25:
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
 1973              		.loc 2 1179 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 8
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977 0000 80B5     		push	{r7, lr}
 1978              		.cfi_def_cfa_offset 8
 1979              		.cfi_offset 7, -8
 1980              		.cfi_offset 14, -4
 1981 0002 82B0     		sub	sp, sp, #8
 1982              		.cfi_def_cfa_offset 16
 1983 0004 00AF     		add	r7, sp, #0
 1984              		.cfi_def_cfa_register 7
 1985 0006 7860     		str	r0, [r7, #4]
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
 1986              		.loc 2 1184 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 69


 1987 0008 144B     		ldr	r3, .L168
 1988 000a 144A     		ldr	r2, .L168
 1989 000c 1168     		ldr	r1, [r2]
 1990 000e 7A68     		ldr	r2, [r7, #4]
 1991 0010 0A43     		orrs	r2, r1
 1992 0012 1A60     		str	r2, [r3]
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 1993              		.loc 2 1186 0
 1994 0014 7B68     		ldr	r3, [r7, #4]
 1995 0016 0122     		movs	r2, #1
 1996 0018 1340     		ands	r3, r2
 1997 001a 05D0     		beq	.L161
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 1998              		.loc 2 1188 0
 1999 001c C046     		nop
 2000              	.L162:
 2001              		.loc 2 1188 0 is_stmt 0 discriminator 1
 2002 001e 0020     		movs	r0, #0
 2003 0020 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2004 0024 031E     		subs	r3, r0, #0
 2005 0026 FAD0     		beq	.L162
 2006              	.L161:
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2007              		.loc 2 1194 0 is_stmt 1
 2008 0028 7A68     		ldr	r2, [r7, #4]
 2009 002a 8023     		movs	r3, #128
 2010 002c 5B00     		lsls	r3, r3, #1
 2011 002e 1340     		ands	r3, r2
 2012 0030 05D0     		beq	.L163
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2013              		.loc 2 1196 0
 2014 0032 C046     		nop
 2015              	.L164:
 2016              		.loc 2 1196 0 is_stmt 0 discriminator 1
 2017 0034 0120     		movs	r0, #1
 2018 0036 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2019 003a 031E     		subs	r3, r0, #0
 2020 003c FAD0     		beq	.L164
 2021              	.L163:
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2022              		.loc 2 1202 0 is_stmt 1
 2023 003e 7A68     		ldr	r2, [r7, #4]
 2024 0040 8023     		movs	r3, #128
 2025 0042 5B02     		lsls	r3, r3, #9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 70


 2026 0044 1340     		ands	r3, r2
 2027 0046 05D0     		beq	.L167
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2028              		.loc 2 1204 0
 2029 0048 C046     		nop
 2030              	.L166:
 2031              		.loc 2 1204 0 is_stmt 0 discriminator 1
 2032 004a 0220     		movs	r0, #2
 2033 004c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2034 0050 031E     		subs	r3, r0, #0
 2035 0052 FAD0     		beq	.L166
 2036              	.L167:
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
 2037              		.loc 2 1209 0 is_stmt 1
 2038 0054 C046     		nop
 2039 0056 BD46     		mov	sp, r7
 2040 0058 02B0     		add	sp, sp, #8
 2041              		@ sp needed
 2042 005a 80BD     		pop	{r7, pc}
 2043              	.L169:
 2044              		.align	2
 2045              	.L168:
 2046 005c 10020B40 		.word	1074463248
 2047              		.cfi_endproc
 2048              	.LFE25:
 2049              		.size	CySysWdtEnable, .-CySysWdtEnable
 2050              		.section	.text.CySysWdtDisable,"ax",%progbits
 2051              		.align	2
 2052              		.global	CySysWdtDisable
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	CySysWdtDisable, %function
 2056              	CySysWdtDisable:
 2057              	.LFB26:
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 71


 2058              		.loc 2 1227 0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 8
 2061              		@ frame_needed = 1, uses_anonymous_args = 0
 2062 0000 80B5     		push	{r7, lr}
 2063              		.cfi_def_cfa_offset 8
 2064              		.cfi_offset 7, -8
 2065              		.cfi_offset 14, -4
 2066 0002 82B0     		sub	sp, sp, #8
 2067              		.cfi_def_cfa_offset 16
 2068 0004 00AF     		add	r7, sp, #0
 2069              		.cfi_def_cfa_register 7
 2070 0006 7860     		str	r0, [r7, #4]
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
 2071              		.loc 2 1228 0
 2072 0008 FFF7FEFF 		bl	CySysWdtLocked
 2073 000c 031E     		subs	r3, r0, #0
 2074 000e 26D1     		bne	.L177
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
 2075              		.loc 2 1230 0
 2076 0010 154B     		ldr	r3, .L178
 2077 0012 154A     		ldr	r2, .L178
 2078 0014 1268     		ldr	r2, [r2]
 2079 0016 7968     		ldr	r1, [r7, #4]
 2080 0018 C943     		mvns	r1, r1
 2081 001a 0A40     		ands	r2, r1
 2082 001c 1A60     		str	r2, [r3]
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
 2083              		.loc 2 1232 0
 2084 001e 7B68     		ldr	r3, [r7, #4]
 2085 0020 0122     		movs	r2, #1
 2086 0022 1340     		ands	r3, r2
 2087 0024 05D0     		beq	.L172
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 2088              		.loc 2 1234 0
 2089 0026 C046     		nop
 2090              	.L173:
 2091              		.loc 2 1234 0 is_stmt 0 discriminator 1
 2092 0028 0020     		movs	r0, #0
 2093 002a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2094 002e 031E     		subs	r3, r0, #0
 2095 0030 FAD1     		bne	.L173
 2096              	.L172:
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
 2097              		.loc 2 1240 0 is_stmt 1
 2098 0032 7A68     		ldr	r2, [r7, #4]
 2099 0034 8023     		movs	r3, #128
 2100 0036 5B00     		lsls	r3, r3, #1
 2101 0038 1340     		ands	r3, r2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 72


 2102 003a 05D0     		beq	.L174
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 2103              		.loc 2 1242 0
 2104 003c C046     		nop
 2105              	.L175:
 2106              		.loc 2 1242 0 is_stmt 0 discriminator 1
 2107 003e 0120     		movs	r0, #1
 2108 0040 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2109 0044 031E     		subs	r3, r0, #0
 2110 0046 FAD1     		bne	.L175
 2111              	.L174:
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
 2112              		.loc 2 1248 0 is_stmt 1
 2113 0048 7A68     		ldr	r2, [r7, #4]
 2114 004a 8023     		movs	r3, #128
 2115 004c 5B02     		lsls	r3, r3, #9
 2116 004e 1340     		ands	r3, r2
 2117 0050 05D0     		beq	.L177
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2118              		.loc 2 1250 0
 2119 0052 C046     		nop
 2120              	.L176:
 2121              		.loc 2 1250 0 is_stmt 0 discriminator 1
 2122 0054 0220     		movs	r0, #2
 2123 0056 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2124 005a 031E     		subs	r3, r0, #0
 2125 005c FAD1     		bne	.L176
 2126              	.L177:
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
 2127              		.loc 2 1256 0 is_stmt 1
 2128 005e C046     		nop
 2129 0060 BD46     		mov	sp, r7
 2130 0062 02B0     		add	sp, sp, #8
 2131              		@ sp needed
 2132 0064 80BD     		pop	{r7, pc}
 2133              	.L179:
 2134 0066 C046     		.align	2
 2135              	.L178:
 2136 0068 10020B40 		.word	1074463248
 2137              		.cfi_endproc
 2138              	.LFE26:
 2139              		.size	CySysWdtDisable, .-CySysWdtDisable
 2140              		.section	.text.CySysWdtSetCascade,"ax",%progbits
 2141              		.align	2
 2142              		.global	CySysWdtSetCascade
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 73


 2143              		.code	16
 2144              		.thumb_func
 2145              		.type	CySysWdtSetCascade, %function
 2146              	CySysWdtSetCascade:
 2147              	.LFB27:
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
 2148              		.loc 2 1286 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 16
 2151              		@ frame_needed = 1, uses_anonymous_args = 0
 2152 0000 90B5     		push	{r4, r7, lr}
 2153              		.cfi_def_cfa_offset 12
 2154              		.cfi_offset 4, -12
 2155              		.cfi_offset 7, -8
 2156              		.cfi_offset 14, -4
 2157 0002 85B0     		sub	sp, sp, #20
 2158              		.cfi_def_cfa_offset 32
 2159 0004 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
 2161 0006 7860     		str	r0, [r7, #4]
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
 2162              		.loc 2 1290 0
 2163 0008 0020     		movs	r0, #0
 2164 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2165 000e 0400     		movs	r4, r0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 74


1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2166              		.loc 2 1291 0
 2167 0010 0120     		movs	r0, #1
 2168 0012 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2169 0016 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2170              		.loc 2 1290 0
 2171 0018 1C43     		orrs	r4, r3
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
 2172              		.loc 2 1292 0
 2173 001a 0220     		movs	r0, #2
 2174 001c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2175 0020 0300     		movs	r3, r0
1290:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
 2176              		.loc 2 1290 0
 2177 0022 2343     		orrs	r3, r4
 2178 0024 FB60     		str	r3, [r7, #12]
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 2179              		.loc 2 1294 0
 2180 0026 FB68     		ldr	r3, [r7, #12]
 2181 0028 002B     		cmp	r3, #0
 2182 002a 0DD1     		bne	.L182
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2183              		.loc 2 1296 0
 2184 002c 084B     		ldr	r3, .L183
 2185 002e 1B68     		ldr	r3, [r3]
 2186 0030 BB60     		str	r3, [r7, #8]
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
 2187              		.loc 2 1297 0
 2188 0032 BB68     		ldr	r3, [r7, #8]
 2189 0034 074A     		ldr	r2, .L183+4
 2190 0036 1340     		ands	r3, r2
 2191 0038 BB60     		str	r3, [r7, #8]
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
 2192              		.loc 2 1298 0
 2193 003a BA68     		ldr	r2, [r7, #8]
 2194 003c 7B68     		ldr	r3, [r7, #4]
 2195 003e 1343     		orrs	r3, r2
 2196 0040 BB60     		str	r3, [r7, #8]
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2197              		.loc 2 1299 0
 2198 0042 034B     		ldr	r3, .L183
 2199 0044 BA68     		ldr	r2, [r7, #8]
 2200 0046 1A60     		str	r2, [r3]
 2201              	.L182:
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
 2202              		.loc 2 1301 0
 2203 0048 C046     		nop
 2204 004a BD46     		mov	sp, r7
 2205 004c 05B0     		add	sp, sp, #20
 2206              		@ sp needed
 2207 004e 90BD     		pop	{r4, r7, pc}
 2208              	.L184:
 2209              		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 75


 2210              	.L183:
 2211 0050 0C020B40 		.word	1074463244
 2212 0054 F7F7FFFF 		.word	-2057
 2213              		.cfi_endproc
 2214              	.LFE27:
 2215              		.size	CySysWdtSetCascade, .-CySysWdtSetCascade
 2216              		.section	.text.CySysWdtGetCascade,"ax",%progbits
 2217              		.align	2
 2218              		.global	CySysWdtGetCascade
 2219              		.code	16
 2220              		.thumb_func
 2221              		.type	CySysWdtGetCascade, %function
 2222              	CySysWdtGetCascade:
 2223              	.LFB28:
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
 2224              		.loc 2 1317 0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 1, uses_anonymous_args = 0
 2228 0000 80B5     		push	{r7, lr}
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 00AF     		add	r7, sp, #0
 2233              		.cfi_def_cfa_register 7
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
 2234              		.loc 2 1318 0
 2235 0004 034B     		ldr	r3, .L187
 2236 0006 1B68     		ldr	r3, [r3]
 2237 0008 034A     		ldr	r2, .L187+4
 2238 000a 1340     		ands	r3, r2
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
 2239              		.loc 2 1319 0
 2240 000c 1800     		movs	r0, r3
 2241 000e BD46     		mov	sp, r7
 2242              		@ sp needed
 2243 0010 80BD     		pop	{r7, pc}
 2244              	.L188:
 2245 0012 C046     		.align	2
 2246              	.L187:
 2247 0014 0C020B40 		.word	1074463244
 2248 0018 08080000 		.word	2056
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 76


 2249              		.cfi_endproc
 2250              	.LFE28:
 2251              		.size	CySysWdtGetCascade, .-CySysWdtGetCascade
 2252              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 2253              		.align	2
 2254              		.global	CySysWdtSetMatch
 2255              		.code	16
 2256              		.thumb_func
 2257              		.type	CySysWdtSetMatch, %function
 2258              	CySysWdtSetMatch:
 2259              	.LFB29:
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
 2260              		.loc 2 1337 0
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 16
 2263              		@ frame_needed = 1, uses_anonymous_args = 0
 2264 0000 80B5     		push	{r7, lr}
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 84B0     		sub	sp, sp, #16
 2269              		.cfi_def_cfa_offset 24
 2270 0004 00AF     		add	r7, sp, #0
 2271              		.cfi_def_cfa_register 7
 2272 0006 7860     		str	r0, [r7, #4]
 2273 0008 3960     		str	r1, [r7]
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2274              		.loc 2 1340 0
 2275 000a 7B68     		ldr	r3, [r7, #4]
 2276 000c 002B     		cmp	r3, #0
 2277 000e 02D0     		beq	.L190
 2278              		.loc 2 1340 0 is_stmt 0 discriminator 2
 2279 0010 7B68     		ldr	r3, [r7, #4]
 2280 0012 012B     		cmp	r3, #1
 2281 0014 01D1     		bne	.L191
 2282              	.L190:
 2283              		.loc 2 1340 0 discriminator 3
 2284 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 77


 2285 0018 00E0     		b	.L192
 2286              	.L191:
 2287              		.loc 2 1340 0 discriminator 4
 2288 001a 0023     		movs	r3, #0
 2289              	.L192:
 2290              		.loc 2 1340 0 discriminator 6
 2291 001c 002B     		cmp	r3, #0
 2292 001e 02D1     		bne	.L193
 2293              		.loc 2 1340 0 discriminator 7
 2294 0020 0020     		movs	r0, #0
 2295 0022 FFF7FEFF 		bl	CyHalt
 2296              	.L193:
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
 2297              		.loc 2 1344 0 is_stmt 1
 2298 0026 174B     		ldr	r3, .L198
 2299 0028 1B68     		ldr	r3, [r3]
 2300 002a 9B0F     		lsrs	r3, r3, #30
 2301 002c 9B07     		lsls	r3, r3, #30
 2302 002e 01D1     		bne	.L194
 2303              		.loc 2 1344 0 is_stmt 0 discriminator 1
 2304 0030 C923     		movs	r3, #201
 2305 0032 00E0     		b	.L195
 2306              	.L194:
 2307              		.loc 2 1344 0 discriminator 2
 2308 0034 5D23     		movs	r3, #93
 2309              	.L195:
 2310              		.loc 2 1344 0 discriminator 4
 2311 0036 1800     		movs	r0, r3
 2312 0038 FFF7FEFF 		bl	CyDelayUs
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
 2313              		.loc 2 1346 0 is_stmt 1 discriminator 4
 2314 003c 124B     		ldr	r3, .L198+4
 2315 003e 1B68     		ldr	r3, [r3]
 2316 0040 FB60     		str	r3, [r7, #12]
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
 2317              		.loc 2 1347 0 discriminator 4
 2318 0042 7B68     		ldr	r3, [r7, #4]
 2319 0044 1B01     		lsls	r3, r3, #4
 2320 0046 114A     		ldr	r2, .L198+8
 2321 0048 9A40     		lsls	r2, r2, r3
 2322 004a 1300     		movs	r3, r2
 2323 004c DA43     		mvns	r2, r3
 2324 004e FB68     		ldr	r3, [r7, #12]
 2325 0050 1340     		ands	r3, r2
 2326 0052 FB60     		str	r3, [r7, #12]
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
 2327              		.loc 2 1348 0 discriminator 4
 2328 0054 0C4B     		ldr	r3, .L198+4
 2329 0056 7A68     		ldr	r2, [r7, #4]
 2330 0058 1201     		lsls	r2, r2, #4
 2331 005a 3968     		ldr	r1, [r7]
 2332 005c 9140     		lsls	r1, r1, r2
 2333 005e FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 78


 2334 0060 0A43     		orrs	r2, r1
 2335 0062 1A60     		str	r2, [r3]
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
 2336              		.loc 2 1351 0 discriminator 4
 2337 0064 074B     		ldr	r3, .L198
 2338 0066 1B68     		ldr	r3, [r3]
 2339 0068 9B0F     		lsrs	r3, r3, #30
 2340 006a 9B07     		lsls	r3, r3, #30
 2341 006c 01D1     		bne	.L196
 2342              		.loc 2 1351 0 is_stmt 0 discriminator 1
 2343 006e 4323     		movs	r3, #67
 2344 0070 00E0     		b	.L197
 2345              	.L196:
 2346              		.loc 2 1351 0 discriminator 2
 2347 0072 1F23     		movs	r3, #31
 2348              	.L197:
 2349              		.loc 2 1351 0 discriminator 4
 2350 0074 1800     		movs	r0, r3
 2351 0076 FFF7FEFF 		bl	CyDelayUs
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
 2352              		.loc 2 1352 0 is_stmt 1 discriminator 4
 2353 007a C046     		nop
 2354 007c BD46     		mov	sp, r7
 2355 007e 04B0     		add	sp, sp, #16
 2356              		@ sp needed
 2357 0080 80BD     		pop	{r7, pc}
 2358              	.L199:
 2359 0082 C046     		.align	2
 2360              	.L198:
 2361 0084 0C020B40 		.word	1074463244
 2362 0088 08020B40 		.word	1074463240
 2363 008c FFFF0000 		.word	65535
 2364              		.cfi_endproc
 2365              	.LFE29:
 2366              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 2367              		.section	.text.CySysWdtSetToggleBit,"ax",%progbits
 2368              		.align	2
 2369              		.global	CySysWdtSetToggleBit
 2370              		.code	16
 2371              		.thumb_func
 2372              		.type	CySysWdtSetToggleBit, %function
 2373              	CySysWdtSetToggleBit:
 2374              	.LFB30:
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 79


1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
 2375              		.loc 2 1376 0
 2376              		.cfi_startproc
 2377              		@ args = 0, pretend = 0, frame = 16
 2378              		@ frame_needed = 1, uses_anonymous_args = 0
 2379 0000 80B5     		push	{r7, lr}
 2380              		.cfi_def_cfa_offset 8
 2381              		.cfi_offset 7, -8
 2382              		.cfi_offset 14, -4
 2383 0002 84B0     		sub	sp, sp, #16
 2384              		.cfi_def_cfa_offset 24
 2385 0004 00AF     		add	r7, sp, #0
 2386              		.cfi_def_cfa_register 7
 2387 0006 7860     		str	r0, [r7, #4]
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 2388              		.loc 2 1379 0
 2389 0008 0220     		movs	r0, #2
 2390 000a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 2391 000e 031E     		subs	r3, r0, #0
 2392 0010 11D1     		bne	.L202
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
 2393              		.loc 2 1381 0
 2394 0012 0B4B     		ldr	r3, .L203
 2395 0014 1B68     		ldr	r3, [r3]
 2396 0016 FB60     		str	r3, [r7, #12]
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
 2397              		.loc 2 1382 0
 2398 0018 FB68     		ldr	r3, [r7, #12]
 2399 001a 0A4A     		ldr	r2, .L203+4
 2400 001c 1340     		ands	r3, r2
 2401 001e FB60     		str	r3, [r7, #12]
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
 2402              		.loc 2 1383 0
 2403 0020 7B68     		ldr	r3, [r7, #4]
 2404 0022 1A06     		lsls	r2, r3, #24
 2405 0024 F823     		movs	r3, #248
 2406 0026 5B05     		lsls	r3, r3, #21
 2407 0028 1340     		ands	r3, r2
 2408 002a FA68     		ldr	r2, [r7, #12]
 2409 002c 1343     		orrs	r3, r2
 2410 002e FB60     		str	r3, [r7, #12]
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
 2411              		.loc 2 1384 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 80


 2412 0030 034B     		ldr	r3, .L203
 2413 0032 FA68     		ldr	r2, [r7, #12]
 2414 0034 1A60     		str	r2, [r3]
 2415              	.L202:
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
 2416              		.loc 2 1386 0
 2417 0036 C046     		nop
 2418 0038 BD46     		mov	sp, r7
 2419 003a 04B0     		add	sp, sp, #16
 2420              		@ sp needed
 2421 003c 80BD     		pop	{r7, pc}
 2422              	.L204:
 2423 003e C046     		.align	2
 2424              	.L203:
 2425 0040 0C020B40 		.word	1074463244
 2426 0044 FFFFFFE0 		.word	-520093697
 2427              		.cfi_endproc
 2428              	.LFE30:
 2429              		.size	CySysWdtSetToggleBit, .-CySysWdtSetToggleBit
 2430              		.section	.text.CySysWdtGetToggleBit,"ax",%progbits
 2431              		.align	2
 2432              		.global	CySysWdtGetToggleBit
 2433              		.code	16
 2434              		.thumb_func
 2435              		.type	CySysWdtGetToggleBit, %function
 2436              	CySysWdtGetToggleBit:
 2437              	.LFB31:
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
 2438              		.loc 2 1399 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 1, uses_anonymous_args = 0
 2442 0000 80B5     		push	{r7, lr}
 2443              		.cfi_def_cfa_offset 8
 2444              		.cfi_offset 7, -8
 2445              		.cfi_offset 14, -4
 2446 0002 00AF     		add	r7, sp, #0
 2447              		.cfi_def_cfa_register 7
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
 2448              		.loc 2 1400 0
 2449 0004 034B     		ldr	r3, .L207
 2450 0006 1B68     		ldr	r3, [r3]
 2451 0008 1B0E     		lsrs	r3, r3, #24
 2452 000a 1F22     		movs	r2, #31
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 81


 2453 000c 1340     		ands	r3, r2
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
 2454              		.loc 2 1401 0
 2455 000e 1800     		movs	r0, r3
 2456 0010 BD46     		mov	sp, r7
 2457              		@ sp needed
 2458 0012 80BD     		pop	{r7, pc}
 2459              	.L208:
 2460              		.align	2
 2461              	.L207:
 2462 0014 0C020B40 		.word	1074463244
 2463              		.cfi_endproc
 2464              	.LFE31:
 2465              		.size	CySysWdtGetToggleBit, .-CySysWdtGetToggleBit
 2466              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 2467              		.align	2
 2468              		.global	CySysWdtGetMatch
 2469              		.code	16
 2470              		.thumb_func
 2471              		.type	CySysWdtGetMatch, %function
 2472              	CySysWdtGetMatch:
 2473              	.LFB32:
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
 2474              		.loc 2 1417 0
 2475              		.cfi_startproc
 2476              		@ args = 0, pretend = 0, frame = 8
 2477              		@ frame_needed = 1, uses_anonymous_args = 0
 2478 0000 80B5     		push	{r7, lr}
 2479              		.cfi_def_cfa_offset 8
 2480              		.cfi_offset 7, -8
 2481              		.cfi_offset 14, -4
 2482 0002 82B0     		sub	sp, sp, #8
 2483              		.cfi_def_cfa_offset 16
 2484 0004 00AF     		add	r7, sp, #0
 2485              		.cfi_def_cfa_register 7
 2486 0006 7860     		str	r0, [r7, #4]
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
 2487              		.loc 2 1418 0
 2488 0008 7B68     		ldr	r3, [r7, #4]
 2489 000a 002B     		cmp	r3, #0
 2490 000c 02D0     		beq	.L210
 2491              		.loc 2 1418 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 82


 2492 000e 7B68     		ldr	r3, [r7, #4]
 2493 0010 012B     		cmp	r3, #1
 2494 0012 01D1     		bne	.L211
 2495              	.L210:
 2496              		.loc 2 1418 0 discriminator 3
 2497 0014 0123     		movs	r3, #1
 2498 0016 00E0     		b	.L212
 2499              	.L211:
 2500              		.loc 2 1418 0 discriminator 4
 2501 0018 0023     		movs	r3, #0
 2502              	.L212:
 2503              		.loc 2 1418 0 discriminator 6
 2504 001a 002B     		cmp	r3, #0
 2505 001c 02D1     		bne	.L213
 2506              		.loc 2 1418 0 discriminator 7
 2507 001e 0020     		movs	r0, #0
 2508 0020 FFF7FEFF 		bl	CyHalt
 2509              	.L213:
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
 2510              		.loc 2 1421 0 is_stmt 1
 2511 0024 054B     		ldr	r3, .L215
 2512 0026 1A68     		ldr	r2, [r3]
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2513              		.loc 2 1422 0
 2514 0028 7B68     		ldr	r3, [r7, #4]
 2515 002a 1B01     		lsls	r3, r3, #4
1421:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
 2516              		.loc 2 1421 0
 2517 002c DA40     		lsrs	r2, r2, r3
 2518 002e 1300     		movs	r3, r2
 2519 0030 1B04     		lsls	r3, r3, #16
 2520 0032 1B0C     		lsrs	r3, r3, #16
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
 2521              		.loc 2 1423 0
 2522 0034 1800     		movs	r0, r3
 2523 0036 BD46     		mov	sp, r7
 2524 0038 02B0     		add	sp, sp, #8
 2525              		@ sp needed
 2526 003a 80BD     		pop	{r7, pc}
 2527              	.L216:
 2528              		.align	2
 2529              	.L215:
 2530 003c 08020B40 		.word	1074463240
 2531              		.cfi_endproc
 2532              	.LFE32:
 2533              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 2534              		.section	.text.CySysWdtGetCount,"ax",%progbits
 2535              		.align	2
 2536              		.global	CySysWdtGetCount
 2537              		.code	16
 2538              		.thumb_func
 2539              		.type	CySysWdtGetCount, %function
 2540              	CySysWdtGetCount:
 2541              	.LFB33:
1424:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 83


1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
 2542              		.loc 2 1439 0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 16
 2545              		@ frame_needed = 1, uses_anonymous_args = 0
 2546 0000 80B5     		push	{r7, lr}
 2547              		.cfi_def_cfa_offset 8
 2548              		.cfi_offset 7, -8
 2549              		.cfi_offset 14, -4
 2550 0002 84B0     		sub	sp, sp, #16
 2551              		.cfi_def_cfa_offset 24
 2552 0004 00AF     		add	r7, sp, #0
 2553              		.cfi_def_cfa_register 7
 2554 0006 7860     		str	r0, [r7, #4]
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
 2555              		.loc 2 1440 0
 2556 0008 0023     		movs	r3, #0
 2557 000a FB60     		str	r3, [r7, #12]
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 2558              		.loc 2 1442 0
 2559 000c 7B68     		ldr	r3, [r7, #4]
 2560 000e 012B     		cmp	r3, #1
 2561 0010 09D0     		beq	.L219
 2562 0012 02D3     		bcc	.L220
 2563 0014 022B     		cmp	r3, #2
 2564 0016 0BD0     		beq	.L221
 2565 0018 0EE0     		b	.L224
 2566              	.L220:
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
 2567              		.loc 2 1446 0
 2568 001a 0C4B     		ldr	r3, .L225
 2569 001c 1B68     		ldr	r3, [r3]
 2570 001e 1B04     		lsls	r3, r3, #16
 2571 0020 1B0C     		lsrs	r3, r3, #16
 2572 0022 FB60     		str	r3, [r7, #12]
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2573              		.loc 2 1447 0
 2574 0024 0CE0     		b	.L222
 2575              	.L219:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 84


1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
 2576              		.loc 2 1451 0
 2577 0026 094B     		ldr	r3, .L225
 2578 0028 1B68     		ldr	r3, [r3]
 2579 002a 1B0C     		lsrs	r3, r3, #16
 2580 002c FB60     		str	r3, [r7, #12]
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2581              		.loc 2 1452 0
 2582 002e 07E0     		b	.L222
 2583              	.L221:
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
 2584              		.loc 2 1456 0
 2585 0030 074B     		ldr	r3, .L225+4
 2586 0032 1B68     		ldr	r3, [r3]
 2587 0034 FB60     		str	r3, [r7, #12]
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2588              		.loc 2 1457 0
 2589 0036 03E0     		b	.L222
 2590              	.L224:
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 2591              		.loc 2 1460 0
 2592 0038 0020     		movs	r0, #0
 2593 003a FFF7FEFF 		bl	CyHalt
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
 2594              		.loc 2 1461 0
 2595 003e C046     		nop
 2596              	.L222:
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
 2597              		.loc 2 1464 0
 2598 0040 FB68     		ldr	r3, [r7, #12]
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
 2599              		.loc 2 1465 0
 2600 0042 1800     		movs	r0, r3
 2601 0044 BD46     		mov	sp, r7
 2602 0046 04B0     		add	sp, sp, #16
 2603              		@ sp needed
 2604 0048 80BD     		pop	{r7, pc}
 2605              	.L226:
 2606 004a C046     		.align	2
 2607              	.L225:
 2608 004c 00020B40 		.word	1074463232
 2609 0050 04020B40 		.word	1074463236
 2610              		.cfi_endproc
 2611              	.LFE33:
 2612              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 2613              		.section	.text.CySysWdtGetInterruptSource,"ax",%progbits
 2614              		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 85


 2615              		.global	CySysWdtGetInterruptSource
 2616              		.code	16
 2617              		.thumb_func
 2618              		.type	CySysWdtGetInterruptSource, %function
 2619              	CySysWdtGetInterruptSource:
 2620              	.LFB34:
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
 2621              		.loc 2 1482 0
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 0
 2624              		@ frame_needed = 1, uses_anonymous_args = 0
 2625 0000 80B5     		push	{r7, lr}
 2626              		.cfi_def_cfa_offset 8
 2627              		.cfi_offset 7, -8
 2628              		.cfi_offset 14, -4
 2629 0002 00AF     		add	r7, sp, #0
 2630              		.cfi_def_cfa_register 7
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
 2631              		.loc 2 1483 0
 2632 0004 034B     		ldr	r3, .L229
 2633 0006 1B68     		ldr	r3, [r3]
 2634 0008 034A     		ldr	r2, .L229+4
 2635 000a 1340     		ands	r3, r2
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
 2636              		.loc 2 1484 0
 2637 000c 1800     		movs	r0, r3
 2638 000e BD46     		mov	sp, r7
 2639              		@ sp needed
 2640 0010 80BD     		pop	{r7, pc}
 2641              	.L230:
 2642 0012 C046     		.align	2
 2643              	.L229:
 2644 0014 10020B40 		.word	1074463248
 2645 0018 04040400 		.word	263172
 2646              		.cfi_endproc
 2647              	.LFE34:
 2648              		.size	CySysWdtGetInterruptSource, .-CySysWdtGetInterruptSource
 2649              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 2650              		.align	2
 2651              		.global	CySysWdtClearInterrupt
 2652              		.code	16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 86


 2653              		.thumb_func
 2654              		.type	CySysWdtClearInterrupt, %function
 2655              	CySysWdtClearInterrupt:
 2656              	.LFB35:
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
 2657              		.loc 2 1511 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 16
 2660              		@ frame_needed = 1, uses_anonymous_args = 0
 2661 0000 90B5     		push	{r4, r7, lr}
 2662              		.cfi_def_cfa_offset 12
 2663              		.cfi_offset 4, -12
 2664              		.cfi_offset 7, -8
 2665              		.cfi_offset 14, -4
 2666 0002 85B0     		sub	sp, sp, #20
 2667              		.cfi_def_cfa_offset 32
 2668 0004 00AF     		add	r7, sp, #0
 2669              		.cfi_def_cfa_register 7
 2670 0006 7860     		str	r0, [r7, #4]
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 2671              		.loc 2 1515 0
 2672 0008 0B23     		movs	r3, #11
 2673 000a FC18     		adds	r4, r7, r3
 2674 000c FFF7FEFF 		bl	CyEnterCriticalSection
 2675 0010 0300     		movs	r3, r0
 2676 0012 2370     		strb	r3, [r4]
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 87


 2677              		.loc 2 1517 0
 2678 0014 FFF7FEFF 		bl	CySysWdtLocked
 2679 0018 031E     		subs	r3, r0, #0
 2680 001a 04D0     		beq	.L232
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
 2681              		.loc 2 1519 0
 2682 001c 0123     		movs	r3, #1
 2683 001e FB60     		str	r3, [r7, #12]
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
 2684              		.loc 2 1520 0
 2685 0020 FFF7FEFF 		bl	CySysWdtUnlock
 2686 0024 01E0     		b	.L233
 2687              	.L232:
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
 2688              		.loc 2 1524 0
 2689 0026 0023     		movs	r3, #0
 2690 0028 FB60     		str	r3, [r7, #12]
 2691              	.L233:
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
 2692              		.loc 2 1528 0
 2693 002a 7B68     		ldr	r3, [r7, #4]
 2694 002c 0D4A     		ldr	r2, .L235
 2695 002e 1340     		ands	r3, r2
 2696 0030 7B60     		str	r3, [r7, #4]
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
 2697              		.loc 2 1532 0
 2698 0032 0D4B     		ldr	r3, .L235+4
 2699 0034 0C4A     		ldr	r2, .L235+4
 2700 0036 1268     		ldr	r2, [r2]
 2701 0038 0C49     		ldr	r1, .L235+8
 2702 003a 1140     		ands	r1, r2
 2703 003c 7A68     		ldr	r2, [r7, #4]
 2704 003e 0A43     		orrs	r2, r1
 2705 0040 1A60     		str	r2, [r3]
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
 2706              		.loc 2 1539 0
 2707 0042 094B     		ldr	r3, .L235+4
 2708 0044 1B68     		ldr	r3, [r3]
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
 2709              		.loc 2 1541 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 88


 2710 0046 FB68     		ldr	r3, [r7, #12]
 2711 0048 012B     		cmp	r3, #1
 2712 004a 01D1     		bne	.L234
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
 2713              		.loc 2 1543 0
 2714 004c FFF7FEFF 		bl	CySysWdtLock
 2715              	.L234:
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 2716              		.loc 2 1546 0
 2717 0050 0B23     		movs	r3, #11
 2718 0052 FB18     		adds	r3, r7, r3
 2719 0054 1B78     		ldrb	r3, [r3]
 2720 0056 1800     		movs	r0, r3
 2721 0058 FFF7FEFF 		bl	CyExitCriticalSection
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
 2722              		.loc 2 1547 0
 2723 005c C046     		nop
 2724 005e BD46     		mov	sp, r7
 2725 0060 05B0     		add	sp, sp, #20
 2726              		@ sp needed
 2727 0062 90BD     		pop	{r4, r7, pc}
 2728              	.L236:
 2729              		.align	2
 2730              	.L235:
 2731 0064 04040400 		.word	263172
 2732 0068 10020B40 		.word	1074463248
 2733 006c FBFBFBFF 		.word	-263173
 2734              		.cfi_endproc
 2735              	.LFE35:
 2736              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 2737              		.section	.text.CySysWdtResetCounters,"ax",%progbits
 2738              		.align	2
 2739              		.global	CySysWdtResetCounters
 2740              		.code	16
 2741              		.thumb_func
 2742              		.type	CySysWdtResetCounters, %function
 2743              	CySysWdtResetCounters:
 2744              	.LFB36:
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 89


1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
 2745              		.loc 2 1569 0
 2746              		.cfi_startproc
 2747              		@ args = 0, pretend = 0, frame = 8
 2748              		@ frame_needed = 1, uses_anonymous_args = 0
 2749 0000 80B5     		push	{r7, lr}
 2750              		.cfi_def_cfa_offset 8
 2751              		.cfi_offset 7, -8
 2752              		.cfi_offset 14, -4
 2753 0002 82B0     		sub	sp, sp, #8
 2754              		.cfi_def_cfa_offset 16
 2755 0004 00AF     		add	r7, sp, #0
 2756              		.cfi_def_cfa_register 7
 2757 0006 7860     		str	r0, [r7, #4]
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
 2758              		.loc 2 1571 0
 2759 0008 084B     		ldr	r3, .L239
 2760 000a 084A     		ldr	r2, .L239
 2761 000c 1168     		ldr	r1, [r2]
 2762 000e 7A68     		ldr	r2, [r7, #4]
 2763 0010 0748     		ldr	r0, .L239+4
 2764 0012 0240     		ands	r2, r0
 2765 0014 0A43     		orrs	r2, r1
 2766 0016 1A60     		str	r2, [r3]
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
 2767              		.loc 2 1573 0
 2768 0018 C046     		nop
 2769              	.L238:
 2770              		.loc 2 1573 0 is_stmt 0 discriminator 1
 2771 001a 044B     		ldr	r3, .L239
 2772 001c 1B68     		ldr	r3, [r3]
 2773 001e 044A     		ldr	r2, .L239+4
 2774 0020 1340     		ands	r3, r2
 2775 0022 FAD1     		bne	.L238
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
 2776              		.loc 2 1577 0 is_stmt 1
 2777 0024 C046     		nop
 2778 0026 BD46     		mov	sp, r7
 2779 0028 02B0     		add	sp, sp, #8
 2780              		@ sp needed
 2781 002a 80BD     		pop	{r7, pc}
 2782              	.L240:
 2783              		.align	2
 2784              	.L239:
 2785 002c 10020B40 		.word	1074463248
 2786 0030 08080800 		.word	526344
 2787              		.cfi_endproc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 90


 2788              	.LFE36:
 2789              		.size	CySysWdtResetCounters, .-CySysWdtResetCounters
 2790              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 2791              		.align	2
 2792              		.global	CySysWdtSetInterruptCallback
 2793              		.code	16
 2794              		.thumb_func
 2795              		.type	CySysWdtSetInterruptCallback, %function
 2796              	CySysWdtSetInterruptCallback:
 2797              	.LFB37:
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
 2798              		.loc 2 1595 0
 2799              		.cfi_startproc
 2800              		@ args = 0, pretend = 0, frame = 16
 2801              		@ frame_needed = 1, uses_anonymous_args = 0
 2802 0000 80B5     		push	{r7, lr}
 2803              		.cfi_def_cfa_offset 8
 2804              		.cfi_offset 7, -8
 2805              		.cfi_offset 14, -4
 2806 0002 84B0     		sub	sp, sp, #16
 2807              		.cfi_def_cfa_offset 24
 2808 0004 00AF     		add	r7, sp, #0
 2809              		.cfi_def_cfa_register 7
 2810 0006 7860     		str	r0, [r7, #4]
 2811 0008 3960     		str	r1, [r7]
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
 2812              		.loc 2 1596 0
 2813 000a 0023     		movs	r3, #0
 2814 000c FB60     		str	r3, [r7, #12]
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2815              		.loc 2 1598 0
 2816 000e 7B68     		ldr	r3, [r7, #4]
 2817 0010 022B     		cmp	r3, #2
 2818 0012 0AD8     		bhi	.L242
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
 2819              		.loc 2 1600 0
 2820 0014 094B     		ldr	r3, .L245
 2821 0016 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 91


 2822 0018 9200     		lsls	r2, r2, #2
 2823 001a D358     		ldr	r3, [r2, r3]
 2824 001c FB60     		str	r3, [r7, #12]
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
 2825              		.loc 2 1601 0
 2826 001e 074B     		ldr	r3, .L245
 2827 0020 7A68     		ldr	r2, [r7, #4]
 2828 0022 9200     		lsls	r2, r2, #2
 2829 0024 3968     		ldr	r1, [r7]
 2830 0026 D150     		str	r1, [r2, r3]
 2831 0028 02E0     		b	.L243
 2832              	.L242:
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2833              		.loc 2 1605 0 discriminator 1
 2834 002a 0020     		movs	r0, #0
 2835 002c FFF7FEFF 		bl	CyHalt
 2836              	.L243:
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
 2837              		.loc 2 1608 0
 2838 0030 FB68     		ldr	r3, [r7, #12]
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
 2839              		.loc 2 1609 0
 2840 0032 1800     		movs	r0, r3
 2841 0034 BD46     		mov	sp, r7
 2842 0036 04B0     		add	sp, sp, #16
 2843              		@ sp needed
 2844 0038 80BD     		pop	{r7, pc}
 2845              	.L246:
 2846 003a C046     		.align	2
 2847              	.L245:
 2848 003c 0C000000 		.word	cySysWdtCallback
 2849              		.cfi_endproc
 2850              	.LFE37:
 2851              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 2852              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 2853              		.align	2
 2854              		.global	CySysWdtGetInterruptCallback
 2855              		.code	16
 2856              		.thumb_func
 2857              		.type	CySysWdtGetInterruptCallback, %function
 2858              	CySysWdtGetInterruptCallback:
 2859              	.LFB38:
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 92


1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
 2860              		.loc 2 1625 0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 16
 2863              		@ frame_needed = 1, uses_anonymous_args = 0
 2864 0000 80B5     		push	{r7, lr}
 2865              		.cfi_def_cfa_offset 8
 2866              		.cfi_offset 7, -8
 2867              		.cfi_offset 14, -4
 2868 0002 84B0     		sub	sp, sp, #16
 2869              		.cfi_def_cfa_offset 24
 2870 0004 00AF     		add	r7, sp, #0
 2871              		.cfi_def_cfa_register 7
 2872 0006 7860     		str	r0, [r7, #4]
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
 2873              		.loc 2 1626 0
 2874 0008 0023     		movs	r3, #0
 2875 000a FB60     		str	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
 2876              		.loc 2 1628 0
 2877 000c 7B68     		ldr	r3, [r7, #4]
 2878 000e 022B     		cmp	r3, #2
 2879 0010 05D8     		bhi	.L248
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
 2880              		.loc 2 1630 0
 2881 0012 074B     		ldr	r3, .L251
 2882 0014 7A68     		ldr	r2, [r7, #4]
 2883 0016 9200     		lsls	r2, r2, #2
 2884 0018 D358     		ldr	r3, [r2, r3]
 2885 001a FB60     		str	r3, [r7, #12]
 2886 001c 02E0     		b	.L249
 2887              	.L248:
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 2888              		.loc 2 1634 0 discriminator 1
 2889 001e 0020     		movs	r0, #0
 2890 0020 FFF7FEFF 		bl	CyHalt
 2891              	.L249:
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
 2892              		.loc 2 1637 0
 2893 0024 FB68     		ldr	r3, [r7, #12]
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
 2894              		.loc 2 1638 0
 2895 0026 1800     		movs	r0, r3
 2896 0028 BD46     		mov	sp, r7
 2897 002a 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 93


 2898              		@ sp needed
 2899 002c 80BD     		pop	{r7, pc}
 2900              	.L252:
 2901 002e C046     		.align	2
 2902              	.L251:
 2903 0030 0C000000 		.word	cySysWdtCallback
 2904              		.cfi_endproc
 2905              	.LFE38:
 2906              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 2907              		.section	.text.CySysWdtEnableCounterIsr,"ax",%progbits
 2908              		.align	2
 2909              		.global	CySysWdtEnableCounterIsr
 2910              		.code	16
 2911              		.thumb_func
 2912              		.type	CySysWdtEnableCounterIsr, %function
 2913              	CySysWdtEnableCounterIsr:
 2914              	.LFB39:
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
 2915              		.loc 2 1654 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 8
 2918              		@ frame_needed = 1, uses_anonymous_args = 0
 2919 0000 80B5     		push	{r7, lr}
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 7, -8
 2922              		.cfi_offset 14, -4
 2923 0002 82B0     		sub	sp, sp, #8
 2924              		.cfi_def_cfa_offset 16
 2925 0004 00AF     		add	r7, sp, #0
 2926              		.cfi_def_cfa_register 7
 2927 0006 7860     		str	r0, [r7, #4]
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2928              		.loc 2 1655 0
 2929 0008 7B68     		ldr	r3, [r7, #4]
 2930 000a 022B     		cmp	r3, #2
 2931 000c 13D8     		bhi	.L254
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
 2932              		.loc 2 1657 0
 2933 000e 0D4B     		ldr	r3, .L257
 2934 0010 7A68     		ldr	r2, [r7, #4]
 2935 0012 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 94


 2936 0014 D358     		ldr	r3, [r2, r3]
 2937 0016 DA43     		mvns	r2, r3
 2938 0018 0B4B     		ldr	r3, .L257+4
 2939 001a 1B68     		ldr	r3, [r3]
 2940 001c 1A40     		ands	r2, r3
 2941 001e 0A4B     		ldr	r3, .L257+4
 2942 0020 1A60     		str	r2, [r3]
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
 2943              		.loc 2 1658 0
 2944 0022 084B     		ldr	r3, .L257
 2945 0024 7A68     		ldr	r2, [r7, #4]
 2946 0026 9200     		lsls	r2, r2, #2
 2947 0028 D258     		ldr	r2, [r2, r3]
 2948 002a 084B     		ldr	r3, .L257+8
 2949 002c 1B68     		ldr	r3, [r3]
 2950 002e 1A43     		orrs	r2, r3
 2951 0030 064B     		ldr	r3, .L257+8
 2952 0032 1A60     		str	r2, [r3]
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
 2953              		.loc 2 1664 0
 2954 0034 02E0     		b	.L256
 2955              	.L254:
1662:Generated_Source\PSoC4/CyLFClk.c ****         }
 2956              		.loc 2 1662 0 discriminator 1
 2957 0036 0020     		movs	r0, #0
 2958 0038 FFF7FEFF 		bl	CyHalt
 2959              	.L256:
 2960              		.loc 2 1664 0
 2961 003c C046     		nop
 2962 003e BD46     		mov	sp, r7
 2963 0040 02B0     		add	sp, sp, #8
 2964              		@ sp needed
 2965 0042 80BD     		pop	{r7, pc}
 2966              	.L258:
 2967              		.align	2
 2968              	.L257:
 2969 0044 00000000 		.word	counterIntMaskTbl
 2970 0048 08000000 		.word	disableServicedIsr
 2971 004c 04000000 		.word	wdtIsrMask
 2972              		.cfi_endproc
 2973              	.LFE39:
 2974              		.size	CySysWdtEnableCounterIsr, .-CySysWdtEnableCounterIsr
 2975              		.section	.text.CySysWdtDisableCounterIsr,"ax",%progbits
 2976              		.align	2
 2977              		.global	CySysWdtDisableCounterIsr
 2978              		.code	16
 2979              		.thumb_func
 2980              		.type	CySysWdtDisableCounterIsr, %function
 2981              	CySysWdtDisableCounterIsr:
 2982              	.LFB40:
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 95


1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
 2983              		.loc 2 1677 0
 2984              		.cfi_startproc
 2985              		@ args = 0, pretend = 0, frame = 8
 2986              		@ frame_needed = 1, uses_anonymous_args = 0
 2987 0000 80B5     		push	{r7, lr}
 2988              		.cfi_def_cfa_offset 8
 2989              		.cfi_offset 7, -8
 2990              		.cfi_offset 14, -4
 2991 0002 82B0     		sub	sp, sp, #8
 2992              		.cfi_def_cfa_offset 16
 2993 0004 00AF     		add	r7, sp, #0
 2994              		.cfi_def_cfa_register 7
 2995 0006 7860     		str	r0, [r7, #4]
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
 2996              		.loc 2 1678 0
 2997 0008 7B68     		ldr	r3, [r7, #4]
 2998 000a 022B     		cmp	r3, #2
 2999 000c 0AD8     		bhi	.L260
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
 3000              		.loc 2 1680 0
 3001 000e 094B     		ldr	r3, .L263
 3002 0010 7A68     		ldr	r2, [r7, #4]
 3003 0012 9200     		lsls	r2, r2, #2
 3004 0014 D358     		ldr	r3, [r2, r3]
 3005 0016 DA43     		mvns	r2, r3
 3006 0018 074B     		ldr	r3, .L263+4
 3007 001a 1B68     		ldr	r3, [r3]
 3008 001c 1A40     		ands	r2, r3
 3009 001e 064B     		ldr	r3, .L263+4
 3010 0020 1A60     		str	r2, [r3]
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
 3011              		.loc 2 1686 0
 3012 0022 02E0     		b	.L262
 3013              	.L260:
1684:Generated_Source\PSoC4/CyLFClk.c ****         }
 3014              		.loc 2 1684 0 discriminator 1
 3015 0024 0020     		movs	r0, #0
 3016 0026 FFF7FEFF 		bl	CyHalt
 3017              	.L262:
 3018              		.loc 2 1686 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 96


 3019 002a C046     		nop
 3020 002c BD46     		mov	sp, r7
 3021 002e 02B0     		add	sp, sp, #8
 3022              		@ sp needed
 3023 0030 80BD     		pop	{r7, pc}
 3024              	.L264:
 3025 0032 C046     		.align	2
 3026              	.L263:
 3027 0034 00000000 		.word	counterIntMaskTbl
 3028 0038 04000000 		.word	wdtIsrMask
 3029              		.cfi_endproc
 3030              	.LFE40:
 3031              		.size	CySysWdtDisableCounterIsr, .-CySysWdtDisableCounterIsr
 3032              		.section	.text.CySysWdtIsr,"ax",%progbits
 3033              		.align	2
 3034              		.global	CySysWdtIsr
 3035              		.code	16
 3036              		.thumb_func
 3037              		.type	CySysWdtIsr, %function
 3038              	CySysWdtIsr:
 3039              	.LFB41:
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
 3040              		.loc 2 1710 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 0000 80B5     		push	{r7, lr}
 3045              		.cfi_def_cfa_offset 8
 3046              		.cfi_offset 7, -8
 3047              		.cfi_offset 14, -4
 3048 0002 00AF     		add	r7, sp, #0
 3049              		.cfi_def_cfa_register 7
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
 3050              		.loc 2 1711 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 97


 3051 0004 344B     		ldr	r3, .L273
 3052 0006 1B68     		ldr	r3, [r3]
 3053 0008 0422     		movs	r2, #4
 3054 000a 1340     		ands	r3, r2
 3055 000c 1FD0     		beq	.L266
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
 3056              		.loc 2 1713 0
 3057 000e 334B     		ldr	r3, .L273+4
 3058 0010 1B68     		ldr	r3, [r3]
 3059 0012 0422     		movs	r2, #4
 3060 0014 1340     		ands	r3, r2
 3061 0016 17D0     		beq	.L267
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
 3062              		.loc 2 1715 0
 3063 0018 314B     		ldr	r3, .L273+8
 3064 001a 1B68     		ldr	r3, [r3]
 3065 001c 0422     		movs	r2, #4
 3066 001e 1340     		ands	r3, r2
 3067 0020 DA43     		mvns	r2, r3
 3068 0022 2E4B     		ldr	r3, .L273+4
 3069 0024 1B68     		ldr	r3, [r3]
 3070 0026 1A40     		ands	r2, r3
 3071 0028 2C4B     		ldr	r3, .L273+4
 3072 002a 1A60     		str	r2, [r3]
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
 3073              		.loc 2 1716 0
 3074 002c 2C4B     		ldr	r3, .L273+8
 3075 002e 1B68     		ldr	r3, [r3]
 3076 0030 0422     		movs	r2, #4
 3077 0032 9343     		bics	r3, r2
 3078 0034 1A00     		movs	r2, r3
 3079 0036 2A4B     		ldr	r3, .L273+8
 3080 0038 1A60     		str	r2, [r3]
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
 3081              		.loc 2 1717 0
 3082 003a 2A4B     		ldr	r3, .L273+12
 3083 003c 1B68     		ldr	r3, [r3]
 3084 003e 002B     		cmp	r3, #0
 3085 0040 02D0     		beq	.L267
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
 3086              		.loc 2 1719 0
 3087 0042 284B     		ldr	r3, .L273+12
 3088 0044 1B68     		ldr	r3, [r3]
 3089 0046 9847     		blx	r3
 3090              	.L267:
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3091              		.loc 2 1722 0
 3092 0048 0420     		movs	r0, #4
 3093 004a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3094              	.L266:
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 98


1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
 3095              		.loc 2 1725 0
 3096 004e 224B     		ldr	r3, .L273
 3097 0050 1A68     		ldr	r2, [r3]
 3098 0052 8023     		movs	r3, #128
 3099 0054 DB00     		lsls	r3, r3, #3
 3100 0056 1340     		ands	r3, r2
 3101 0058 22D0     		beq	.L268
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
 3102              		.loc 2 1727 0
 3103 005a 204B     		ldr	r3, .L273+4
 3104 005c 1A68     		ldr	r2, [r3]
 3105 005e 8023     		movs	r3, #128
 3106 0060 DB00     		lsls	r3, r3, #3
 3107 0062 1340     		ands	r3, r2
 3108 0064 17D0     		beq	.L269
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
 3109              		.loc 2 1729 0
 3110 0066 1E4B     		ldr	r3, .L273+8
 3111 0068 1A68     		ldr	r2, [r3]
 3112 006a 8023     		movs	r3, #128
 3113 006c DB00     		lsls	r3, r3, #3
 3114 006e 1340     		ands	r3, r2
 3115 0070 DA43     		mvns	r2, r3
 3116 0072 1A4B     		ldr	r3, .L273+4
 3117 0074 1B68     		ldr	r3, [r3]
 3118 0076 1A40     		ands	r2, r3
 3119 0078 184B     		ldr	r3, .L273+4
 3120 007a 1A60     		str	r2, [r3]
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
 3121              		.loc 2 1730 0
 3122 007c 184B     		ldr	r3, .L273+8
 3123 007e 1B68     		ldr	r3, [r3]
 3124 0080 194A     		ldr	r2, .L273+16
 3125 0082 1A40     		ands	r2, r3
 3126 0084 164B     		ldr	r3, .L273+8
 3127 0086 1A60     		str	r2, [r3]
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
 3128              		.loc 2 1731 0
 3129 0088 164B     		ldr	r3, .L273+12
 3130 008a 5B68     		ldr	r3, [r3, #4]
 3131 008c 002B     		cmp	r3, #0
 3132 008e 02D0     		beq	.L269
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
 3133              		.loc 2 1733 0
 3134 0090 144B     		ldr	r3, .L273+12
 3135 0092 5B68     		ldr	r3, [r3, #4]
 3136 0094 9847     		blx	r3
 3137              	.L269:
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3138              		.loc 2 1736 0
 3139 0096 8023     		movs	r3, #128
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 99


 3140 0098 DB00     		lsls	r3, r3, #3
 3141 009a 1800     		movs	r0, r3
 3142 009c FFF7FEFF 		bl	CySysWdtClearInterrupt
 3143              	.L268:
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
 3144              		.loc 2 1739 0
 3145 00a0 0D4B     		ldr	r3, .L273
 3146 00a2 1A68     		ldr	r2, [r3]
 3147 00a4 8023     		movs	r3, #128
 3148 00a6 DB02     		lsls	r3, r3, #11
 3149 00a8 1340     		ands	r3, r2
 3150 00aa 11D0     		beq	.L272
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
 3151              		.loc 2 1741 0
 3152 00ac 0B4B     		ldr	r3, .L273+4
 3153 00ae 1A68     		ldr	r2, [r3]
 3154 00b0 8023     		movs	r3, #128
 3155 00b2 DB02     		lsls	r3, r3, #11
 3156 00b4 1340     		ands	r3, r2
 3157 00b6 06D0     		beq	.L271
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
 3158              		.loc 2 1743 0
 3159 00b8 0A4B     		ldr	r3, .L273+12
 3160 00ba 9B68     		ldr	r3, [r3, #8]
 3161 00bc 002B     		cmp	r3, #0
 3162 00be 02D0     		beq	.L271
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
 3163              		.loc 2 1745 0
 3164 00c0 084B     		ldr	r3, .L273+12
 3165 00c2 9B68     		ldr	r3, [r3, #8]
 3166 00c4 9847     		blx	r3
 3167              	.L271:
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
 3168              		.loc 2 1748 0
 3169 00c6 8023     		movs	r3, #128
 3170 00c8 DB02     		lsls	r3, r3, #11
 3171 00ca 1800     		movs	r0, r3
 3172 00cc FFF7FEFF 		bl	CySysWdtClearInterrupt
 3173              	.L272:
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
 3174              		.loc 2 1750 0
 3175 00d0 C046     		nop
 3176 00d2 BD46     		mov	sp, r7
 3177              		@ sp needed
 3178 00d4 80BD     		pop	{r7, pc}
 3179              	.L274:
 3180 00d6 C046     		.align	2
 3181              	.L273:
 3182 00d8 10020B40 		.word	1074463248
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 100


 3183 00dc 04000000 		.word	wdtIsrMask
 3184 00e0 08000000 		.word	disableServicedIsr
 3185 00e4 0C000000 		.word	cySysWdtCallback
 3186 00e8 FFFBFFFF 		.word	-1025
 3187              		.cfi_endproc
 3188              	.LFE41:
 3189              		.size	CySysWdtIsr, .-CySysWdtIsr
 3190              		.section	.text.CySysWatchdogFeed,"ax",%progbits
 3191              		.align	2
 3192              		.global	CySysWatchdogFeed
 3193              		.code	16
 3194              		.thumb_func
 3195              		.type	CySysWatchdogFeed, %function
 3196              	CySysWatchdogFeed:
 3197              	.LFB42:
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
 3198              		.loc 2 1775 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 8
 3201              		@ frame_needed = 1, uses_anonymous_args = 0
 3202 0000 80B5     		push	{r7, lr}
 3203              		.cfi_def_cfa_offset 8
 3204              		.cfi_offset 7, -8
 3205              		.cfi_offset 14, -4
 3206 0002 82B0     		sub	sp, sp, #8
 3207              		.cfi_def_cfa_offset 16
 3208 0004 00AF     		add	r7, sp, #0
 3209              		.cfi_def_cfa_register 7
 3210 0006 7860     		str	r0, [r7, #4]
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
 3211              		.loc 2 1776 0
 3212 0008 7B68     		ldr	r3, [r7, #4]
 3213 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 101


 3214 000c 18D1     		bne	.L276
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
 3215              		.loc 2 1778 0
 3216 000e 7B68     		ldr	r3, [r7, #4]
 3217 0010 1800     		movs	r0, r3
 3218 0012 FFF7FEFF 		bl	CySysWdtGetMode
 3219 0016 0300     		movs	r3, r0
 3220 0018 032B     		cmp	r3, #3
 3221 001a 03D1     		bne	.L277
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3222              		.loc 2 1780 0
 3223 001c 0420     		movs	r0, #4
 3224 001e FFF7FEFF 		bl	CySysWdtClearInterrupt
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
 3225              		.loc 2 1812 0
 3226 0022 2EE0     		b	.L280
 3227              	.L277:
1782:Generated_Source\PSoC4/CyLFClk.c ****             {
 3228              		.loc 2 1782 0
 3229 0024 7B68     		ldr	r3, [r7, #4]
 3230 0026 1800     		movs	r0, r3
 3231 0028 FFF7FEFF 		bl	CySysWdtGetMode
 3232 002c 0300     		movs	r3, r0
 3233 002e 022B     		cmp	r3, #2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 102


 3234 0030 27D1     		bne	.L280
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
 3235              		.loc 2 1784 0
 3236 0032 0820     		movs	r0, #8
 3237 0034 FFF7FEFF 		bl	CySysWdtResetCounters
1785:Generated_Source\PSoC4/CyLFClk.c ****             }
 3238              		.loc 2 1785 0
 3239 0038 0420     		movs	r0, #4
 3240 003a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3241              		.loc 2 1812 0
 3242 003e 20E0     		b	.L280
 3243              	.L276:
1792:Generated_Source\PSoC4/CyLFClk.c ****         {
 3244              		.loc 2 1792 0
 3245 0040 7B68     		ldr	r3, [r7, #4]
 3246 0042 012B     		cmp	r3, #1
 3247 0044 1DD1     		bne	.L280
1794:Generated_Source\PSoC4/CyLFClk.c ****             {
 3248              		.loc 2 1794 0
 3249 0046 7B68     		ldr	r3, [r7, #4]
 3250 0048 1800     		movs	r0, r3
 3251 004a FFF7FEFF 		bl	CySysWdtGetMode
 3252 004e 0300     		movs	r3, r0
 3253 0050 032B     		cmp	r3, #3
 3254 0052 05D1     		bne	.L279
1796:Generated_Source\PSoC4/CyLFClk.c ****             }
 3255              		.loc 2 1796 0
 3256 0054 8023     		movs	r3, #128
 3257 0056 DB00     		lsls	r3, r3, #3
 3258 0058 1800     		movs	r0, r3
 3259 005a FFF7FEFF 		bl	CySysWdtClearInterrupt
 3260              		.loc 2 1812 0
 3261 005e 10E0     		b	.L280
 3262              	.L279:
1798:Generated_Source\PSoC4/CyLFClk.c ****             {
 3263              		.loc 2 1798 0
 3264 0060 7B68     		ldr	r3, [r7, #4]
 3265 0062 1800     		movs	r0, r3
 3266 0064 FFF7FEFF 		bl	CySysWdtGetMode
 3267 0068 0300     		movs	r3, r0
 3268 006a 022B     		cmp	r3, #2
 3269 006c 09D1     		bne	.L280
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
 3270              		.loc 2 1800 0
 3271 006e 8023     		movs	r3, #128
 3272 0070 1B01     		lsls	r3, r3, #4
 3273 0072 1800     		movs	r0, r3
 3274 0074 FFF7FEFF 		bl	CySysWdtResetCounters
1801:Generated_Source\PSoC4/CyLFClk.c ****             }
 3275              		.loc 2 1801 0
 3276 0078 8023     		movs	r3, #128
 3277 007a DB00     		lsls	r3, r3, #3
 3278 007c 1800     		movs	r0, r3
 3279 007e FFF7FEFF 		bl	CySysWdtClearInterrupt
 3280              	.L280:
 3281              		.loc 2 1812 0
 3282 0082 C046     		nop
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 103


 3283 0084 BD46     		mov	sp, r7
 3284 0086 02B0     		add	sp, sp, #8
 3285              		@ sp needed
 3286 0088 80BD     		pop	{r7, pc}
 3287              		.cfi_endproc
 3288              	.LFE42:
 3289              		.size	CySysWatchdogFeed, .-CySysWatchdogFeed
 3290 008a C046     		.section	.text.CySysClkLfclkPosedgeCatch,"ax",%progbits
 3291              		.align	2
 3292              		.code	16
 3293              		.thumb_func
 3294              		.type	CySysClkLfclkPosedgeCatch, %function
 3295              	CySysClkLfclkPosedgeCatch:
 3296              	.LFB43:
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
 3297              		.loc 2 1841 0
 3298              		.cfi_startproc
 3299              		@ args = 0, pretend = 0, frame = 8
 3300              		@ frame_needed = 1, uses_anonymous_args = 0
 3301 0000 80B5     		push	{r7, lr}
 3302              		.cfi_def_cfa_offset 8
 3303              		.cfi_offset 7, -8
 3304              		.cfi_offset 14, -4
 3305 0002 82B0     		sub	sp, sp, #8
 3306              		.cfi_def_cfa_offset 16
 3307 0004 00AF     		add	r7, sp, #0
 3308              		.cfi_def_cfa_register 7
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 104


1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
 3309              		.loc 2 1845 0
 3310 0006 0020     		movs	r0, #0
 3311 0008 FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3312 000c 031E     		subs	r3, r0, #0
 3313 000e 03D0     		beq	.L282
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3314              		.loc 2 1847 0
 3315 0010 1E4B     		ldr	r3, .L287
 3316 0012 0022     		movs	r2, #0
 3317 0014 1A60     		str	r2, [r3]
 3318 0016 24E0     		b	.L283
 3319              	.L282:
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
 3320              		.loc 2 1849 0
 3321 0018 0120     		movs	r0, #1
 3322 001a FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3323 001e 031E     		subs	r3, r0, #0
 3324 0020 03D0     		beq	.L284
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
 3325              		.loc 2 1851 0
 3326 0022 1A4B     		ldr	r3, .L287
 3327 0024 0122     		movs	r2, #1
 3328 0026 1A60     		str	r2, [r3]
 3329 0028 1BE0     		b	.L283
 3330              	.L284:
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
 3331              		.loc 2 1853 0
 3332 002a 0220     		movs	r0, #2
 3333 002c FFF7FEFF 		bl	CySysWdtGetEnabledStatus
 3334 0030 031E     		subs	r3, r0, #0
 3335 0032 03D0     		beq	.L285
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
 3336              		.loc 2 1855 0
 3337 0034 154B     		ldr	r3, .L287
 3338 0036 0222     		movs	r2, #2
 3339 0038 1A60     		str	r2, [r3]
 3340 003a 12E0     		b	.L283
 3341              	.L285:
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
 3342              		.loc 2 1860 0
 3343 003c 144B     		ldr	r3, .L287+4
 3344 003e 0122     		movs	r2, #1
 3345 0040 1A60     		str	r2, [r3]
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
 3346              		.loc 2 1861 0
 3347 0042 124B     		ldr	r3, .L287
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 105


 3348 0044 0022     		movs	r2, #0
 3349 0046 1A60     		str	r2, [r3]
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
 3350              		.loc 2 1863 0
 3351 0048 0020     		movs	r0, #0
 3352 004a FFF7FEFF 		bl	CySysWdtGetMode
 3353 004e 0200     		movs	r2, r0
 3354 0050 104B     		ldr	r3, .L287+8
 3355 0052 1A60     		str	r2, [r3]
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
 3356              		.loc 2 1864 0
 3357 0054 0021     		movs	r1, #0
 3358 0056 0020     		movs	r0, #0
 3359 0058 FFF7FEFF 		bl	CySysWdtSetMode
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
 3360              		.loc 2 1865 0
 3361 005c 0120     		movs	r0, #1
 3362 005e FFF7FEFF 		bl	CySysWdtEnable
 3363              	.L283:
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
 3364              		.loc 2 1868 0
 3365 0062 0A4B     		ldr	r3, .L287
 3366 0064 1B68     		ldr	r3, [r3]
 3367 0066 1800     		movs	r0, r3
 3368 0068 FFF7FEFF 		bl	CySysWdtGetCount
 3369 006c 0300     		movs	r3, r0
 3370 006e 7B60     		str	r3, [r7, #4]
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
 3371              		.loc 2 1869 0
 3372 0070 C046     		nop
 3373              	.L286:
 3374              		.loc 2 1869 0 is_stmt 0 discriminator 1
 3375 0072 064B     		ldr	r3, .L287
 3376 0074 1B68     		ldr	r3, [r3]
 3377 0076 1800     		movs	r0, r3
 3378 0078 FFF7FEFF 		bl	CySysWdtGetCount
 3379 007c 0200     		movs	r2, r0
 3380 007e 7B68     		ldr	r3, [r7, #4]
 3381 0080 9A42     		cmp	r2, r3
 3382 0082 F6D0     		beq	.L286
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
 3383              		.loc 2 1873 0 is_stmt 1
 3384 0084 C046     		nop
 3385 0086 BD46     		mov	sp, r7
 3386 0088 02B0     		add	sp, sp, #8
 3387              		@ sp needed
 3388 008a 80BD     		pop	{r7, pc}
 3389              	.L288:
 3390              		.align	2
 3391              	.L287:
 3392 008c 24000000 		.word	lfclkPosedgeEnabledWdtCounter.5126
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 106


 3393 0090 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3394 0094 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3395              		.cfi_endproc
 3396              	.LFE43:
 3397              		.size	CySysClkLfclkPosedgeCatch, .-CySysClkLfclkPosedgeCatch
 3398              		.section	.text.CySysClkLfclkPosedgeRestore,"ax",%progbits
 3399              		.align	2
 3400              		.code	16
 3401              		.thumb_func
 3402              		.type	CySysClkLfclkPosedgeRestore, %function
 3403              	CySysClkLfclkPosedgeRestore:
 3404              	.LFB44:
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
 3405              		.loc 2 1895 0
 3406              		.cfi_startproc
 3407              		@ args = 0, pretend = 0, frame = 0
 3408              		@ frame_needed = 1, uses_anonymous_args = 0
 3409 0000 80B5     		push	{r7, lr}
 3410              		.cfi_def_cfa_offset 8
 3411              		.cfi_offset 7, -8
 3412              		.cfi_offset 14, -4
 3413 0002 00AF     		add	r7, sp, #0
 3414              		.cfi_def_cfa_register 7
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
 3415              		.loc 2 1896 0
 3416 0004 0A4B     		ldr	r3, .L292
 3417 0006 1B68     		ldr	r3, [r3]
 3418 0008 002B     		cmp	r3, #0
 3419 000a 0ED0     		beq	.L291
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
 3420              		.loc 2 1899 0
 3421 000c 094B     		ldr	r3, .L292+4
 3422 000e 094A     		ldr	r2, .L292+4
 3423 0010 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 107


 3424 0012 0121     		movs	r1, #1
 3425 0014 8A43     		bics	r2, r1
 3426 0016 1A60     		str	r2, [r3]
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
 3427              		.loc 2 1900 0
 3428 0018 074B     		ldr	r3, .L292+8
 3429 001a 1B68     		ldr	r3, [r3]
 3430 001c 1900     		movs	r1, r3
 3431 001e 0020     		movs	r0, #0
 3432 0020 FFF7FEFF 		bl	CySysWdtSetMode
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
 3433              		.loc 2 1901 0
 3434 0024 024B     		ldr	r3, .L292
 3435 0026 0022     		movs	r2, #0
 3436 0028 1A60     		str	r2, [r3]
 3437              	.L291:
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
 3438              		.loc 2 1903 0
 3439 002a C046     		nop
 3440 002c BD46     		mov	sp, r7
 3441              		@ sp needed
 3442 002e 80BD     		pop	{r7, pc}
 3443              	.L293:
 3444              		.align	2
 3445              	.L292:
 3446 0030 00000000 		.word	lfclkPosedgeWdtCounter0Enabled
 3447 0034 10020B40 		.word	1074463248
 3448 0038 04000000 		.word	lfclkPosedgeWdtCounter0Mode
 3449              		.cfi_endproc
 3450              	.LFE44:
 3451              		.size	CySysClkLfclkPosedgeRestore, .-CySysClkLfclkPosedgeRestore
 3452              		.section	.text.CySysTimerDelay,"ax",%progbits
 3453              		.align	2
 3454              		.global	CySysTimerDelay
 3455              		.code	16
 3456              		.thumb_func
 3457              		.type	CySysTimerDelay, %function
 3458              	CySysTimerDelay:
 3459              	.LFB45:
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 108


1921:Generated_Source\PSoC4/CyLFClk.c ****     }
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 109


1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 110


2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 111


2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 112


2149:Generated_Source\PSoC4/CyLFClk.c ****     {
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 113


2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 114


2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 115


2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
2341:Generated_Source\PSoC4/CyLFClk.c ****     {
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 116


2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
2409:Generated_Source\PSoC4/CyLFClk.c ****     {
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 117


2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 118


2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 119


2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 120


2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 121


2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 122


2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
2733:Generated_Source\PSoC4/CyLFClk.c **** 
2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 123


2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 124


2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 125


2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 126


2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 127


3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
 3460              		.loc 2 3032 0
 3461              		.cfi_startproc
 3462              		@ args = 0, pretend = 0, frame = 24
 3463              		@ frame_needed = 1, uses_anonymous_args = 0
 3464 0000 80B5     		push	{r7, lr}
 3465              		.cfi_def_cfa_offset 8
 3466              		.cfi_offset 7, -8
 3467              		.cfi_offset 14, -4
 3468 0002 86B0     		sub	sp, sp, #24
 3469              		.cfi_def_cfa_offset 32
 3470 0004 00AF     		add	r7, sp, #0
 3471              		.cfi_def_cfa_register 7
 3472 0006 F860     		str	r0, [r7, #12]
 3473 0008 7A60     		str	r2, [r7, #4]
 3474 000a 0B23     		movs	r3, #11
 3475 000c FB18     		adds	r3, r7, r3
 3476 000e 0A1C     		adds	r2, r1, #0
 3477 0010 1A70     		strb	r2, [r3]
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3478              		.loc 2 3037 0
 3479 0012 FB68     		ldr	r3, [r7, #12]
 3480 0014 012B     		cmp	r3, #1
 3481 0016 1ED8     		bhi	.L295
 3482              		.loc 2 3037 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 128


 3483 0018 FB68     		ldr	r3, [r7, #12]
 3484 001a 1800     		movs	r0, r3
 3485 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3486 0020 031E     		subs	r3, r0, #0
 3487 0022 18D1     		bne	.L295
 3488              		.loc 2 3037 0 discriminator 2
 3489 0024 7B68     		ldr	r3, [r7, #4]
 3490 0026 0F4A     		ldr	r2, .L297
 3491 0028 9342     		cmp	r3, r2
 3492 002a 14D8     		bhi	.L295
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
 3493              		.loc 2 3040 0 is_stmt 1
 3494 002c FB68     		ldr	r3, [r7, #12]
 3495 002e 1800     		movs	r0, r3
 3496 0030 FFF7FEFF 		bl	CySysWdtGetCount
 3497 0034 0300     		movs	r3, r0
 3498 0036 7B61     		str	r3, [r7, #20]
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 3499              		.loc 2 3041 0
 3500 0038 7A69     		ldr	r2, [r7, #20]
 3501 003a 7B68     		ldr	r3, [r7, #4]
 3502 003c D318     		adds	r3, r2, r3
 3503 003e 1B04     		lsls	r3, r3, #16
 3504 0040 1B0C     		lsrs	r3, r3, #16
 3505 0042 3B61     		str	r3, [r7, #16]
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
 3506              		.loc 2 3043 0
 3507 0044 3A69     		ldr	r2, [r7, #16]
 3508 0046 0B23     		movs	r3, #11
 3509 0048 FB18     		adds	r3, r7, r3
 3510 004a 1978     		ldrb	r1, [r3]
 3511 004c FB68     		ldr	r3, [r7, #12]
 3512 004e 1800     		movs	r0, r3
 3513 0050 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 3514 0054 02E0     		b	.L296
 3515              	.L295:
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3516              		.loc 2 3047 0 discriminator 1
 3517 0056 0020     		movs	r0, #0
 3518 0058 FFF7FEFF 		bl	CyHalt
 3519              	.L296:
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3057:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 129


3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
 3520              		.loc 2 3065 0
 3521 005c C046     		nop
 3522 005e BD46     		mov	sp, r7
 3523 0060 06B0     		add	sp, sp, #24
 3524              		@ sp needed
 3525 0062 80BD     		pop	{r7, pc}
 3526              	.L298:
 3527              		.align	2
 3528              	.L297:
 3529 0064 FFFF0000 		.word	65535
 3530              		.cfi_endproc
 3531              	.LFE45:
 3532              		.size	CySysTimerDelay, .-CySysTimerDelay
 3533              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 3534              		.align	2
 3535              		.global	CySysTimerDelayUntilMatch
 3536              		.code	16
 3537              		.thumb_func
 3538              		.type	CySysTimerDelayUntilMatch, %function
 3539              	CySysTimerDelayUntilMatch:
 3540              	.LFB46:
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 130


3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 131


3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 3541              		.loc 2 3161 0
 3542              		.cfi_startproc
 3543              		@ args = 0, pretend = 0, frame = 24
 3544              		@ frame_needed = 1, uses_anonymous_args = 0
 3545 0000 80B5     		push	{r7, lr}
 3546              		.cfi_def_cfa_offset 8
 3547              		.cfi_offset 7, -8
 3548              		.cfi_offset 14, -4
 3549 0002 86B0     		sub	sp, sp, #24
 3550              		.cfi_def_cfa_offset 32
 3551 0004 00AF     		add	r7, sp, #0
 3552              		.cfi_def_cfa_register 7
 3553 0006 F860     		str	r0, [r7, #12]
 3554 0008 7A60     		str	r2, [r7, #4]
 3555 000a 0B23     		movs	r3, #11
 3556 000c FB18     		adds	r3, r7, r3
 3557 000e 0A1C     		adds	r2, r1, #0
 3558 0010 1A70     		strb	r2, [r3]
3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
 3559              		.loc 2 3165 0
 3560 0012 FB68     		ldr	r3, [r7, #12]
 3561 0014 012B     		cmp	r3, #1
 3562 0016 3BD8     		bhi	.L300
 3563              		.loc 2 3165 0 is_stmt 0 discriminator 1
 3564 0018 FB68     		ldr	r3, [r7, #12]
 3565 001a 1800     		movs	r0, r3
 3566 001c FFF7FEFF 		bl	CySysWdtGetClearOnMatch
 3567 0020 031E     		subs	r3, r0, #0
 3568 0022 35D1     		bne	.L300
 3569              		.loc 2 3165 0 discriminator 2
 3570 0024 7B68     		ldr	r3, [r7, #4]
 3571 0026 1E4A     		ldr	r2, .L306
 3572 0028 9342     		cmp	r3, r2
 3573 002a 31D8     		bhi	.L300
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
 3574              		.loc 2 3168 0 is_stmt 1
 3575 002c 0B23     		movs	r3, #11
 3576 002e FB18     		adds	r3, r7, r3
 3577 0030 1B78     		ldrb	r3, [r3]
 3578 0032 002B     		cmp	r3, #0
 3579 0034 14D1     		bne	.L301
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 132


 3580              	.L302:
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3581              		.loc 2 3172 0 discriminator 1
 3582 0036 FB68     		ldr	r3, [r7, #12]
 3583 0038 1800     		movs	r0, r3
 3584 003a FFF7FEFF 		bl	CySysWdtGetCount
 3585 003e 0300     		movs	r3, r0
 3586 0040 7B61     		str	r3, [r7, #20]
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
 3587              		.loc 2 3173 0 discriminator 1
 3588 0042 7A69     		ldr	r2, [r7, #20]
 3589 0044 7B68     		ldr	r3, [r7, #4]
 3590 0046 9A42     		cmp	r2, r3
 3591 0048 F5D8     		bhi	.L302
 3592              	.L303:
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
 3593              		.loc 2 3177 0 discriminator 1
 3594 004a FB68     		ldr	r3, [r7, #12]
 3595 004c 1800     		movs	r0, r3
 3596 004e FFF7FEFF 		bl	CySysWdtGetCount
 3597 0052 0300     		movs	r3, r0
 3598 0054 7B61     		str	r3, [r7, #20]
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
 3599              		.loc 2 3178 0 discriminator 1
 3600 0056 7A69     		ldr	r2, [r7, #20]
 3601 0058 7B68     		ldr	r3, [r7, #4]
 3602 005a 9A42     		cmp	r2, r3
 3603 005c F5D3     		bcc	.L303
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3604              		.loc 2 3168 0
 3605 005e 1AE0     		b	.L305
 3606              	.L301:
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
 3607              		.loc 2 3182 0
 3608 0060 104B     		ldr	r3, .L306+4
 3609 0062 FA68     		ldr	r2, [r7, #12]
 3610 0064 9200     		lsls	r2, r2, #2
 3611 0066 D358     		ldr	r3, [r2, r3]
 3612 0068 7B61     		str	r3, [r7, #20]
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
 3613              		.loc 2 3183 0
 3614 006a 7A68     		ldr	r2, [r7, #4]
 3615 006c FB68     		ldr	r3, [r7, #12]
 3616 006e 1100     		movs	r1, r2
 3617 0070 1800     		movs	r0, r3
 3618 0072 FFF7FEFF 		bl	CySysWdtSetMatch
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 133


 3619              		.loc 2 3185 0
 3620 0076 0C4B     		ldr	r3, .L306+8
 3621 0078 1A68     		ldr	r2, [r3]
 3622 007a 7B69     		ldr	r3, [r7, #20]
 3623 007c 1A43     		orrs	r2, r3
 3624 007e 0A4B     		ldr	r3, .L306+8
 3625 0080 1A60     		str	r2, [r3]
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
 3626              		.loc 2 3186 0
 3627 0082 0A4B     		ldr	r3, .L306+12
 3628 0084 1A68     		ldr	r2, [r3]
 3629 0086 7B69     		ldr	r3, [r7, #20]
 3630 0088 1A43     		orrs	r2, r3
 3631 008a 084B     		ldr	r3, .L306+12
 3632 008c 1A60     		str	r2, [r3]
3168:Generated_Source\PSoC4/CyLFClk.c ****                 {
 3633              		.loc 2 3168 0
 3634 008e 02E0     		b	.L305
 3635              	.L300:
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 3636              		.loc 2 3191 0 discriminator 1
 3637 0090 0020     		movs	r0, #0
 3638 0092 FFF7FEFF 		bl	CyHalt
 3639              	.L305:
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 134


3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 3640              		.loc 2 3226 0
 3641 0096 C046     		nop
 3642 0098 BD46     		mov	sp, r7
 3643 009a 06B0     		add	sp, sp, #24
 3644              		@ sp needed
 3645 009c 80BD     		pop	{r7, pc}
 3646              	.L307:
 3647 009e C046     		.align	2
 3648              	.L306:
 3649 00a0 FFFF0000 		.word	65535
 3650 00a4 00000000 		.word	counterIntMaskTbl
 3651 00a8 08000000 		.word	disableServicedIsr
 3652 00ac 04000000 		.word	wdtIsrMask
 3653              		.cfi_endproc
 3654              	.LFE46:
 3655              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 3656              		.bss
 3657              	iloTrimTrig.4931:
 3658 0018 00       		.space	1
 3659 0019 000000   		.align	2
 3660              	compensateRunningStatus.4941:
 3661 001c 00000000 		.space	4
 3662              		.align	2
 3663              	trimRunningStatus.4953:
 3664 0020 00000000 		.space	4
 3665              		.align	2
 3666              	lfclkPosedgeEnabledWdtCounter.5126:
 3667 0024 00000000 		.space	4
 3668              		.text
 3669              	.Letext0:
 3670              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 3671              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 3672              		.section	.debug_info,"",%progbits
 3673              	.Ldebug_info0:
 3674 0000 9D0A0000 		.4byte	0xa9d
 3675 0004 0400     		.2byte	0x4
 3676 0006 00000000 		.4byte	.Ldebug_abbrev0
 3677 000a 04       		.byte	0x4
 3678 000b 01       		.uleb128 0x1
 3679 000c 3C040000 		.4byte	.LASF119
 3680 0010 0C       		.byte	0xc
 3681 0011 47070000 		.4byte	.LASF120
 3682 0015 E7050000 		.4byte	.LASF121
 3683 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3684 001d 00000000 		.4byte	0
 3685 0021 00000000 		.4byte	.Ldebug_line0
 3686 0025 02       		.uleb128 0x2
 3687 0026 01       		.byte	0x1
 3688 0027 06       		.byte	0x6
 3689 0028 68010000 		.4byte	.LASF0
 3690 002c 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 135


 3691 002d 01       		.byte	0x1
 3692 002e 08       		.byte	0x8
 3693 002f 9B060000 		.4byte	.LASF1
 3694 0033 02       		.uleb128 0x2
 3695 0034 02       		.byte	0x2
 3696 0035 05       		.byte	0x5
 3697 0036 E5060000 		.4byte	.LASF2
 3698 003a 02       		.uleb128 0x2
 3699 003b 02       		.byte	0x2
 3700 003c 07       		.byte	0x7
 3701 003d 98030000 		.4byte	.LASF3
 3702 0041 02       		.uleb128 0x2
 3703 0042 04       		.byte	0x4
 3704 0043 05       		.byte	0x5
 3705 0044 D2010000 		.4byte	.LASF4
 3706 0048 02       		.uleb128 0x2
 3707 0049 04       		.byte	0x4
 3708 004a 07       		.byte	0x7
 3709 004b 3D030000 		.4byte	.LASF5
 3710 004f 02       		.uleb128 0x2
 3711 0050 08       		.byte	0x8
 3712 0051 05       		.byte	0x5
 3713 0052 5A010000 		.4byte	.LASF6
 3714 0056 02       		.uleb128 0x2
 3715 0057 08       		.byte	0x8
 3716 0058 07       		.byte	0x7
 3717 0059 EF000000 		.4byte	.LASF7
 3718 005d 03       		.uleb128 0x3
 3719 005e 04       		.byte	0x4
 3720 005f 05       		.byte	0x5
 3721 0060 696E7400 		.ascii	"int\000"
 3722 0064 02       		.uleb128 0x2
 3723 0065 04       		.byte	0x4
 3724 0066 07       		.byte	0x7
 3725 0067 F5020000 		.4byte	.LASF8
 3726 006b 04       		.uleb128 0x4
 3727 006c ED010000 		.4byte	.LASF9
 3728 0070 03       		.byte	0x3
 3729 0071 D201     		.2byte	0x1d2
 3730 0073 2C000000 		.4byte	0x2c
 3731 0077 04       		.uleb128 0x4
 3732 0078 00000000 		.4byte	.LASF10
 3733 007c 03       		.byte	0x3
 3734 007d D301     		.2byte	0x1d3
 3735 007f 3A000000 		.4byte	0x3a
 3736 0083 04       		.uleb128 0x4
 3737 0084 45020000 		.4byte	.LASF11
 3738 0088 03       		.byte	0x3
 3739 0089 D401     		.2byte	0x1d4
 3740 008b 48000000 		.4byte	0x48
 3741 008f 04       		.uleb128 0x4
 3742 0090 9A010000 		.4byte	.LASF12
 3743 0094 03       		.byte	0x3
 3744 0095 D701     		.2byte	0x1d7
 3745 0097 41000000 		.4byte	0x41
 3746 009b 02       		.uleb128 0x2
 3747 009c 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 136


 3748 009d 04       		.byte	0x4
 3749 009e 5C060000 		.4byte	.LASF13
 3750 00a2 02       		.uleb128 0x2
 3751 00a3 08       		.byte	0x8
 3752 00a4 04       		.byte	0x4
 3753 00a5 FA010000 		.4byte	.LASF14
 3754 00a9 02       		.uleb128 0x2
 3755 00aa 01       		.byte	0x1
 3756 00ab 08       		.byte	0x8
 3757 00ac BB070000 		.4byte	.LASF15
 3758 00b0 04       		.uleb128 0x4
 3759 00b1 BB080000 		.4byte	.LASF16
 3760 00b5 03       		.byte	0x3
 3761 00b6 7402     		.2byte	0x274
 3762 00b8 48000000 		.4byte	0x48
 3763 00bc 05       		.uleb128 0x5
 3764 00bd 77000000 		.4byte	0x77
 3765 00c1 04       		.uleb128 0x4
 3766 00c2 DC040000 		.4byte	.LASF17
 3767 00c6 03       		.byte	0x3
 3768 00c7 7E02     		.2byte	0x27e
 3769 00c9 CD000000 		.4byte	0xcd
 3770 00cd 05       		.uleb128 0x5
 3771 00ce 83000000 		.4byte	0x83
 3772 00d2 06       		.uleb128 0x6
 3773 00d3 04       		.byte	0x4
 3774 00d4 D8000000 		.4byte	0xd8
 3775 00d8 07       		.uleb128 0x7
 3776 00d9 08       		.uleb128 0x8
 3777 00da 01       		.byte	0x1
 3778 00db 2C000000 		.4byte	0x2c
 3779 00df 01       		.byte	0x1
 3780 00e0 1A       		.byte	0x1a
 3781 00e1 F2000000 		.4byte	0xf2
 3782 00e5 09       		.uleb128 0x9
 3783 00e6 7A050000 		.4byte	.LASF18
 3784 00ea 00       		.byte	0
 3785 00eb 09       		.uleb128 0x9
 3786 00ec FB080000 		.4byte	.LASF19
 3787 00f0 01       		.byte	0x1
 3788 00f1 00       		.byte	0
 3789 00f2 0A       		.uleb128 0xa
 3790 00f3 B1010000 		.4byte	.LASF20
 3791 00f7 01       		.byte	0x1
 3792 00f8 1D       		.byte	0x1d
 3793 00f9 D9000000 		.4byte	0xd9
 3794 00fd 0A       		.uleb128 0xa
 3795 00fe 8C010000 		.4byte	.LASF21
 3796 0102 01       		.byte	0x1
 3797 0103 58       		.byte	0x58
 3798 0104 D2000000 		.4byte	0xd2
 3799 0108 02       		.uleb128 0x2
 3800 0109 08       		.byte	0x8
 3801 010a 04       		.byte	0x4
 3802 010b 39050000 		.4byte	.LASF22
 3803 010f 02       		.uleb128 0x2
 3804 0110 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 137


 3805 0111 07       		.byte	0x7
 3806 0112 30050000 		.4byte	.LASF23
 3807 0116 0B       		.uleb128 0xb
 3808 0117 3E010000 		.4byte	.LASF104
 3809 011b 01       		.byte	0x1
 3810 011c 9202     		.2byte	0x292
 3811 011e 00000000 		.4byte	.LFB0
 3812 0122 4C000000 		.4byte	.LFE0-.LFB0
 3813 0126 01       		.uleb128 0x1
 3814 0127 9C       		.byte	0x9c
 3815 0128 0C       		.uleb128 0xc
 3816 0129 06040000 		.4byte	.LASF28
 3817 012d 02       		.byte	0x2
 3818 012e 53       		.byte	0x53
 3819 012f 00000000 		.4byte	.LFB1
 3820 0133 1C000000 		.4byte	.LFE1-.LFB1
 3821 0137 01       		.uleb128 0x1
 3822 0138 9C       		.byte	0x9c
 3823 0139 0D       		.uleb128 0xd
 3824 013a 13020000 		.4byte	.LASF24
 3825 013e 02       		.byte	0x2
 3826 013f 6C       		.byte	0x6c
 3827 0140 00000000 		.4byte	.LFB2
 3828 0144 60000000 		.4byte	.LFE2-.LFB2
 3829 0148 01       		.uleb128 0x1
 3830 0149 9C       		.byte	0x9c
 3831 014a 5D010000 		.4byte	0x15d
 3832 014e 0E       		.uleb128 0xe
 3833 014f 7D010000 		.4byte	.LASF26
 3834 0153 02       		.byte	0x2
 3835 0154 6F       		.byte	0x6f
 3836 0155 6B000000 		.4byte	0x6b
 3837 0159 02       		.uleb128 0x2
 3838 015a 91       		.byte	0x91
 3839 015b 6F       		.sleb128 -17
 3840 015c 00       		.byte	0
 3841 015d 0F       		.uleb128 0xf
 3842 015e B4000000 		.4byte	.LASF25
 3843 0162 02       		.byte	0x2
 3844 0163 A8       		.byte	0xa8
 3845 0164 00000000 		.4byte	.LFB3
 3846 0168 6C000000 		.4byte	.LFE3-.LFB3
 3847 016c 01       		.uleb128 0x1
 3848 016d 9C       		.byte	0x9c
 3849 016e 84010000 		.4byte	0x184
 3850 0172 0E       		.uleb128 0xe
 3851 0173 E1030000 		.4byte	.LASF27
 3852 0177 02       		.byte	0x2
 3853 0178 AB       		.byte	0xab
 3854 0179 6B000000 		.4byte	0x6b
 3855 017d 05       		.uleb128 0x5
 3856 017e 03       		.byte	0x3
 3857 017f 18000000 		.4byte	iloTrimTrig.4931
 3858 0183 00       		.byte	0
 3859 0184 0C       		.uleb128 0xc
 3860 0185 4C020000 		.4byte	.LASF29
 3861 0189 02       		.byte	0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 138


 3862 018a C9       		.byte	0xc9
 3863 018b 00000000 		.4byte	.LFB4
 3864 018f 20000000 		.4byte	.LFE4-.LFB4
 3865 0193 01       		.uleb128 0x1
 3866 0194 9C       		.byte	0x9c
 3867 0195 10       		.uleb128 0x10
 3868 0196 E5080000 		.4byte	.LASF37
 3869 019a 02       		.byte	0x2
 3870 019b 0B01     		.2byte	0x10b
 3871 019d B0000000 		.4byte	0xb0
 3872 01a1 00000000 		.4byte	.LFB5
 3873 01a5 58010000 		.4byte	.LFE5-.LFB5
 3874 01a9 01       		.uleb128 0x1
 3875 01aa 9C       		.byte	0x9c
 3876 01ab 1C020000 		.4byte	0x21c
 3877 01af 11       		.uleb128 0x11
 3878 01b0 30030000 		.4byte	.LASF30
 3879 01b4 02       		.byte	0x2
 3880 01b5 0B01     		.2byte	0x10b
 3881 01b7 83000000 		.4byte	0x83
 3882 01bb 02       		.uleb128 0x2
 3883 01bc 91       		.byte	0x91
 3884 01bd 5C       		.sleb128 -36
 3885 01be 11       		.uleb128 0x11
 3886 01bf 01020000 		.4byte	.LASF31
 3887 01c3 02       		.byte	0x2
 3888 01c4 0B01     		.2byte	0x10b
 3889 01c6 1C020000 		.4byte	0x21c
 3890 01ca 02       		.uleb128 0x2
 3891 01cb 91       		.byte	0x91
 3892 01cc 58       		.sleb128 -40
 3893 01cd 12       		.uleb128 0x12
 3894 01ce 23020000 		.4byte	.LASF32
 3895 01d2 02       		.byte	0x2
 3896 01d3 0D01     		.2byte	0x10d
 3897 01d5 83000000 		.4byte	0x83
 3898 01d9 02       		.uleb128 0x2
 3899 01da 91       		.byte	0x91
 3900 01db 6C       		.sleb128 -20
 3901 01dc 12       		.uleb128 0x12
 3902 01dd 51080000 		.4byte	.LASF33
 3903 01e1 02       		.byte	0x2
 3904 01e2 0E01     		.2byte	0x10e
 3905 01e4 83000000 		.4byte	0x83
 3906 01e8 02       		.uleb128 0x2
 3907 01e9 91       		.byte	0x91
 3908 01ea 60       		.sleb128 -32
 3909 01eb 12       		.uleb128 0x12
 3910 01ec A9060000 		.4byte	.LASF34
 3911 01f0 02       		.byte	0x2
 3912 01f1 0F01     		.2byte	0x10f
 3913 01f3 83000000 		.4byte	0x83
 3914 01f7 05       		.uleb128 0x5
 3915 01f8 03       		.byte	0x3
 3916 01f9 1C000000 		.4byte	compensateRunningStatus.4941
 3917 01fd 12       		.uleb128 0x12
 3918 01fe 8C050000 		.4byte	.LASF35
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 139


 3919 0202 02       		.byte	0x2
 3920 0203 1001     		.2byte	0x110
 3921 0205 83000000 		.4byte	0x83
 3922 0209 02       		.uleb128 0x2
 3923 020a 91       		.byte	0x91
 3924 020b 64       		.sleb128 -28
 3925 020c 12       		.uleb128 0x12
 3926 020d 02050000 		.4byte	.LASF36
 3927 0211 02       		.byte	0x2
 3928 0212 1101     		.2byte	0x111
 3929 0214 B0000000 		.4byte	0xb0
 3930 0218 02       		.uleb128 0x2
 3931 0219 91       		.byte	0x91
 3932 021a 68       		.sleb128 -24
 3933 021b 00       		.byte	0
 3934 021c 06       		.uleb128 0x6
 3935 021d 04       		.byte	0x4
 3936 021e 83000000 		.4byte	0x83
 3937 0222 13       		.uleb128 0x13
 3938 0223 19070000 		.4byte	.LASF61
 3939 0227 02       		.byte	0x2
 3940 0228 7201     		.2byte	0x172
 3941 022a 83000000 		.4byte	0x83
 3942 022e 00000000 		.4byte	.LFB6
 3943 0232 1C000000 		.4byte	.LFE6-.LFB6
 3944 0236 01       		.uleb128 0x1
 3945 0237 9C       		.byte	0x9c
 3946 0238 10       		.uleb128 0x10
 3947 0239 09070000 		.4byte	.LASF38
 3948 023d 02       		.byte	0x2
 3949 023e C101     		.2byte	0x1c1
 3950 0240 B0000000 		.4byte	0xb0
 3951 0244 00000000 		.4byte	.LFB7
 3952 0248 24010000 		.4byte	.LFE7-.LFB7
 3953 024c 01       		.uleb128 0x1
 3954 024d 9C       		.byte	0x9c
 3955 024e BF020000 		.4byte	0x2bf
 3956 0252 11       		.uleb128 0x11
 3957 0253 C0070000 		.4byte	.LASF39
 3958 0257 02       		.byte	0x2
 3959 0258 C101     		.2byte	0x1c1
 3960 025a 83000000 		.4byte	0x83
 3961 025e 02       		.uleb128 0x2
 3962 025f 91       		.byte	0x91
 3963 0260 64       		.sleb128 -28
 3964 0261 11       		.uleb128 0x11
 3965 0262 68070000 		.4byte	.LASF40
 3966 0266 02       		.byte	0x2
 3967 0267 C101     		.2byte	0x1c1
 3968 0269 BF020000 		.4byte	0x2bf
 3969 026d 02       		.uleb128 0x2
 3970 026e 91       		.byte	0x91
 3971 026f 60       		.sleb128 -32
 3972 0270 12       		.uleb128 0x12
 3973 0271 21080000 		.4byte	.LASF41
 3974 0275 02       		.byte	0x2
 3975 0276 C301     		.2byte	0x1c3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 140


 3976 0278 83000000 		.4byte	0x83
 3977 027c 02       		.uleb128 0x2
 3978 027d 91       		.byte	0x91
 3979 027e 74       		.sleb128 -12
 3980 027f 12       		.uleb128 0x12
 3981 0280 BC050000 		.4byte	.LASF42
 3982 0284 02       		.byte	0x2
 3983 0285 C401     		.2byte	0x1c4
 3984 0287 83000000 		.4byte	0x83
 3985 028b 02       		.uleb128 0x2
 3986 028c 91       		.byte	0x91
 3987 028d 70       		.sleb128 -16
 3988 028e 12       		.uleb128 0x12
 3989 028f 2F080000 		.4byte	.LASF43
 3990 0293 02       		.byte	0x2
 3991 0294 C501     		.2byte	0x1c5
 3992 0296 83000000 		.4byte	0x83
 3993 029a 05       		.uleb128 0x5
 3994 029b 03       		.byte	0x3
 3995 029c 20000000 		.4byte	trimRunningStatus.4953
 3996 02a0 12       		.uleb128 0x12
 3997 02a1 8C050000 		.4byte	.LASF35
 3998 02a5 02       		.byte	0x2
 3999 02a6 C601     		.2byte	0x1c6
 4000 02a8 83000000 		.4byte	0x83
 4001 02ac 02       		.uleb128 0x2
 4002 02ad 91       		.byte	0x91
 4003 02ae 68       		.sleb128 -24
 4004 02af 12       		.uleb128 0x12
 4005 02b0 02050000 		.4byte	.LASF36
 4006 02b4 02       		.byte	0x2
 4007 02b5 C701     		.2byte	0x1c7
 4008 02b7 B0000000 		.4byte	0xb0
 4009 02bb 02       		.uleb128 0x2
 4010 02bc 91       		.byte	0x91
 4011 02bd 6C       		.sleb128 -20
 4012 02be 00       		.byte	0
 4013 02bf 06       		.uleb128 0x6
 4014 02c0 04       		.byte	0x4
 4015 02c1 8F000000 		.4byte	0x8f
 4016 02c5 10       		.uleb128 0x10
 4017 02c6 ED030000 		.4byte	.LASF44
 4018 02ca 02       		.byte	0x2
 4019 02cb 3B02     		.2byte	0x23b
 4020 02cd B0000000 		.4byte	0xb0
 4021 02d1 00000000 		.4byte	.LFB8
 4022 02d5 FC000000 		.4byte	.LFE8-.LFB8
 4023 02d9 01       		.uleb128 0x1
 4024 02da 9C       		.byte	0x9c
 4025 02db 3A030000 		.4byte	0x33a
 4026 02df 11       		.uleb128 0x11
 4027 02e0 68070000 		.4byte	.LASF40
 4028 02e4 02       		.byte	0x2
 4029 02e5 3B02     		.2byte	0x23b
 4030 02e7 BF020000 		.4byte	0x2bf
 4031 02eb 02       		.uleb128 0x2
 4032 02ec 91       		.byte	0x91
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 141


 4033 02ed 5C       		.sleb128 -36
 4034 02ee 12       		.uleb128 0x12
 4035 02ef 55000000 		.4byte	.LASF45
 4036 02f3 02       		.byte	0x2
 4037 02f4 3D02     		.2byte	0x23d
 4038 02f6 83000000 		.4byte	0x83
 4039 02fa 02       		.uleb128 0x2
 4040 02fb 91       		.byte	0x91
 4041 02fc 6C       		.sleb128 -20
 4042 02fd 12       		.uleb128 0x12
 4043 02fe 06010000 		.4byte	.LASF46
 4044 0302 02       		.byte	0x2
 4045 0303 3E02     		.2byte	0x23e
 4046 0305 83000000 		.4byte	0x83
 4047 0309 02       		.uleb128 0x2
 4048 030a 91       		.byte	0x91
 4049 030b 64       		.sleb128 -28
 4050 030c 12       		.uleb128 0x12
 4051 030d A0010000 		.4byte	.LASF47
 4052 0311 02       		.byte	0x2
 4053 0312 3F02     		.2byte	0x23f
 4054 0314 8F000000 		.4byte	0x8f
 4055 0318 02       		.uleb128 0x2
 4056 0319 91       		.byte	0x91
 4057 031a 68       		.sleb128 -24
 4058 031b 12       		.uleb128 0x12
 4059 031c 8F030000 		.4byte	.LASF48
 4060 0320 02       		.byte	0x2
 4061 0321 4002     		.2byte	0x240
 4062 0323 8F000000 		.4byte	0x8f
 4063 0327 02       		.uleb128 0x2
 4064 0328 91       		.byte	0x91
 4065 0329 74       		.sleb128 -12
 4066 032a 12       		.uleb128 0x12
 4067 032b 2D010000 		.4byte	.LASF49
 4068 032f 02       		.byte	0x2
 4069 0330 4102     		.2byte	0x241
 4070 0332 B0000000 		.4byte	0xb0
 4071 0336 02       		.uleb128 0x2
 4072 0337 91       		.byte	0x91
 4073 0338 70       		.sleb128 -16
 4074 0339 00       		.byte	0
 4075 033a 14       		.uleb128 0x14
 4076 033b 5C050000 		.4byte	.LASF50
 4077 033f 02       		.byte	0x2
 4078 0340 8802     		.2byte	0x288
 4079 0342 B0000000 		.4byte	0xb0
 4080 0346 00000000 		.4byte	.LFB9
 4081 034a 4C000000 		.4byte	.LFE9-.LFB9
 4082 034e 01       		.uleb128 0x1
 4083 034f 9C       		.byte	0x9c
 4084 0350 64030000 		.4byte	0x364
 4085 0354 12       		.uleb128 0x12
 4086 0355 02050000 		.4byte	.LASF36
 4087 0359 02       		.byte	0x2
 4088 035a 8A02     		.2byte	0x28a
 4089 035c B0000000 		.4byte	0xb0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 142


 4090 0360 02       		.uleb128 0x2
 4091 0361 91       		.byte	0x91
 4092 0362 74       		.sleb128 -12
 4093 0363 00       		.byte	0
 4094 0364 15       		.uleb128 0x15
 4095 0365 9D000000 		.4byte	.LASF122
 4096 0369 02       		.byte	0x2
 4097 036a AD02     		.2byte	0x2ad
 4098 036c 83000000 		.4byte	0x83
 4099 0370 00000000 		.4byte	.LFB10
 4100 0374 20000000 		.4byte	.LFE10-.LFB10
 4101 0378 01       		.uleb128 0x1
 4102 0379 9C       		.byte	0x9c
 4103 037a 8E030000 		.4byte	0x38e
 4104 037e 12       		.uleb128 0x12
 4105 037f 07000000 		.4byte	.LASF51
 4106 0383 02       		.byte	0x2
 4107 0384 AF02     		.2byte	0x2af
 4108 0386 83000000 		.4byte	0x83
 4109 038a 02       		.uleb128 0x2
 4110 038b 91       		.byte	0x91
 4111 038c 74       		.sleb128 -12
 4112 038d 00       		.byte	0
 4113 038e 16       		.uleb128 0x16
 4114 038f 02030000 		.4byte	.LASF52
 4115 0393 02       		.byte	0x2
 4116 0394 DE02     		.2byte	0x2de
 4117 0396 00000000 		.4byte	.LFB11
 4118 039a 54000000 		.4byte	.LFE11-.LFB11
 4119 039e 01       		.uleb128 0x1
 4120 039f 9C       		.byte	0x9c
 4121 03a0 C3030000 		.4byte	0x3c3
 4122 03a4 11       		.uleb128 0x11
 4123 03a5 0F050000 		.4byte	.LASF53
 4124 03a9 02       		.byte	0x2
 4125 03aa DE02     		.2byte	0x2de
 4126 03ac 83000000 		.4byte	0x83
 4127 03b0 02       		.uleb128 0x2
 4128 03b1 91       		.byte	0x91
 4129 03b2 64       		.sleb128 -28
 4130 03b3 12       		.uleb128 0x12
 4131 03b4 7D010000 		.4byte	.LASF26
 4132 03b8 02       		.byte	0x2
 4133 03b9 E002     		.2byte	0x2e0
 4134 03bb 6B000000 		.4byte	0x6b
 4135 03bf 02       		.uleb128 0x2
 4136 03c0 91       		.byte	0x91
 4137 03c1 6F       		.sleb128 -17
 4138 03c2 00       		.byte	0
 4139 03c3 17       		.uleb128 0x17
 4140 03c4 66080000 		.4byte	.LASF54
 4141 03c8 02       		.byte	0x2
 4142 03c9 0303     		.2byte	0x303
 4143 03cb 00000000 		.4byte	.LFB12
 4144 03cf 20000000 		.4byte	.LFE12-.LFB12
 4145 03d3 01       		.uleb128 0x1
 4146 03d4 9C       		.byte	0x9c
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 143


 4147 03d5 16       		.uleb128 0x16
 4148 03d6 79070000 		.4byte	.LASF55
 4149 03da 02       		.byte	0x2
 4150 03db 1503     		.2byte	0x315
 4151 03dd 00000000 		.4byte	.LFB13
 4152 03e1 60000000 		.4byte	.LFE13-.LFB13
 4153 03e5 01       		.uleb128 0x1
 4154 03e6 9C       		.byte	0x9c
 4155 03e7 FB030000 		.4byte	0x3fb
 4156 03eb 12       		.uleb128 0x12
 4157 03ec 7D010000 		.4byte	.LASF26
 4158 03f0 02       		.byte	0x2
 4159 03f1 1803     		.2byte	0x318
 4160 03f3 6B000000 		.4byte	0x6b
 4161 03f7 02       		.uleb128 0x2
 4162 03f8 91       		.byte	0x91
 4163 03f9 6F       		.sleb128 -17
 4164 03fa 00       		.byte	0
 4165 03fb 18       		.uleb128 0x18
 4166 03fc 1A010000 		.4byte	.LASF78
 4167 0400 02       		.byte	0x2
 4168 0401 3803     		.2byte	0x338
 4169 0403 83000000 		.4byte	0x83
 4170 0407 00000000 		.4byte	.LFB14
 4171 040b 1C000000 		.4byte	.LFE14-.LFB14
 4172 040f 01       		.uleb128 0x1
 4173 0410 9C       		.byte	0x9c
 4174 0411 10       		.uleb128 0x10
 4175 0412 89070000 		.4byte	.LASF56
 4176 0416 02       		.byte	0x2
 4177 0417 5303     		.2byte	0x353
 4178 0419 83000000 		.4byte	0x83
 4179 041d 00000000 		.4byte	.LFB15
 4180 0421 34000000 		.4byte	.LFE15-.LFB15
 4181 0425 01       		.uleb128 0x1
 4182 0426 9C       		.byte	0x9c
 4183 0427 4A040000 		.4byte	0x44a
 4184 042b 11       		.uleb128 0x11
 4185 042c C0070000 		.4byte	.LASF39
 4186 0430 02       		.byte	0x2
 4187 0431 5303     		.2byte	0x353
 4188 0433 83000000 		.4byte	0x83
 4189 0437 02       		.uleb128 0x2
 4190 0438 91       		.byte	0x91
 4191 0439 6C       		.sleb128 -20
 4192 043a 12       		.uleb128 0x12
 4193 043b 2C040000 		.4byte	.LASF57
 4194 043f 02       		.byte	0x2
 4195 0440 5503     		.2byte	0x355
 4196 0442 83000000 		.4byte	0x83
 4197 0446 02       		.uleb128 0x2
 4198 0447 91       		.byte	0x91
 4199 0448 74       		.sleb128 -12
 4200 0449 00       		.byte	0
 4201 044a 16       		.uleb128 0x16
 4202 044b 16050000 		.4byte	.LASF58
 4203 044f 02       		.byte	0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 144


 4204 0450 9603     		.2byte	0x396
 4205 0452 00000000 		.4byte	.LFB16
 4206 0456 40000000 		.4byte	.LFE16-.LFB16
 4207 045a 01       		.uleb128 0x1
 4208 045b 9C       		.byte	0x9c
 4209 045c 70040000 		.4byte	0x470
 4210 0460 11       		.uleb128 0x11
 4211 0461 E4010000 		.4byte	.LASF59
 4212 0465 02       		.byte	0x2
 4213 0466 9603     		.2byte	0x396
 4214 0468 83000000 		.4byte	0x83
 4215 046c 02       		.uleb128 0x2
 4216 046d 91       		.byte	0x91
 4217 046e 74       		.sleb128 -12
 4218 046f 00       		.byte	0
 4219 0470 16       		.uleb128 0x16
 4220 0471 D6070000 		.4byte	.LASF60
 4221 0475 02       		.byte	0x2
 4222 0476 B403     		.2byte	0x3b4
 4223 0478 00000000 		.4byte	.LFB17
 4224 047c 34000000 		.4byte	.LFE17-.LFB17
 4225 0480 01       		.uleb128 0x1
 4226 0481 9C       		.byte	0x9c
 4227 0482 96040000 		.4byte	0x496
 4228 0486 12       		.uleb128 0x12
 4229 0487 7D010000 		.4byte	.LASF26
 4230 048b 02       		.byte	0x2
 4231 048c B603     		.2byte	0x3b6
 4232 048e 6B000000 		.4byte	0x6b
 4233 0492 02       		.uleb128 0x2
 4234 0493 91       		.byte	0x91
 4235 0494 6F       		.sleb128 -17
 4236 0495 00       		.byte	0
 4237 0496 13       		.uleb128 0x13
 4238 0497 8C060000 		.4byte	.LASF62
 4239 049b 02       		.byte	0x2
 4240 049c C903     		.2byte	0x3c9
 4241 049e 83000000 		.4byte	0x83
 4242 04a2 00000000 		.4byte	.LFB18
 4243 04a6 20000000 		.4byte	.LFE18-.LFB18
 4244 04aa 01       		.uleb128 0x1
 4245 04ab 9C       		.byte	0x9c
 4246 04ac 16       		.uleb128 0x16
 4247 04ad 46000000 		.4byte	.LASF63
 4248 04b1 02       		.byte	0x2
 4249 04b2 D703     		.2byte	0x3d7
 4250 04b4 00000000 		.4byte	.LFB19
 4251 04b8 50000000 		.4byte	.LFE19-.LFB19
 4252 04bc 01       		.uleb128 0x1
 4253 04bd 9C       		.byte	0x9c
 4254 04be D2040000 		.4byte	0x4d2
 4255 04c2 12       		.uleb128 0x12
 4256 04c3 7D010000 		.4byte	.LASF26
 4257 04c7 02       		.byte	0x2
 4258 04c8 D903     		.2byte	0x3d9
 4259 04ca 6B000000 		.4byte	0x6b
 4260 04ce 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 145


 4261 04cf 91       		.byte	0x91
 4262 04d0 6F       		.sleb128 -17
 4263 04d1 00       		.byte	0
 4264 04d2 10       		.uleb128 0x10
 4265 04d3 AB030000 		.4byte	.LASF64
 4266 04d7 02       		.byte	0x2
 4267 04d8 F903     		.2byte	0x3f9
 4268 04da 83000000 		.4byte	0x83
 4269 04de 00000000 		.4byte	.LFB20
 4270 04e2 34000000 		.4byte	.LFE20-.LFB20
 4271 04e6 01       		.uleb128 0x1
 4272 04e7 9C       		.byte	0x9c
 4273 04e8 FC040000 		.4byte	0x4fc
 4274 04ec 11       		.uleb128 0x11
 4275 04ed 65000000 		.4byte	.LASF65
 4276 04f1 02       		.byte	0x2
 4277 04f2 F903     		.2byte	0x3f9
 4278 04f4 83000000 		.4byte	0x83
 4279 04f8 02       		.uleb128 0x2
 4280 04f9 91       		.byte	0x91
 4281 04fa 74       		.sleb128 -12
 4282 04fb 00       		.byte	0
 4283 04fc 16       		.uleb128 0x16
 4284 04fd 36000000 		.4byte	.LASF66
 4285 0501 02       		.byte	0x2
 4286 0502 1704     		.2byte	0x417
 4287 0504 00000000 		.4byte	.LFB21
 4288 0508 5C000000 		.4byte	.LFE21-.LFB21
 4289 050c 01       		.uleb128 0x1
 4290 050d 9C       		.byte	0x9c
 4291 050e 40050000 		.4byte	0x540
 4292 0512 11       		.uleb128 0x11
 4293 0513 65000000 		.4byte	.LASF65
 4294 0517 02       		.byte	0x2
 4295 0518 1704     		.2byte	0x417
 4296 051a 83000000 		.4byte	0x83
 4297 051e 02       		.uleb128 0x2
 4298 051f 91       		.byte	0x91
 4299 0520 6C       		.sleb128 -20
 4300 0521 11       		.uleb128 0x11
 4301 0522 C0070000 		.4byte	.LASF39
 4302 0526 02       		.byte	0x2
 4303 0527 1704     		.2byte	0x417
 4304 0529 83000000 		.4byte	0x83
 4305 052d 02       		.uleb128 0x2
 4306 052e 91       		.byte	0x91
 4307 052f 68       		.sleb128 -24
 4308 0530 12       		.uleb128 0x12
 4309 0531 84080000 		.4byte	.LASF67
 4310 0535 02       		.byte	0x2
 4311 0536 1904     		.2byte	0x419
 4312 0538 83000000 		.4byte	0x83
 4313 053c 02       		.uleb128 0x2
 4314 053d 91       		.byte	0x91
 4315 053e 74       		.sleb128 -12
 4316 053f 00       		.byte	0
 4317 0540 14       		.uleb128 0x14
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 146


 4318 0541 41080000 		.4byte	.LASF68
 4319 0545 02       		.byte	0x2
 4320 0546 3304     		.2byte	0x433
 4321 0548 83000000 		.4byte	0x83
 4322 054c 00000000 		.4byte	.LFB22
 4323 0550 24000000 		.4byte	.LFE22-.LFB22
 4324 0554 01       		.uleb128 0x1
 4325 0555 9C       		.byte	0x9c
 4326 0556 6A050000 		.4byte	0x56a
 4327 055a 11       		.uleb128 0x11
 4328 055b 65000000 		.4byte	.LASF65
 4329 055f 02       		.byte	0x2
 4330 0560 3304     		.2byte	0x433
 4331 0562 83000000 		.4byte	0x83
 4332 0566 02       		.uleb128 0x2
 4333 0567 91       		.byte	0x91
 4334 0568 74       		.sleb128 -12
 4335 0569 00       		.byte	0
 4336 056a 16       		.uleb128 0x16
 4337 056b F6070000 		.4byte	.LASF69
 4338 056f 02       		.byte	0x2
 4339 0570 5004     		.2byte	0x450
 4340 0572 00000000 		.4byte	.LFB23
 4341 0576 6C000000 		.4byte	.LFE23-.LFB23
 4342 057a 01       		.uleb128 0x1
 4343 057b 9C       		.byte	0x9c
 4344 057c AE050000 		.4byte	0x5ae
 4345 0580 11       		.uleb128 0x11
 4346 0581 65000000 		.4byte	.LASF65
 4347 0585 02       		.byte	0x2
 4348 0586 5004     		.2byte	0x450
 4349 0588 83000000 		.4byte	0x83
 4350 058c 02       		.uleb128 0x2
 4351 058d 91       		.byte	0x91
 4352 058e 6C       		.sleb128 -20
 4353 058f 11       		.uleb128 0x11
 4354 0590 F3010000 		.4byte	.LASF70
 4355 0594 02       		.byte	0x2
 4356 0595 5004     		.2byte	0x450
 4357 0597 83000000 		.4byte	0x83
 4358 059b 02       		.uleb128 0x2
 4359 059c 91       		.byte	0x91
 4360 059d 68       		.sleb128 -24
 4361 059e 12       		.uleb128 0x12
 4362 059f 84080000 		.4byte	.LASF67
 4363 05a3 02       		.byte	0x2
 4364 05a4 5204     		.2byte	0x452
 4365 05a6 83000000 		.4byte	0x83
 4366 05aa 02       		.uleb128 0x2
 4367 05ab 91       		.byte	0x91
 4368 05ac 74       		.sleb128 -12
 4369 05ad 00       		.byte	0
 4370 05ae 10       		.uleb128 0x10
 4371 05af DD020000 		.4byte	.LASF71
 4372 05b3 02       		.byte	0x2
 4373 05b4 7104     		.2byte	0x471
 4374 05b6 83000000 		.4byte	0x83
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 147


 4375 05ba 00000000 		.4byte	.LFB24
 4376 05be 44000000 		.4byte	.LFE24-.LFB24
 4377 05c2 01       		.uleb128 0x1
 4378 05c3 9C       		.byte	0x9c
 4379 05c4 D8050000 		.4byte	0x5d8
 4380 05c8 11       		.uleb128 0x11
 4381 05c9 65000000 		.4byte	.LASF65
 4382 05cd 02       		.byte	0x2
 4383 05ce 7104     		.2byte	0x471
 4384 05d0 83000000 		.4byte	0x83
 4385 05d4 02       		.uleb128 0x2
 4386 05d5 91       		.byte	0x91
 4387 05d6 74       		.sleb128 -12
 4388 05d7 00       		.byte	0
 4389 05d8 16       		.uleb128 0x16
 4390 05d9 A5020000 		.4byte	.LASF72
 4391 05dd 02       		.byte	0x2
 4392 05de 9A04     		.2byte	0x49a
 4393 05e0 00000000 		.4byte	.LFB25
 4394 05e4 60000000 		.4byte	.LFE25-.LFB25
 4395 05e8 01       		.uleb128 0x1
 4396 05e9 9C       		.byte	0x9c
 4397 05ea FE050000 		.4byte	0x5fe
 4398 05ee 11       		.uleb128 0x11
 4399 05ef D1020000 		.4byte	.LASF73
 4400 05f3 02       		.byte	0x2
 4401 05f4 9A04     		.2byte	0x49a
 4402 05f6 83000000 		.4byte	0x83
 4403 05fa 02       		.uleb128 0x2
 4404 05fb 91       		.byte	0x91
 4405 05fc 74       		.sleb128 -12
 4406 05fd 00       		.byte	0
 4407 05fe 16       		.uleb128 0x16
 4408 05ff F9060000 		.4byte	.LASF74
 4409 0603 02       		.byte	0x2
 4410 0604 CA04     		.2byte	0x4ca
 4411 0606 00000000 		.4byte	.LFB26
 4412 060a 6C000000 		.4byte	.LFE26-.LFB26
 4413 060e 01       		.uleb128 0x1
 4414 060f 9C       		.byte	0x9c
 4415 0610 24060000 		.4byte	0x624
 4416 0614 11       		.uleb128 0x11
 4417 0615 D1020000 		.4byte	.LASF73
 4418 0619 02       		.byte	0x2
 4419 061a CA04     		.2byte	0x4ca
 4420 061c 83000000 		.4byte	0x83
 4421 0620 02       		.uleb128 0x2
 4422 0621 91       		.byte	0x91
 4423 0622 74       		.sleb128 -12
 4424 0623 00       		.byte	0
 4425 0624 16       		.uleb128 0x16
 4426 0625 0E080000 		.4byte	.LASF75
 4427 0629 02       		.byte	0x2
 4428 062a 0505     		.2byte	0x505
 4429 062c 00000000 		.4byte	.LFB27
 4430 0630 58000000 		.4byte	.LFE27-.LFB27
 4431 0634 01       		.uleb128 0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 148


 4432 0635 9C       		.byte	0x9c
 4433 0636 68060000 		.4byte	0x668
 4434 063a 11       		.uleb128 0x11
 4435 063b AF080000 		.4byte	.LASF76
 4436 063f 02       		.byte	0x2
 4437 0640 0505     		.2byte	0x505
 4438 0642 83000000 		.4byte	0x83
 4439 0646 02       		.uleb128 0x2
 4440 0647 91       		.byte	0x91
 4441 0648 64       		.sleb128 -28
 4442 0649 12       		.uleb128 0x12
 4443 064a 84080000 		.4byte	.LASF67
 4444 064e 02       		.byte	0x2
 4445 064f 0705     		.2byte	0x507
 4446 0651 83000000 		.4byte	0x83
 4447 0655 02       		.uleb128 0x2
 4448 0656 91       		.byte	0x91
 4449 0657 68       		.sleb128 -24
 4450 0658 12       		.uleb128 0x12
 4451 0659 85020000 		.4byte	.LASF77
 4452 065d 02       		.byte	0x2
 4453 065e 0805     		.2byte	0x508
 4454 0660 83000000 		.4byte	0x83
 4455 0664 02       		.uleb128 0x2
 4456 0665 91       		.byte	0x91
 4457 0666 6C       		.sleb128 -20
 4458 0667 00       		.byte	0
 4459 0668 18       		.uleb128 0x18
 4460 0669 8A000000 		.4byte	.LASF79
 4461 066d 02       		.byte	0x2
 4462 066e 2405     		.2byte	0x524
 4463 0670 83000000 		.4byte	0x83
 4464 0674 00000000 		.4byte	.LFB28
 4465 0678 1C000000 		.4byte	.LFE28-.LFB28
 4466 067c 01       		.uleb128 0x1
 4467 067d 9C       		.byte	0x9c
 4468 067e 16       		.uleb128 0x16
 4469 067f 74020000 		.4byte	.LASF80
 4470 0683 02       		.byte	0x2
 4471 0684 3805     		.2byte	0x538
 4472 0686 00000000 		.4byte	.LFB29
 4473 068a 90000000 		.4byte	.LFE29-.LFB29
 4474 068e 01       		.uleb128 0x1
 4475 068f 9C       		.byte	0x9c
 4476 0690 C2060000 		.4byte	0x6c2
 4477 0694 11       		.uleb128 0x11
 4478 0695 65000000 		.4byte	.LASF65
 4479 0699 02       		.byte	0x2
 4480 069a 3805     		.2byte	0x538
 4481 069c 83000000 		.4byte	0x83
 4482 06a0 02       		.uleb128 0x2
 4483 06a1 91       		.byte	0x91
 4484 06a2 6C       		.sleb128 -20
 4485 06a3 11       		.uleb128 0x11
 4486 06a4 56050000 		.4byte	.LASF81
 4487 06a8 02       		.byte	0x2
 4488 06a9 3805     		.2byte	0x538
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 149


 4489 06ab 83000000 		.4byte	0x83
 4490 06af 02       		.uleb128 0x2
 4491 06b0 91       		.byte	0x91
 4492 06b1 68       		.sleb128 -24
 4493 06b2 12       		.uleb128 0x12
 4494 06b3 DB010000 		.4byte	.LASF82
 4495 06b7 02       		.byte	0x2
 4496 06b8 3A05     		.2byte	0x53a
 4497 06ba 83000000 		.4byte	0x83
 4498 06be 02       		.uleb128 0x2
 4499 06bf 91       		.byte	0x91
 4500 06c0 74       		.sleb128 -12
 4501 06c1 00       		.byte	0
 4502 06c2 16       		.uleb128 0x16
 4503 06c3 17040000 		.4byte	.LASF83
 4504 06c7 02       		.byte	0x2
 4505 06c8 5F05     		.2byte	0x55f
 4506 06ca 00000000 		.4byte	.LFB30
 4507 06ce 48000000 		.4byte	.LFE30-.LFB30
 4508 06d2 01       		.uleb128 0x1
 4509 06d3 9C       		.byte	0x9c
 4510 06d4 F7060000 		.4byte	0x6f7
 4511 06d8 11       		.uleb128 0x11
 4512 06d9 CD010000 		.4byte	.LASF84
 4513 06dd 02       		.byte	0x2
 4514 06de 5F05     		.2byte	0x55f
 4515 06e0 83000000 		.4byte	0x83
 4516 06e4 02       		.uleb128 0x2
 4517 06e5 91       		.byte	0x91
 4518 06e6 6C       		.sleb128 -20
 4519 06e7 12       		.uleb128 0x12
 4520 06e8 84080000 		.4byte	.LASF67
 4521 06ec 02       		.byte	0x2
 4522 06ed 6105     		.2byte	0x561
 4523 06ef 83000000 		.4byte	0x83
 4524 06f3 02       		.uleb128 0x2
 4525 06f4 91       		.byte	0x91
 4526 06f5 74       		.sleb128 -12
 4527 06f6 00       		.byte	0
 4528 06f7 18       		.uleb128 0x18
 4529 06f8 D0080000 		.4byte	.LASF85
 4530 06fc 02       		.byte	0x2
 4531 06fd 7605     		.2byte	0x576
 4532 06ff 83000000 		.4byte	0x83
 4533 0703 00000000 		.4byte	.LFB31
 4534 0707 18000000 		.4byte	.LFE31-.LFB31
 4535 070b 01       		.uleb128 0x1
 4536 070c 9C       		.byte	0x9c
 4537 070d 10       		.uleb128 0x10
 4538 070e 45050000 		.4byte	.LASF86
 4539 0712 02       		.byte	0x2
 4540 0713 8805     		.2byte	0x588
 4541 0715 83000000 		.4byte	0x83
 4542 0719 00000000 		.4byte	.LFB32
 4543 071d 40000000 		.4byte	.LFE32-.LFB32
 4544 0721 01       		.uleb128 0x1
 4545 0722 9C       		.byte	0x9c
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 150


 4546 0723 37070000 		.4byte	0x737
 4547 0727 11       		.uleb128 0x11
 4548 0728 65000000 		.4byte	.LASF65
 4549 072c 02       		.byte	0x2
 4550 072d 8805     		.2byte	0x588
 4551 072f 83000000 		.4byte	0x83
 4552 0733 02       		.uleb128 0x2
 4553 0734 91       		.byte	0x91
 4554 0735 74       		.sleb128 -12
 4555 0736 00       		.byte	0
 4556 0737 10       		.uleb128 0x10
 4557 0738 C5070000 		.4byte	.LASF87
 4558 073c 02       		.byte	0x2
 4559 073d 9E05     		.2byte	0x59e
 4560 073f 83000000 		.4byte	0x83
 4561 0743 00000000 		.4byte	.LFB33
 4562 0747 54000000 		.4byte	.LFE33-.LFB33
 4563 074b 01       		.uleb128 0x1
 4564 074c 9C       		.byte	0x9c
 4565 074d 70070000 		.4byte	0x770
 4566 0751 11       		.uleb128 0x11
 4567 0752 65000000 		.4byte	.LASF65
 4568 0756 02       		.byte	0x2
 4569 0757 9E05     		.2byte	0x59e
 4570 0759 83000000 		.4byte	0x83
 4571 075d 02       		.uleb128 0x2
 4572 075e 91       		.byte	0x91
 4573 075f 6C       		.sleb128 -20
 4574 0760 12       		.uleb128 0x12
 4575 0761 DB010000 		.4byte	.LASF82
 4576 0765 02       		.byte	0x2
 4577 0766 A005     		.2byte	0x5a0
 4578 0768 83000000 		.4byte	0x83
 4579 076c 02       		.uleb128 0x2
 4580 076d 91       		.byte	0x91
 4581 076e 74       		.sleb128 -12
 4582 076f 00       		.byte	0
 4583 0770 18       		.uleb128 0x18
 4584 0771 2C070000 		.4byte	.LASF88
 4585 0775 02       		.byte	0x2
 4586 0776 C905     		.2byte	0x5c9
 4587 0778 83000000 		.4byte	0x83
 4588 077c 00000000 		.4byte	.LFB34
 4589 0780 1C000000 		.4byte	.LFE34-.LFB34
 4590 0784 01       		.uleb128 0x1
 4591 0785 9C       		.byte	0x9c
 4592 0786 16       		.uleb128 0x16
 4593 0787 D0050000 		.4byte	.LASF89
 4594 078b 02       		.byte	0x2
 4595 078c E605     		.2byte	0x5e6
 4596 078e 00000000 		.4byte	.LFB35
 4597 0792 70000000 		.4byte	.LFE35-.LFB35
 4598 0796 01       		.uleb128 0x1
 4599 0797 9C       		.byte	0x9c
 4600 0798 CA070000 		.4byte	0x7ca
 4601 079c 11       		.uleb128 0x11
 4602 079d D1020000 		.4byte	.LASF73
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 151


 4603 07a1 02       		.byte	0x2
 4604 07a2 E605     		.2byte	0x5e6
 4605 07a4 83000000 		.4byte	0x83
 4606 07a8 02       		.uleb128 0x2
 4607 07a9 91       		.byte	0x91
 4608 07aa 64       		.sleb128 -28
 4609 07ab 12       		.uleb128 0x12
 4610 07ac 7D010000 		.4byte	.LASF26
 4611 07b0 02       		.byte	0x2
 4612 07b1 E805     		.2byte	0x5e8
 4613 07b3 6B000000 		.4byte	0x6b
 4614 07b7 02       		.uleb128 0x2
 4615 07b8 91       		.byte	0x91
 4616 07b9 6B       		.sleb128 -21
 4617 07ba 12       		.uleb128 0x12
 4618 07bb 77080000 		.4byte	.LASF90
 4619 07bf 02       		.byte	0x2
 4620 07c0 E905     		.2byte	0x5e9
 4621 07c2 83000000 		.4byte	0x83
 4622 07c6 02       		.uleb128 0x2
 4623 07c7 91       		.byte	0x91
 4624 07c8 6C       		.sleb128 -20
 4625 07c9 00       		.byte	0
 4626 07ca 19       		.uleb128 0x19
 4627 07cb A6050000 		.4byte	.LASF91
 4628 07cf 02       		.byte	0x2
 4629 07d0 2006     		.2byte	0x620
 4630 07d2 00000000 		.4byte	.LFB36
 4631 07d6 34000000 		.4byte	.LFE36-.LFB36
 4632 07da 01       		.uleb128 0x1
 4633 07db 9C       		.byte	0x9c
 4634 07dc F0070000 		.4byte	0x7f0
 4635 07e0 11       		.uleb128 0x11
 4636 07e1 38020000 		.4byte	.LASF92
 4637 07e5 02       		.byte	0x2
 4638 07e6 2006     		.2byte	0x620
 4639 07e8 83000000 		.4byte	0x83
 4640 07ec 02       		.uleb128 0x2
 4641 07ed 91       		.byte	0x91
 4642 07ee 74       		.sleb128 -12
 4643 07ef 00       		.byte	0
 4644 07f0 10       		.uleb128 0x10
 4645 07f1 B4020000 		.4byte	.LASF93
 4646 07f5 02       		.byte	0x2
 4647 07f6 3A06     		.2byte	0x63a
 4648 07f8 FD000000 		.4byte	0xfd
 4649 07fc 00000000 		.4byte	.LFB37
 4650 0800 40000000 		.4byte	.LFE37-.LFB37
 4651 0804 01       		.uleb128 0x1
 4652 0805 9C       		.byte	0x9c
 4653 0806 38080000 		.4byte	0x838
 4654 080a 11       		.uleb128 0x11
 4655 080b 65000000 		.4byte	.LASF65
 4656 080f 02       		.byte	0x2
 4657 0810 3A06     		.2byte	0x63a
 4658 0812 83000000 		.4byte	0x83
 4659 0816 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 152


 4660 0817 91       		.byte	0x91
 4661 0818 6C       		.sleb128 -20
 4662 0819 11       		.uleb128 0x11
 4663 081a 74010000 		.4byte	.LASF94
 4664 081e 02       		.byte	0x2
 4665 081f 3A06     		.2byte	0x63a
 4666 0821 FD000000 		.4byte	0xfd
 4667 0825 02       		.uleb128 0x2
 4668 0826 91       		.byte	0x91
 4669 0827 68       		.sleb128 -24
 4670 0828 12       		.uleb128 0x12
 4671 0829 67020000 		.4byte	.LASF95
 4672 082d 02       		.byte	0x2
 4673 082e 3C06     		.2byte	0x63c
 4674 0830 FD000000 		.4byte	0xfd
 4675 0834 02       		.uleb128 0x2
 4676 0835 91       		.byte	0x91
 4677 0836 74       		.sleb128 -12
 4678 0837 00       		.byte	0
 4679 0838 10       		.uleb128 0x10
 4680 0839 C4030000 		.4byte	.LASF96
 4681 083d 02       		.byte	0x2
 4682 083e 5806     		.2byte	0x658
 4683 0840 FD000000 		.4byte	0xfd
 4684 0844 00000000 		.4byte	.LFB38
 4685 0848 34000000 		.4byte	.LFE38-.LFB38
 4686 084c 01       		.uleb128 0x1
 4687 084d 9C       		.byte	0x9c
 4688 084e 71080000 		.4byte	0x871
 4689 0852 11       		.uleb128 0x11
 4690 0853 65000000 		.4byte	.LASF65
 4691 0857 02       		.byte	0x2
 4692 0858 5806     		.2byte	0x658
 4693 085a 83000000 		.4byte	0x83
 4694 085e 02       		.uleb128 0x2
 4695 085f 91       		.byte	0x91
 4696 0860 6C       		.sleb128 -20
 4697 0861 12       		.uleb128 0x12
 4698 0862 24030000 		.4byte	.LASF97
 4699 0866 02       		.byte	0x2
 4700 0867 5A06     		.2byte	0x65a
 4701 0869 FD000000 		.4byte	0xfd
 4702 086d 02       		.uleb128 0x2
 4703 086e 91       		.byte	0x91
 4704 086f 74       		.sleb128 -12
 4705 0870 00       		.byte	0
 4706 0871 16       		.uleb128 0x16
 4707 0872 76030000 		.4byte	.LASF98
 4708 0876 02       		.byte	0x2
 4709 0877 7506     		.2byte	0x675
 4710 0879 00000000 		.4byte	.LFB39
 4711 087d 50000000 		.4byte	.LFE39-.LFB39
 4712 0881 01       		.uleb128 0x1
 4713 0882 9C       		.byte	0x9c
 4714 0883 97080000 		.4byte	0x897
 4715 0887 11       		.uleb128 0x11
 4716 0888 65000000 		.4byte	.LASF65
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 153


 4717 088c 02       		.byte	0x2
 4718 088d 7506     		.2byte	0x675
 4719 088f 83000000 		.4byte	0x83
 4720 0893 02       		.uleb128 0x2
 4721 0894 91       		.byte	0x91
 4722 0895 74       		.sleb128 -12
 4723 0896 00       		.byte	0
 4724 0897 16       		.uleb128 0x16
 4725 0898 A1070000 		.4byte	.LASF99
 4726 089c 02       		.byte	0x2
 4727 089d 8C06     		.2byte	0x68c
 4728 089f 00000000 		.4byte	.LFB40
 4729 08a3 3C000000 		.4byte	.LFE40-.LFB40
 4730 08a7 01       		.uleb128 0x1
 4731 08a8 9C       		.byte	0x9c
 4732 08a9 BD080000 		.4byte	0x8bd
 4733 08ad 11       		.uleb128 0x11
 4734 08ae 65000000 		.4byte	.LASF65
 4735 08b2 02       		.byte	0x2
 4736 08b3 8C06     		.2byte	0x68c
 4737 08b5 83000000 		.4byte	0x83
 4738 08b9 02       		.uleb128 0x2
 4739 08ba 91       		.byte	0x91
 4740 08bb 74       		.sleb128 -12
 4741 08bc 00       		.byte	0
 4742 08bd 17       		.uleb128 0x17
 4743 08be C4080000 		.4byte	.LASF100
 4744 08c2 02       		.byte	0x2
 4745 08c3 AD06     		.2byte	0x6ad
 4746 08c5 00000000 		.4byte	.LFB41
 4747 08c9 EC000000 		.4byte	.LFE41-.LFB41
 4748 08cd 01       		.uleb128 0x1
 4749 08ce 9C       		.byte	0x9c
 4750 08cf 16       		.uleb128 0x16
 4751 08d0 CA040000 		.4byte	.LASF101
 4752 08d4 02       		.byte	0x2
 4753 08d5 EE06     		.2byte	0x6ee
 4754 08d7 00000000 		.4byte	.LFB42
 4755 08db 8A000000 		.4byte	.LFE42-.LFB42
 4756 08df 01       		.uleb128 0x1
 4757 08e0 9C       		.byte	0x9c
 4758 08e1 F5080000 		.4byte	0x8f5
 4759 08e5 11       		.uleb128 0x11
 4760 08e6 65000000 		.4byte	.LASF65
 4761 08ea 02       		.byte	0x2
 4762 08eb EE06     		.2byte	0x6ee
 4763 08ed 83000000 		.4byte	0x83
 4764 08f1 02       		.uleb128 0x2
 4765 08f2 91       		.byte	0x91
 4766 08f3 74       		.sleb128 -12
 4767 08f4 00       		.byte	0
 4768 08f5 1A       		.uleb128 0x1a
 4769 08f6 70000000 		.4byte	.LASF123
 4770 08fa 02       		.byte	0x2
 4771 08fb 3007     		.2byte	0x730
 4772 08fd 00000000 		.4byte	.LFB43
 4773 0901 98000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 154


 4774 0905 01       		.uleb128 0x1
 4775 0906 9C       		.byte	0x9c
 4776 0907 2D090000 		.4byte	0x92d
 4777 090b 12       		.uleb128 0x12
 4778 090c 19030000 		.4byte	.LASF102
 4779 0910 02       		.byte	0x2
 4780 0911 3207     		.2byte	0x732
 4781 0913 83000000 		.4byte	0x83
 4782 0917 02       		.uleb128 0x2
 4783 0918 91       		.byte	0x91
 4784 0919 74       		.sleb128 -12
 4785 091a 12       		.uleb128 0x12
 4786 091b C1060000 		.4byte	.LASF103
 4787 091f 02       		.byte	0x2
 4788 0920 3307     		.2byte	0x733
 4789 0922 83000000 		.4byte	0x83
 4790 0926 05       		.uleb128 0x5
 4791 0927 03       		.byte	0x3
 4792 0928 24000000 		.4byte	lfclkPosedgeEnabledWdtCounter.5126
 4793 092c 00       		.byte	0
 4794 092d 1B       		.uleb128 0x1b
 4795 092e 5A030000 		.4byte	.LASF105
 4796 0932 02       		.byte	0x2
 4797 0933 6607     		.2byte	0x766
 4798 0935 00000000 		.4byte	.LFB44
 4799 0939 3C000000 		.4byte	.LFE44-.LFB44
 4800 093d 01       		.uleb128 0x1
 4801 093e 9C       		.byte	0x9c
 4802 093f 16       		.uleb128 0x16
 4803 0940 7C060000 		.4byte	.LASF106
 4804 0944 02       		.byte	0x2
 4805 0945 D70B     		.2byte	0xbd7
 4806 0947 00000000 		.4byte	.LFB45
 4807 094b 68000000 		.4byte	.LFE45-.LFB45
 4808 094f 01       		.uleb128 0x1
 4809 0950 9C       		.byte	0x9c
 4810 0951 A1090000 		.4byte	0x9a1
 4811 0955 11       		.uleb128 0x11
 4812 0956 65000000 		.4byte	.LASF65
 4813 095a 02       		.byte	0x2
 4814 095b D70B     		.2byte	0xbd7
 4815 095d 83000000 		.4byte	0x83
 4816 0961 02       		.uleb128 0x2
 4817 0962 91       		.byte	0x91
 4818 0963 6C       		.sleb128 -20
 4819 0964 11       		.uleb128 0x11
 4820 0965 EF060000 		.4byte	.LASF107
 4821 0969 02       		.byte	0x2
 4822 096a D70B     		.2byte	0xbd7
 4823 096c F2000000 		.4byte	0xf2
 4824 0970 02       		.uleb128 0x2
 4825 0971 91       		.byte	0x91
 4826 0972 6B       		.sleb128 -21
 4827 0973 11       		.uleb128 0x11
 4828 0974 DF060000 		.4byte	.LASF108
 4829 0978 02       		.byte	0x2
 4830 0979 D70B     		.2byte	0xbd7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 155


 4831 097b 83000000 		.4byte	0x83
 4832 097f 02       		.uleb128 0x2
 4833 0980 91       		.byte	0x91
 4834 0981 64       		.sleb128 -28
 4835 0982 12       		.uleb128 0x12
 4836 0983 DB010000 		.4byte	.LASF82
 4837 0987 02       		.byte	0x2
 4838 0988 D90B     		.2byte	0xbd9
 4839 098a 83000000 		.4byte	0x83
 4840 098e 02       		.uleb128 0x2
 4841 098f 91       		.byte	0x91
 4842 0990 74       		.sleb128 -12
 4843 0991 12       		.uleb128 0x12
 4844 0992 4F030000 		.4byte	.LASF109
 4845 0996 02       		.byte	0x2
 4846 0997 DA0B     		.2byte	0xbda
 4847 0999 83000000 		.4byte	0x83
 4848 099d 02       		.uleb128 0x2
 4849 099e 91       		.byte	0x91
 4850 099f 70       		.sleb128 -16
 4851 09a0 00       		.byte	0
 4852 09a1 16       		.uleb128 0x16
 4853 09a2 62060000 		.4byte	.LASF110
 4854 09a6 02       		.byte	0x2
 4855 09a7 580C     		.2byte	0xc58
 4856 09a9 00000000 		.4byte	.LFB46
 4857 09ad B0000000 		.4byte	.LFE46-.LFB46
 4858 09b1 01       		.uleb128 0x1
 4859 09b2 9C       		.byte	0x9c
 4860 09b3 F4090000 		.4byte	0x9f4
 4861 09b7 11       		.uleb128 0x11
 4862 09b8 65000000 		.4byte	.LASF65
 4863 09bc 02       		.byte	0x2
 4864 09bd 580C     		.2byte	0xc58
 4865 09bf 83000000 		.4byte	0x83
 4866 09c3 02       		.uleb128 0x2
 4867 09c4 91       		.byte	0x91
 4868 09c5 6C       		.sleb128 -20
 4869 09c6 11       		.uleb128 0x11
 4870 09c7 EF060000 		.4byte	.LASF107
 4871 09cb 02       		.byte	0x2
 4872 09cc 580C     		.2byte	0xc58
 4873 09ce F2000000 		.4byte	0xf2
 4874 09d2 02       		.uleb128 0x2
 4875 09d3 91       		.byte	0x91
 4876 09d4 6B       		.sleb128 -21
 4877 09d5 11       		.uleb128 0x11
 4878 09d6 56050000 		.4byte	.LASF81
 4879 09da 02       		.byte	0x2
 4880 09db 580C     		.2byte	0xc58
 4881 09dd 83000000 		.4byte	0x83
 4882 09e1 02       		.uleb128 0x2
 4883 09e2 91       		.byte	0x91
 4884 09e3 64       		.sleb128 -28
 4885 09e4 12       		.uleb128 0x12
 4886 09e5 F9040000 		.4byte	.LASF111
 4887 09e9 02       		.byte	0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 156


 4888 09ea 5A0C     		.2byte	0xc5a
 4889 09ec 83000000 		.4byte	0x83
 4890 09f0 02       		.uleb128 0x2
 4891 09f1 91       		.byte	0x91
 4892 09f2 74       		.sleb128 -12
 4893 09f3 00       		.byte	0
 4894 09f4 0E       		.uleb128 0xe
 4895 09f5 E2040000 		.4byte	.LASF112
 4896 09f9 02       		.byte	0x2
 4897 09fa 1D       		.byte	0x1d
 4898 09fb BC000000 		.4byte	0xbc
 4899 09ff 05       		.uleb128 0x5
 4900 0a00 03       		.byte	0x3
 4901 0a01 00000000 		.4byte	defaultIloTrimRegValue
 4902 0a05 0E       		.uleb128 0xe
 4903 0a06 D0000000 		.4byte	.LASF113
 4904 0a0a 02       		.byte	0x2
 4905 0a0b 22       		.byte	0x22
 4906 0a0c 83000000 		.4byte	0x83
 4907 0a10 05       		.uleb128 0x5
 4908 0a11 03       		.byte	0x3
 4909 0a12 00000000 		.4byte	lfclkPosedgeWdtCounter0Enabled
 4910 0a16 0E       		.uleb128 0xe
 4911 0a17 93080000 		.4byte	.LASF114
 4912 0a1b 02       		.byte	0x2
 4913 0a1c 23       		.byte	0x23
 4914 0a1d 83000000 		.4byte	0x83
 4915 0a21 05       		.uleb128 0x5
 4916 0a22 03       		.byte	0x3
 4917 0a23 04000000 		.4byte	lfclkPosedgeWdtCounter0Mode
 4918 0a27 0E       		.uleb128 0xe
 4919 0a28 E3070000 		.4byte	.LASF115
 4920 0a2c 02       		.byte	0x2
 4921 0a2d 25       		.byte	0x25
 4922 0a2e CD000000 		.4byte	0xcd
 4923 0a32 05       		.uleb128 0x5
 4924 0a33 03       		.byte	0x3
 4925 0a34 08000000 		.4byte	disableServicedIsr
 4926 0a38 0E       		.uleb128 0xe
 4927 0a39 9A020000 		.4byte	.LASF116
 4928 0a3d 02       		.byte	0x2
 4929 0a3e 26       		.byte	0x26
 4930 0a3f CD000000 		.4byte	0xcd
 4931 0a43 05       		.uleb128 0x5
 4932 0a44 03       		.byte	0x3
 4933 0a45 04000000 		.4byte	wdtIsrMask
 4934 0a49 1C       		.uleb128 0x1c
 4935 0a4a 590A0000 		.4byte	0xa59
 4936 0a4e 590A0000 		.4byte	0xa59
 4937 0a52 1D       		.uleb128 0x1d
 4938 0a53 0F010000 		.4byte	0x10f
 4939 0a57 02       		.byte	0x2
 4940 0a58 00       		.byte	0
 4941 0a59 1E       		.uleb128 0x1e
 4942 0a5a 83000000 		.4byte	0x83
 4943 0a5e 0E       		.uleb128 0xe
 4944 0a5f 13000000 		.4byte	.LASF117
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 157


 4945 0a63 02       		.byte	0x2
 4946 0a64 2A       		.byte	0x2a
 4947 0a65 6F0A0000 		.4byte	0xa6f
 4948 0a69 05       		.uleb128 0x5
 4949 0a6a 03       		.byte	0x3
 4950 0a6b 00000000 		.4byte	counterIntMaskTbl
 4951 0a6f 1E       		.uleb128 0x1e
 4952 0a70 490A0000 		.4byte	0xa49
 4953 0a74 1C       		.uleb128 0x1c
 4954 0a75 FD000000 		.4byte	0xfd
 4955 0a79 840A0000 		.4byte	0xa84
 4956 0a7d 1D       		.uleb128 0x1d
 4957 0a7e 0F010000 		.4byte	0x10f
 4958 0a82 02       		.byte	0x2
 4959 0a83 00       		.byte	0
 4960 0a84 0E       		.uleb128 0xe
 4961 0a85 25000000 		.4byte	.LASF118
 4962 0a89 02       		.byte	0x2
 4963 0a8a 44       		.byte	0x44
 4964 0a8b 740A0000 		.4byte	0xa74
 4965 0a8f 05       		.uleb128 0x5
 4966 0a90 03       		.byte	0x3
 4967 0a91 0C000000 		.4byte	cySysWdtCallback
 4968 0a95 1F       		.uleb128 0x1f
 4969 0a96 98050000 		.4byte	.LASF124
 4970 0a9a 04       		.byte	0x4
 4971 0a9b D4       		.byte	0xd4
 4972 0a9c 83000000 		.4byte	0x83
 4973 0aa0 00       		.byte	0
 4974              		.section	.debug_abbrev,"",%progbits
 4975              	.Ldebug_abbrev0:
 4976 0000 01       		.uleb128 0x1
 4977 0001 11       		.uleb128 0x11
 4978 0002 01       		.byte	0x1
 4979 0003 25       		.uleb128 0x25
 4980 0004 0E       		.uleb128 0xe
 4981 0005 13       		.uleb128 0x13
 4982 0006 0B       		.uleb128 0xb
 4983 0007 03       		.uleb128 0x3
 4984 0008 0E       		.uleb128 0xe
 4985 0009 1B       		.uleb128 0x1b
 4986 000a 0E       		.uleb128 0xe
 4987 000b 55       		.uleb128 0x55
 4988 000c 17       		.uleb128 0x17
 4989 000d 11       		.uleb128 0x11
 4990 000e 01       		.uleb128 0x1
 4991 000f 10       		.uleb128 0x10
 4992 0010 17       		.uleb128 0x17
 4993 0011 00       		.byte	0
 4994 0012 00       		.byte	0
 4995 0013 02       		.uleb128 0x2
 4996 0014 24       		.uleb128 0x24
 4997 0015 00       		.byte	0
 4998 0016 0B       		.uleb128 0xb
 4999 0017 0B       		.uleb128 0xb
 5000 0018 3E       		.uleb128 0x3e
 5001 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 158


 5002 001a 03       		.uleb128 0x3
 5003 001b 0E       		.uleb128 0xe
 5004 001c 00       		.byte	0
 5005 001d 00       		.byte	0
 5006 001e 03       		.uleb128 0x3
 5007 001f 24       		.uleb128 0x24
 5008 0020 00       		.byte	0
 5009 0021 0B       		.uleb128 0xb
 5010 0022 0B       		.uleb128 0xb
 5011 0023 3E       		.uleb128 0x3e
 5012 0024 0B       		.uleb128 0xb
 5013 0025 03       		.uleb128 0x3
 5014 0026 08       		.uleb128 0x8
 5015 0027 00       		.byte	0
 5016 0028 00       		.byte	0
 5017 0029 04       		.uleb128 0x4
 5018 002a 16       		.uleb128 0x16
 5019 002b 00       		.byte	0
 5020 002c 03       		.uleb128 0x3
 5021 002d 0E       		.uleb128 0xe
 5022 002e 3A       		.uleb128 0x3a
 5023 002f 0B       		.uleb128 0xb
 5024 0030 3B       		.uleb128 0x3b
 5025 0031 05       		.uleb128 0x5
 5026 0032 49       		.uleb128 0x49
 5027 0033 13       		.uleb128 0x13
 5028 0034 00       		.byte	0
 5029 0035 00       		.byte	0
 5030 0036 05       		.uleb128 0x5
 5031 0037 35       		.uleb128 0x35
 5032 0038 00       		.byte	0
 5033 0039 49       		.uleb128 0x49
 5034 003a 13       		.uleb128 0x13
 5035 003b 00       		.byte	0
 5036 003c 00       		.byte	0
 5037 003d 06       		.uleb128 0x6
 5038 003e 0F       		.uleb128 0xf
 5039 003f 00       		.byte	0
 5040 0040 0B       		.uleb128 0xb
 5041 0041 0B       		.uleb128 0xb
 5042 0042 49       		.uleb128 0x49
 5043 0043 13       		.uleb128 0x13
 5044 0044 00       		.byte	0
 5045 0045 00       		.byte	0
 5046 0046 07       		.uleb128 0x7
 5047 0047 15       		.uleb128 0x15
 5048 0048 00       		.byte	0
 5049 0049 27       		.uleb128 0x27
 5050 004a 19       		.uleb128 0x19
 5051 004b 00       		.byte	0
 5052 004c 00       		.byte	0
 5053 004d 08       		.uleb128 0x8
 5054 004e 04       		.uleb128 0x4
 5055 004f 01       		.byte	0x1
 5056 0050 0B       		.uleb128 0xb
 5057 0051 0B       		.uleb128 0xb
 5058 0052 49       		.uleb128 0x49
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 159


 5059 0053 13       		.uleb128 0x13
 5060 0054 3A       		.uleb128 0x3a
 5061 0055 0B       		.uleb128 0xb
 5062 0056 3B       		.uleb128 0x3b
 5063 0057 0B       		.uleb128 0xb
 5064 0058 01       		.uleb128 0x1
 5065 0059 13       		.uleb128 0x13
 5066 005a 00       		.byte	0
 5067 005b 00       		.byte	0
 5068 005c 09       		.uleb128 0x9
 5069 005d 28       		.uleb128 0x28
 5070 005e 00       		.byte	0
 5071 005f 03       		.uleb128 0x3
 5072 0060 0E       		.uleb128 0xe
 5073 0061 1C       		.uleb128 0x1c
 5074 0062 0B       		.uleb128 0xb
 5075 0063 00       		.byte	0
 5076 0064 00       		.byte	0
 5077 0065 0A       		.uleb128 0xa
 5078 0066 16       		.uleb128 0x16
 5079 0067 00       		.byte	0
 5080 0068 03       		.uleb128 0x3
 5081 0069 0E       		.uleb128 0xe
 5082 006a 3A       		.uleb128 0x3a
 5083 006b 0B       		.uleb128 0xb
 5084 006c 3B       		.uleb128 0x3b
 5085 006d 0B       		.uleb128 0xb
 5086 006e 49       		.uleb128 0x49
 5087 006f 13       		.uleb128 0x13
 5088 0070 00       		.byte	0
 5089 0071 00       		.byte	0
 5090 0072 0B       		.uleb128 0xb
 5091 0073 2E       		.uleb128 0x2e
 5092 0074 00       		.byte	0
 5093 0075 03       		.uleb128 0x3
 5094 0076 0E       		.uleb128 0xe
 5095 0077 3A       		.uleb128 0x3a
 5096 0078 0B       		.uleb128 0xb
 5097 0079 3B       		.uleb128 0x3b
 5098 007a 05       		.uleb128 0x5
 5099 007b 27       		.uleb128 0x27
 5100 007c 19       		.uleb128 0x19
 5101 007d 11       		.uleb128 0x11
 5102 007e 01       		.uleb128 0x1
 5103 007f 12       		.uleb128 0x12
 5104 0080 06       		.uleb128 0x6
 5105 0081 40       		.uleb128 0x40
 5106 0082 18       		.uleb128 0x18
 5107 0083 9742     		.uleb128 0x2117
 5108 0085 19       		.uleb128 0x19
 5109 0086 00       		.byte	0
 5110 0087 00       		.byte	0
 5111 0088 0C       		.uleb128 0xc
 5112 0089 2E       		.uleb128 0x2e
 5113 008a 00       		.byte	0
 5114 008b 3F       		.uleb128 0x3f
 5115 008c 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 160


 5116 008d 03       		.uleb128 0x3
 5117 008e 0E       		.uleb128 0xe
 5118 008f 3A       		.uleb128 0x3a
 5119 0090 0B       		.uleb128 0xb
 5120 0091 3B       		.uleb128 0x3b
 5121 0092 0B       		.uleb128 0xb
 5122 0093 27       		.uleb128 0x27
 5123 0094 19       		.uleb128 0x19
 5124 0095 11       		.uleb128 0x11
 5125 0096 01       		.uleb128 0x1
 5126 0097 12       		.uleb128 0x12
 5127 0098 06       		.uleb128 0x6
 5128 0099 40       		.uleb128 0x40
 5129 009a 18       		.uleb128 0x18
 5130 009b 9742     		.uleb128 0x2117
 5131 009d 19       		.uleb128 0x19
 5132 009e 00       		.byte	0
 5133 009f 00       		.byte	0
 5134 00a0 0D       		.uleb128 0xd
 5135 00a1 2E       		.uleb128 0x2e
 5136 00a2 01       		.byte	0x1
 5137 00a3 3F       		.uleb128 0x3f
 5138 00a4 19       		.uleb128 0x19
 5139 00a5 03       		.uleb128 0x3
 5140 00a6 0E       		.uleb128 0xe
 5141 00a7 3A       		.uleb128 0x3a
 5142 00a8 0B       		.uleb128 0xb
 5143 00a9 3B       		.uleb128 0x3b
 5144 00aa 0B       		.uleb128 0xb
 5145 00ab 27       		.uleb128 0x27
 5146 00ac 19       		.uleb128 0x19
 5147 00ad 11       		.uleb128 0x11
 5148 00ae 01       		.uleb128 0x1
 5149 00af 12       		.uleb128 0x12
 5150 00b0 06       		.uleb128 0x6
 5151 00b1 40       		.uleb128 0x40
 5152 00b2 18       		.uleb128 0x18
 5153 00b3 9642     		.uleb128 0x2116
 5154 00b5 19       		.uleb128 0x19
 5155 00b6 01       		.uleb128 0x1
 5156 00b7 13       		.uleb128 0x13
 5157 00b8 00       		.byte	0
 5158 00b9 00       		.byte	0
 5159 00ba 0E       		.uleb128 0xe
 5160 00bb 34       		.uleb128 0x34
 5161 00bc 00       		.byte	0
 5162 00bd 03       		.uleb128 0x3
 5163 00be 0E       		.uleb128 0xe
 5164 00bf 3A       		.uleb128 0x3a
 5165 00c0 0B       		.uleb128 0xb
 5166 00c1 3B       		.uleb128 0x3b
 5167 00c2 0B       		.uleb128 0xb
 5168 00c3 49       		.uleb128 0x49
 5169 00c4 13       		.uleb128 0x13
 5170 00c5 02       		.uleb128 0x2
 5171 00c6 18       		.uleb128 0x18
 5172 00c7 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 161


 5173 00c8 00       		.byte	0
 5174 00c9 0F       		.uleb128 0xf
 5175 00ca 2E       		.uleb128 0x2e
 5176 00cb 01       		.byte	0x1
 5177 00cc 3F       		.uleb128 0x3f
 5178 00cd 19       		.uleb128 0x19
 5179 00ce 03       		.uleb128 0x3
 5180 00cf 0E       		.uleb128 0xe
 5181 00d0 3A       		.uleb128 0x3a
 5182 00d1 0B       		.uleb128 0xb
 5183 00d2 3B       		.uleb128 0x3b
 5184 00d3 0B       		.uleb128 0xb
 5185 00d4 27       		.uleb128 0x27
 5186 00d5 19       		.uleb128 0x19
 5187 00d6 11       		.uleb128 0x11
 5188 00d7 01       		.uleb128 0x1
 5189 00d8 12       		.uleb128 0x12
 5190 00d9 06       		.uleb128 0x6
 5191 00da 40       		.uleb128 0x40
 5192 00db 18       		.uleb128 0x18
 5193 00dc 9742     		.uleb128 0x2117
 5194 00de 19       		.uleb128 0x19
 5195 00df 01       		.uleb128 0x1
 5196 00e0 13       		.uleb128 0x13
 5197 00e1 00       		.byte	0
 5198 00e2 00       		.byte	0
 5199 00e3 10       		.uleb128 0x10
 5200 00e4 2E       		.uleb128 0x2e
 5201 00e5 01       		.byte	0x1
 5202 00e6 3F       		.uleb128 0x3f
 5203 00e7 19       		.uleb128 0x19
 5204 00e8 03       		.uleb128 0x3
 5205 00e9 0E       		.uleb128 0xe
 5206 00ea 3A       		.uleb128 0x3a
 5207 00eb 0B       		.uleb128 0xb
 5208 00ec 3B       		.uleb128 0x3b
 5209 00ed 05       		.uleb128 0x5
 5210 00ee 27       		.uleb128 0x27
 5211 00ef 19       		.uleb128 0x19
 5212 00f0 49       		.uleb128 0x49
 5213 00f1 13       		.uleb128 0x13
 5214 00f2 11       		.uleb128 0x11
 5215 00f3 01       		.uleb128 0x1
 5216 00f4 12       		.uleb128 0x12
 5217 00f5 06       		.uleb128 0x6
 5218 00f6 40       		.uleb128 0x40
 5219 00f7 18       		.uleb128 0x18
 5220 00f8 9642     		.uleb128 0x2116
 5221 00fa 19       		.uleb128 0x19
 5222 00fb 01       		.uleb128 0x1
 5223 00fc 13       		.uleb128 0x13
 5224 00fd 00       		.byte	0
 5225 00fe 00       		.byte	0
 5226 00ff 11       		.uleb128 0x11
 5227 0100 05       		.uleb128 0x5
 5228 0101 00       		.byte	0
 5229 0102 03       		.uleb128 0x3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 162


 5230 0103 0E       		.uleb128 0xe
 5231 0104 3A       		.uleb128 0x3a
 5232 0105 0B       		.uleb128 0xb
 5233 0106 3B       		.uleb128 0x3b
 5234 0107 05       		.uleb128 0x5
 5235 0108 49       		.uleb128 0x49
 5236 0109 13       		.uleb128 0x13
 5237 010a 02       		.uleb128 0x2
 5238 010b 18       		.uleb128 0x18
 5239 010c 00       		.byte	0
 5240 010d 00       		.byte	0
 5241 010e 12       		.uleb128 0x12
 5242 010f 34       		.uleb128 0x34
 5243 0110 00       		.byte	0
 5244 0111 03       		.uleb128 0x3
 5245 0112 0E       		.uleb128 0xe
 5246 0113 3A       		.uleb128 0x3a
 5247 0114 0B       		.uleb128 0xb
 5248 0115 3B       		.uleb128 0x3b
 5249 0116 05       		.uleb128 0x5
 5250 0117 49       		.uleb128 0x49
 5251 0118 13       		.uleb128 0x13
 5252 0119 02       		.uleb128 0x2
 5253 011a 18       		.uleb128 0x18
 5254 011b 00       		.byte	0
 5255 011c 00       		.byte	0
 5256 011d 13       		.uleb128 0x13
 5257 011e 2E       		.uleb128 0x2e
 5258 011f 00       		.byte	0
 5259 0120 03       		.uleb128 0x3
 5260 0121 0E       		.uleb128 0xe
 5261 0122 3A       		.uleb128 0x3a
 5262 0123 0B       		.uleb128 0xb
 5263 0124 3B       		.uleb128 0x3b
 5264 0125 05       		.uleb128 0x5
 5265 0126 27       		.uleb128 0x27
 5266 0127 19       		.uleb128 0x19
 5267 0128 49       		.uleb128 0x49
 5268 0129 13       		.uleb128 0x13
 5269 012a 11       		.uleb128 0x11
 5270 012b 01       		.uleb128 0x1
 5271 012c 12       		.uleb128 0x12
 5272 012d 06       		.uleb128 0x6
 5273 012e 40       		.uleb128 0x40
 5274 012f 18       		.uleb128 0x18
 5275 0130 9742     		.uleb128 0x2117
 5276 0132 19       		.uleb128 0x19
 5277 0133 00       		.byte	0
 5278 0134 00       		.byte	0
 5279 0135 14       		.uleb128 0x14
 5280 0136 2E       		.uleb128 0x2e
 5281 0137 01       		.byte	0x1
 5282 0138 3F       		.uleb128 0x3f
 5283 0139 19       		.uleb128 0x19
 5284 013a 03       		.uleb128 0x3
 5285 013b 0E       		.uleb128 0xe
 5286 013c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 163


 5287 013d 0B       		.uleb128 0xb
 5288 013e 3B       		.uleb128 0x3b
 5289 013f 05       		.uleb128 0x5
 5290 0140 27       		.uleb128 0x27
 5291 0141 19       		.uleb128 0x19
 5292 0142 49       		.uleb128 0x49
 5293 0143 13       		.uleb128 0x13
 5294 0144 11       		.uleb128 0x11
 5295 0145 01       		.uleb128 0x1
 5296 0146 12       		.uleb128 0x12
 5297 0147 06       		.uleb128 0x6
 5298 0148 40       		.uleb128 0x40
 5299 0149 18       		.uleb128 0x18
 5300 014a 9742     		.uleb128 0x2117
 5301 014c 19       		.uleb128 0x19
 5302 014d 01       		.uleb128 0x1
 5303 014e 13       		.uleb128 0x13
 5304 014f 00       		.byte	0
 5305 0150 00       		.byte	0
 5306 0151 15       		.uleb128 0x15
 5307 0152 2E       		.uleb128 0x2e
 5308 0153 01       		.byte	0x1
 5309 0154 03       		.uleb128 0x3
 5310 0155 0E       		.uleb128 0xe
 5311 0156 3A       		.uleb128 0x3a
 5312 0157 0B       		.uleb128 0xb
 5313 0158 3B       		.uleb128 0x3b
 5314 0159 05       		.uleb128 0x5
 5315 015a 27       		.uleb128 0x27
 5316 015b 19       		.uleb128 0x19
 5317 015c 49       		.uleb128 0x49
 5318 015d 13       		.uleb128 0x13
 5319 015e 11       		.uleb128 0x11
 5320 015f 01       		.uleb128 0x1
 5321 0160 12       		.uleb128 0x12
 5322 0161 06       		.uleb128 0x6
 5323 0162 40       		.uleb128 0x40
 5324 0163 18       		.uleb128 0x18
 5325 0164 9742     		.uleb128 0x2117
 5326 0166 19       		.uleb128 0x19
 5327 0167 01       		.uleb128 0x1
 5328 0168 13       		.uleb128 0x13
 5329 0169 00       		.byte	0
 5330 016a 00       		.byte	0
 5331 016b 16       		.uleb128 0x16
 5332 016c 2E       		.uleb128 0x2e
 5333 016d 01       		.byte	0x1
 5334 016e 3F       		.uleb128 0x3f
 5335 016f 19       		.uleb128 0x19
 5336 0170 03       		.uleb128 0x3
 5337 0171 0E       		.uleb128 0xe
 5338 0172 3A       		.uleb128 0x3a
 5339 0173 0B       		.uleb128 0xb
 5340 0174 3B       		.uleb128 0x3b
 5341 0175 05       		.uleb128 0x5
 5342 0176 27       		.uleb128 0x27
 5343 0177 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 164


 5344 0178 11       		.uleb128 0x11
 5345 0179 01       		.uleb128 0x1
 5346 017a 12       		.uleb128 0x12
 5347 017b 06       		.uleb128 0x6
 5348 017c 40       		.uleb128 0x40
 5349 017d 18       		.uleb128 0x18
 5350 017e 9642     		.uleb128 0x2116
 5351 0180 19       		.uleb128 0x19
 5352 0181 01       		.uleb128 0x1
 5353 0182 13       		.uleb128 0x13
 5354 0183 00       		.byte	0
 5355 0184 00       		.byte	0
 5356 0185 17       		.uleb128 0x17
 5357 0186 2E       		.uleb128 0x2e
 5358 0187 00       		.byte	0
 5359 0188 3F       		.uleb128 0x3f
 5360 0189 19       		.uleb128 0x19
 5361 018a 03       		.uleb128 0x3
 5362 018b 0E       		.uleb128 0xe
 5363 018c 3A       		.uleb128 0x3a
 5364 018d 0B       		.uleb128 0xb
 5365 018e 3B       		.uleb128 0x3b
 5366 018f 05       		.uleb128 0x5
 5367 0190 27       		.uleb128 0x27
 5368 0191 19       		.uleb128 0x19
 5369 0192 11       		.uleb128 0x11
 5370 0193 01       		.uleb128 0x1
 5371 0194 12       		.uleb128 0x12
 5372 0195 06       		.uleb128 0x6
 5373 0196 40       		.uleb128 0x40
 5374 0197 18       		.uleb128 0x18
 5375 0198 9642     		.uleb128 0x2116
 5376 019a 19       		.uleb128 0x19
 5377 019b 00       		.byte	0
 5378 019c 00       		.byte	0
 5379 019d 18       		.uleb128 0x18
 5380 019e 2E       		.uleb128 0x2e
 5381 019f 00       		.byte	0
 5382 01a0 3F       		.uleb128 0x3f
 5383 01a1 19       		.uleb128 0x19
 5384 01a2 03       		.uleb128 0x3
 5385 01a3 0E       		.uleb128 0xe
 5386 01a4 3A       		.uleb128 0x3a
 5387 01a5 0B       		.uleb128 0xb
 5388 01a6 3B       		.uleb128 0x3b
 5389 01a7 05       		.uleb128 0x5
 5390 01a8 27       		.uleb128 0x27
 5391 01a9 19       		.uleb128 0x19
 5392 01aa 49       		.uleb128 0x49
 5393 01ab 13       		.uleb128 0x13
 5394 01ac 11       		.uleb128 0x11
 5395 01ad 01       		.uleb128 0x1
 5396 01ae 12       		.uleb128 0x12
 5397 01af 06       		.uleb128 0x6
 5398 01b0 40       		.uleb128 0x40
 5399 01b1 18       		.uleb128 0x18
 5400 01b2 9742     		.uleb128 0x2117
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 165


 5401 01b4 19       		.uleb128 0x19
 5402 01b5 00       		.byte	0
 5403 01b6 00       		.byte	0
 5404 01b7 19       		.uleb128 0x19
 5405 01b8 2E       		.uleb128 0x2e
 5406 01b9 01       		.byte	0x1
 5407 01ba 3F       		.uleb128 0x3f
 5408 01bb 19       		.uleb128 0x19
 5409 01bc 03       		.uleb128 0x3
 5410 01bd 0E       		.uleb128 0xe
 5411 01be 3A       		.uleb128 0x3a
 5412 01bf 0B       		.uleb128 0xb
 5413 01c0 3B       		.uleb128 0x3b
 5414 01c1 05       		.uleb128 0x5
 5415 01c2 27       		.uleb128 0x27
 5416 01c3 19       		.uleb128 0x19
 5417 01c4 11       		.uleb128 0x11
 5418 01c5 01       		.uleb128 0x1
 5419 01c6 12       		.uleb128 0x12
 5420 01c7 06       		.uleb128 0x6
 5421 01c8 40       		.uleb128 0x40
 5422 01c9 18       		.uleb128 0x18
 5423 01ca 9742     		.uleb128 0x2117
 5424 01cc 19       		.uleb128 0x19
 5425 01cd 01       		.uleb128 0x1
 5426 01ce 13       		.uleb128 0x13
 5427 01cf 00       		.byte	0
 5428 01d0 00       		.byte	0
 5429 01d1 1A       		.uleb128 0x1a
 5430 01d2 2E       		.uleb128 0x2e
 5431 01d3 01       		.byte	0x1
 5432 01d4 03       		.uleb128 0x3
 5433 01d5 0E       		.uleb128 0xe
 5434 01d6 3A       		.uleb128 0x3a
 5435 01d7 0B       		.uleb128 0xb
 5436 01d8 3B       		.uleb128 0x3b
 5437 01d9 05       		.uleb128 0x5
 5438 01da 27       		.uleb128 0x27
 5439 01db 19       		.uleb128 0x19
 5440 01dc 11       		.uleb128 0x11
 5441 01dd 01       		.uleb128 0x1
 5442 01de 12       		.uleb128 0x12
 5443 01df 06       		.uleb128 0x6
 5444 01e0 40       		.uleb128 0x40
 5445 01e1 18       		.uleb128 0x18
 5446 01e2 9642     		.uleb128 0x2116
 5447 01e4 19       		.uleb128 0x19
 5448 01e5 01       		.uleb128 0x1
 5449 01e6 13       		.uleb128 0x13
 5450 01e7 00       		.byte	0
 5451 01e8 00       		.byte	0
 5452 01e9 1B       		.uleb128 0x1b
 5453 01ea 2E       		.uleb128 0x2e
 5454 01eb 00       		.byte	0
 5455 01ec 03       		.uleb128 0x3
 5456 01ed 0E       		.uleb128 0xe
 5457 01ee 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 166


 5458 01ef 0B       		.uleb128 0xb
 5459 01f0 3B       		.uleb128 0x3b
 5460 01f1 05       		.uleb128 0x5
 5461 01f2 27       		.uleb128 0x27
 5462 01f3 19       		.uleb128 0x19
 5463 01f4 11       		.uleb128 0x11
 5464 01f5 01       		.uleb128 0x1
 5465 01f6 12       		.uleb128 0x12
 5466 01f7 06       		.uleb128 0x6
 5467 01f8 40       		.uleb128 0x40
 5468 01f9 18       		.uleb128 0x18
 5469 01fa 9642     		.uleb128 0x2116
 5470 01fc 19       		.uleb128 0x19
 5471 01fd 00       		.byte	0
 5472 01fe 00       		.byte	0
 5473 01ff 1C       		.uleb128 0x1c
 5474 0200 01       		.uleb128 0x1
 5475 0201 01       		.byte	0x1
 5476 0202 49       		.uleb128 0x49
 5477 0203 13       		.uleb128 0x13
 5478 0204 01       		.uleb128 0x1
 5479 0205 13       		.uleb128 0x13
 5480 0206 00       		.byte	0
 5481 0207 00       		.byte	0
 5482 0208 1D       		.uleb128 0x1d
 5483 0209 21       		.uleb128 0x21
 5484 020a 00       		.byte	0
 5485 020b 49       		.uleb128 0x49
 5486 020c 13       		.uleb128 0x13
 5487 020d 2F       		.uleb128 0x2f
 5488 020e 0B       		.uleb128 0xb
 5489 020f 00       		.byte	0
 5490 0210 00       		.byte	0
 5491 0211 1E       		.uleb128 0x1e
 5492 0212 26       		.uleb128 0x26
 5493 0213 00       		.byte	0
 5494 0214 49       		.uleb128 0x49
 5495 0215 13       		.uleb128 0x13
 5496 0216 00       		.byte	0
 5497 0217 00       		.byte	0
 5498 0218 1F       		.uleb128 0x1f
 5499 0219 34       		.uleb128 0x34
 5500 021a 00       		.byte	0
 5501 021b 03       		.uleb128 0x3
 5502 021c 0E       		.uleb128 0xe
 5503 021d 3A       		.uleb128 0x3a
 5504 021e 0B       		.uleb128 0xb
 5505 021f 3B       		.uleb128 0x3b
 5506 0220 0B       		.uleb128 0xb
 5507 0221 49       		.uleb128 0x49
 5508 0222 13       		.uleb128 0x13
 5509 0223 3F       		.uleb128 0x3f
 5510 0224 19       		.uleb128 0x19
 5511 0225 3C       		.uleb128 0x3c
 5512 0226 19       		.uleb128 0x19
 5513 0227 00       		.byte	0
 5514 0228 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 167


 5515 0229 00       		.byte	0
 5516              		.section	.debug_aranges,"",%progbits
 5517 0000 8C010000 		.4byte	0x18c
 5518 0004 0200     		.2byte	0x2
 5519 0006 00000000 		.4byte	.Ldebug_info0
 5520 000a 04       		.byte	0x4
 5521 000b 00       		.byte	0
 5522 000c 0000     		.2byte	0
 5523 000e 0000     		.2byte	0
 5524 0010 00000000 		.4byte	.LFB0
 5525 0014 4C000000 		.4byte	.LFE0-.LFB0
 5526 0018 00000000 		.4byte	.LFB1
 5527 001c 1C000000 		.4byte	.LFE1-.LFB1
 5528 0020 00000000 		.4byte	.LFB2
 5529 0024 60000000 		.4byte	.LFE2-.LFB2
 5530 0028 00000000 		.4byte	.LFB3
 5531 002c 6C000000 		.4byte	.LFE3-.LFB3
 5532 0030 00000000 		.4byte	.LFB4
 5533 0034 20000000 		.4byte	.LFE4-.LFB4
 5534 0038 00000000 		.4byte	.LFB5
 5535 003c 58010000 		.4byte	.LFE5-.LFB5
 5536 0040 00000000 		.4byte	.LFB6
 5537 0044 1C000000 		.4byte	.LFE6-.LFB6
 5538 0048 00000000 		.4byte	.LFB7
 5539 004c 24010000 		.4byte	.LFE7-.LFB7
 5540 0050 00000000 		.4byte	.LFB8
 5541 0054 FC000000 		.4byte	.LFE8-.LFB8
 5542 0058 00000000 		.4byte	.LFB9
 5543 005c 4C000000 		.4byte	.LFE9-.LFB9
 5544 0060 00000000 		.4byte	.LFB10
 5545 0064 20000000 		.4byte	.LFE10-.LFB10
 5546 0068 00000000 		.4byte	.LFB11
 5547 006c 54000000 		.4byte	.LFE11-.LFB11
 5548 0070 00000000 		.4byte	.LFB12
 5549 0074 20000000 		.4byte	.LFE12-.LFB12
 5550 0078 00000000 		.4byte	.LFB13
 5551 007c 60000000 		.4byte	.LFE13-.LFB13
 5552 0080 00000000 		.4byte	.LFB14
 5553 0084 1C000000 		.4byte	.LFE14-.LFB14
 5554 0088 00000000 		.4byte	.LFB15
 5555 008c 34000000 		.4byte	.LFE15-.LFB15
 5556 0090 00000000 		.4byte	.LFB16
 5557 0094 40000000 		.4byte	.LFE16-.LFB16
 5558 0098 00000000 		.4byte	.LFB17
 5559 009c 34000000 		.4byte	.LFE17-.LFB17
 5560 00a0 00000000 		.4byte	.LFB18
 5561 00a4 20000000 		.4byte	.LFE18-.LFB18
 5562 00a8 00000000 		.4byte	.LFB19
 5563 00ac 50000000 		.4byte	.LFE19-.LFB19
 5564 00b0 00000000 		.4byte	.LFB20
 5565 00b4 34000000 		.4byte	.LFE20-.LFB20
 5566 00b8 00000000 		.4byte	.LFB21
 5567 00bc 5C000000 		.4byte	.LFE21-.LFB21
 5568 00c0 00000000 		.4byte	.LFB22
 5569 00c4 24000000 		.4byte	.LFE22-.LFB22
 5570 00c8 00000000 		.4byte	.LFB23
 5571 00cc 6C000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 168


 5572 00d0 00000000 		.4byte	.LFB24
 5573 00d4 44000000 		.4byte	.LFE24-.LFB24
 5574 00d8 00000000 		.4byte	.LFB25
 5575 00dc 60000000 		.4byte	.LFE25-.LFB25
 5576 00e0 00000000 		.4byte	.LFB26
 5577 00e4 6C000000 		.4byte	.LFE26-.LFB26
 5578 00e8 00000000 		.4byte	.LFB27
 5579 00ec 58000000 		.4byte	.LFE27-.LFB27
 5580 00f0 00000000 		.4byte	.LFB28
 5581 00f4 1C000000 		.4byte	.LFE28-.LFB28
 5582 00f8 00000000 		.4byte	.LFB29
 5583 00fc 90000000 		.4byte	.LFE29-.LFB29
 5584 0100 00000000 		.4byte	.LFB30
 5585 0104 48000000 		.4byte	.LFE30-.LFB30
 5586 0108 00000000 		.4byte	.LFB31
 5587 010c 18000000 		.4byte	.LFE31-.LFB31
 5588 0110 00000000 		.4byte	.LFB32
 5589 0114 40000000 		.4byte	.LFE32-.LFB32
 5590 0118 00000000 		.4byte	.LFB33
 5591 011c 54000000 		.4byte	.LFE33-.LFB33
 5592 0120 00000000 		.4byte	.LFB34
 5593 0124 1C000000 		.4byte	.LFE34-.LFB34
 5594 0128 00000000 		.4byte	.LFB35
 5595 012c 70000000 		.4byte	.LFE35-.LFB35
 5596 0130 00000000 		.4byte	.LFB36
 5597 0134 34000000 		.4byte	.LFE36-.LFB36
 5598 0138 00000000 		.4byte	.LFB37
 5599 013c 40000000 		.4byte	.LFE37-.LFB37
 5600 0140 00000000 		.4byte	.LFB38
 5601 0144 34000000 		.4byte	.LFE38-.LFB38
 5602 0148 00000000 		.4byte	.LFB39
 5603 014c 50000000 		.4byte	.LFE39-.LFB39
 5604 0150 00000000 		.4byte	.LFB40
 5605 0154 3C000000 		.4byte	.LFE40-.LFB40
 5606 0158 00000000 		.4byte	.LFB41
 5607 015c EC000000 		.4byte	.LFE41-.LFB41
 5608 0160 00000000 		.4byte	.LFB42
 5609 0164 8A000000 		.4byte	.LFE42-.LFB42
 5610 0168 00000000 		.4byte	.LFB43
 5611 016c 98000000 		.4byte	.LFE43-.LFB43
 5612 0170 00000000 		.4byte	.LFB44
 5613 0174 3C000000 		.4byte	.LFE44-.LFB44
 5614 0178 00000000 		.4byte	.LFB45
 5615 017c 68000000 		.4byte	.LFE45-.LFB45
 5616 0180 00000000 		.4byte	.LFB46
 5617 0184 B0000000 		.4byte	.LFE46-.LFB46
 5618 0188 00000000 		.4byte	0
 5619 018c 00000000 		.4byte	0
 5620              		.section	.debug_ranges,"",%progbits
 5621              	.Ldebug_ranges0:
 5622 0000 00000000 		.4byte	.LFB0
 5623 0004 4C000000 		.4byte	.LFE0
 5624 0008 00000000 		.4byte	.LFB1
 5625 000c 1C000000 		.4byte	.LFE1
 5626 0010 00000000 		.4byte	.LFB2
 5627 0014 60000000 		.4byte	.LFE2
 5628 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 169


 5629 001c 6C000000 		.4byte	.LFE3
 5630 0020 00000000 		.4byte	.LFB4
 5631 0024 20000000 		.4byte	.LFE4
 5632 0028 00000000 		.4byte	.LFB5
 5633 002c 58010000 		.4byte	.LFE5
 5634 0030 00000000 		.4byte	.LFB6
 5635 0034 1C000000 		.4byte	.LFE6
 5636 0038 00000000 		.4byte	.LFB7
 5637 003c 24010000 		.4byte	.LFE7
 5638 0040 00000000 		.4byte	.LFB8
 5639 0044 FC000000 		.4byte	.LFE8
 5640 0048 00000000 		.4byte	.LFB9
 5641 004c 4C000000 		.4byte	.LFE9
 5642 0050 00000000 		.4byte	.LFB10
 5643 0054 20000000 		.4byte	.LFE10
 5644 0058 00000000 		.4byte	.LFB11
 5645 005c 54000000 		.4byte	.LFE11
 5646 0060 00000000 		.4byte	.LFB12
 5647 0064 20000000 		.4byte	.LFE12
 5648 0068 00000000 		.4byte	.LFB13
 5649 006c 60000000 		.4byte	.LFE13
 5650 0070 00000000 		.4byte	.LFB14
 5651 0074 1C000000 		.4byte	.LFE14
 5652 0078 00000000 		.4byte	.LFB15
 5653 007c 34000000 		.4byte	.LFE15
 5654 0080 00000000 		.4byte	.LFB16
 5655 0084 40000000 		.4byte	.LFE16
 5656 0088 00000000 		.4byte	.LFB17
 5657 008c 34000000 		.4byte	.LFE17
 5658 0090 00000000 		.4byte	.LFB18
 5659 0094 20000000 		.4byte	.LFE18
 5660 0098 00000000 		.4byte	.LFB19
 5661 009c 50000000 		.4byte	.LFE19
 5662 00a0 00000000 		.4byte	.LFB20
 5663 00a4 34000000 		.4byte	.LFE20
 5664 00a8 00000000 		.4byte	.LFB21
 5665 00ac 5C000000 		.4byte	.LFE21
 5666 00b0 00000000 		.4byte	.LFB22
 5667 00b4 24000000 		.4byte	.LFE22
 5668 00b8 00000000 		.4byte	.LFB23
 5669 00bc 6C000000 		.4byte	.LFE23
 5670 00c0 00000000 		.4byte	.LFB24
 5671 00c4 44000000 		.4byte	.LFE24
 5672 00c8 00000000 		.4byte	.LFB25
 5673 00cc 60000000 		.4byte	.LFE25
 5674 00d0 00000000 		.4byte	.LFB26
 5675 00d4 6C000000 		.4byte	.LFE26
 5676 00d8 00000000 		.4byte	.LFB27
 5677 00dc 58000000 		.4byte	.LFE27
 5678 00e0 00000000 		.4byte	.LFB28
 5679 00e4 1C000000 		.4byte	.LFE28
 5680 00e8 00000000 		.4byte	.LFB29
 5681 00ec 90000000 		.4byte	.LFE29
 5682 00f0 00000000 		.4byte	.LFB30
 5683 00f4 48000000 		.4byte	.LFE30
 5684 00f8 00000000 		.4byte	.LFB31
 5685 00fc 18000000 		.4byte	.LFE31
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 170


 5686 0100 00000000 		.4byte	.LFB32
 5687 0104 40000000 		.4byte	.LFE32
 5688 0108 00000000 		.4byte	.LFB33
 5689 010c 54000000 		.4byte	.LFE33
 5690 0110 00000000 		.4byte	.LFB34
 5691 0114 1C000000 		.4byte	.LFE34
 5692 0118 00000000 		.4byte	.LFB35
 5693 011c 70000000 		.4byte	.LFE35
 5694 0120 00000000 		.4byte	.LFB36
 5695 0124 34000000 		.4byte	.LFE36
 5696 0128 00000000 		.4byte	.LFB37
 5697 012c 40000000 		.4byte	.LFE37
 5698 0130 00000000 		.4byte	.LFB38
 5699 0134 34000000 		.4byte	.LFE38
 5700 0138 00000000 		.4byte	.LFB39
 5701 013c 50000000 		.4byte	.LFE39
 5702 0140 00000000 		.4byte	.LFB40
 5703 0144 3C000000 		.4byte	.LFE40
 5704 0148 00000000 		.4byte	.LFB41
 5705 014c EC000000 		.4byte	.LFE41
 5706 0150 00000000 		.4byte	.LFB42
 5707 0154 8A000000 		.4byte	.LFE42
 5708 0158 00000000 		.4byte	.LFB43
 5709 015c 98000000 		.4byte	.LFE43
 5710 0160 00000000 		.4byte	.LFB44
 5711 0164 3C000000 		.4byte	.LFE44
 5712 0168 00000000 		.4byte	.LFB45
 5713 016c 68000000 		.4byte	.LFE45
 5714 0170 00000000 		.4byte	.LFB46
 5715 0174 B0000000 		.4byte	.LFE46
 5716 0178 00000000 		.4byte	0
 5717 017c 00000000 		.4byte	0
 5718              		.section	.debug_line,"",%progbits
 5719              	.Ldebug_line0:
 5720 0000 04070000 		.section	.debug_str,"MS",%progbits,1
 5720      02005C00 
 5720      00000201 
 5720      FB0E0D00 
 5720      01010101 
 5721              	.LASF10:
 5722 0000 75696E74 		.ascii	"uint16\000"
 5722      313600
 5723              	.LASF51:
 5724 0007 6C66636C 		.ascii	"lfclkSource\000"
 5724      6B536F75 
 5724      72636500 
 5725              	.LASF117:
 5726 0013 636F756E 		.ascii	"counterIntMaskTbl\000"
 5726      74657249 
 5726      6E744D61 
 5726      736B5462 
 5726      6C00
 5727              	.LASF118:
 5728 0025 63795379 		.ascii	"cySysWdtCallback\000"
 5728      73576474 
 5728      43616C6C 
 5728      6261636B 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 171


 5728      00
 5729              	.LASF66:
 5730 0036 43795379 		.ascii	"CySysWdtSetMode\000"
 5730      73576474 
 5730      5365744D 
 5730      6F646500 
 5731              	.LASF63:
 5732 0046 43795379 		.ascii	"CySysWdtUnlock\000"
 5732      73576474 
 5732      556E6C6F 
 5732      636B00
 5733              	.LASF45:
 5734 0055 6D656173 		.ascii	"measuredIloFreq\000"
 5734      75726564 
 5734      496C6F46 
 5734      72657100 
 5735              	.LASF65:
 5736 0065 636F756E 		.ascii	"counterNum\000"
 5736      7465724E 
 5736      756D00
 5737              	.LASF123:
 5738 0070 43795379 		.ascii	"CySysClkLfclkPosedgeCatch\000"
 5738      73436C6B 
 5738      4C66636C 
 5738      6B506F73 
 5738      65646765 
 5739              	.LASF79:
 5740 008a 43795379 		.ascii	"CySysWdtGetCascade\000"
 5740      73576474 
 5740      47657443 
 5740      61736361 
 5740      646500
 5741              	.LASF122:
 5742 009d 43795379 		.ascii	"CySysClkGetLfclkSource\000"
 5742      73436C6B 
 5742      4765744C 
 5742      66636C6B 
 5742      536F7572 
 5743              	.LASF25:
 5744 00b4 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5744      73436C6B 
 5744      496C6F53 
 5744      74617274 
 5744      4D656173 
 5745              	.LASF113:
 5746 00d0 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Enabled\000"
 5746      6B506F73 
 5746      65646765 
 5746      57647443 
 5746      6F756E74 
 5747              	.LASF7:
 5748 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 5748      206C6F6E 
 5748      6720756E 
 5748      7369676E 
 5748      65642069 
 5749              	.LASF46:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 172


 5750 0106 63757272 		.ascii	"currentIloTrimValue\000"
 5750      656E7449 
 5750      6C6F5472 
 5750      696D5661 
 5750      6C756500 
 5751              	.LASF78:
 5752 011a 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5752      73436C6B 
 5752      57636F45 
 5752      6E61626C 
 5752      656400
 5753              	.LASF49:
 5754 012d 6572726F 		.ascii	"errorRangeStatus\000"
 5754      7252616E 
 5754      67655374 
 5754      61747573 
 5754      00
 5755              	.LASF104:
 5756 013e 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5756      73436C6B 
 5756      57636F53 
 5756      65744869 
 5756      6768506F 
 5757              	.LASF6:
 5758 015a 6C6F6E67 		.ascii	"long long int\000"
 5758      206C6F6E 
 5758      6720696E 
 5758      7400
 5759              	.LASF0:
 5760 0168 7369676E 		.ascii	"signed char\000"
 5760      65642063 
 5760      68617200 
 5761              	.LASF94:
 5762 0174 66756E63 		.ascii	"function\000"
 5762      74696F6E 
 5762      00
 5763              	.LASF26:
 5764 017d 696E7465 		.ascii	"interruptState\000"
 5764      72727570 
 5764      74537461 
 5764      746500
 5765              	.LASF21:
 5766 018c 63795764 		.ascii	"cyWdtCallback\000"
 5766      7443616C 
 5766      6C626163 
 5766      6B00
 5767              	.LASF12:
 5768 019a 696E7433 		.ascii	"int32\000"
 5768      3200
 5769              	.LASF47:
 5770 01a0 696C6F41 		.ascii	"iloAccuracyValue\000"
 5770      63637572 
 5770      61637956 
 5770      616C7565 
 5770      00
 5771              	.LASF20:
 5772 01b1 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 173


 5772      79735F74 
 5772      696D6572 
 5772      5F64656C 
 5772      61797479 
 5773              	.LASF84:
 5774 01cd 62697473 		.ascii	"bits\000"
 5774      00
 5775              	.LASF4:
 5776 01d2 6C6F6E67 		.ascii	"long int\000"
 5776      20696E74 
 5776      00
 5777              	.LASF82:
 5778 01db 72656756 		.ascii	"regValue\000"
 5778      616C7565 
 5778      00
 5779              	.LASF59:
 5780 01e4 636C6F63 		.ascii	"clockSel\000"
 5780      6B53656C 
 5780      00
 5781              	.LASF9:
 5782 01ed 75696E74 		.ascii	"uint8\000"
 5782      3800
 5783              	.LASF70:
 5784 01f3 656E6162 		.ascii	"enable\000"
 5784      6C6500
 5785              	.LASF14:
 5786 01fa 646F7562 		.ascii	"double\000"
 5786      6C6500
 5787              	.LASF31:
 5788 0201 636F6D70 		.ascii	"compensatedCycles\000"
 5788      656E7361 
 5788      74656443 
 5788      79636C65 
 5788      7300
 5789              	.LASF24:
 5790 0213 43795379 		.ascii	"CySysClkIloStop\000"
 5790      73436C6B 
 5790      496C6F53 
 5790      746F7000 
 5791              	.LASF32:
 5792 0223 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5792      6F6D7065 
 5792      6E736174 
 5792      65644379 
 5792      636C6573 
 5793              	.LASF92:
 5794 0238 636F756E 		.ascii	"countersMask\000"
 5794      74657273 
 5794      4D61736B 
 5794      00
 5795              	.LASF11:
 5796 0245 75696E74 		.ascii	"uint32\000"
 5796      333200
 5797              	.LASF29:
 5798 024c 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5798      73436C6B 
 5798      496C6F53 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 174


 5798      746F704D 
 5798      65617375 
 5799              	.LASF95:
 5800 0267 70726576 		.ascii	"prevCallback\000"
 5800      43616C6C 
 5800      6261636B 
 5800      00
 5801              	.LASF80:
 5802 0274 43795379 		.ascii	"CySysWdtSetMatch\000"
 5802      73576474 
 5802      5365744D 
 5802      61746368 
 5802      00
 5803              	.LASF77:
 5804 0285 636F756E 		.ascii	"countersEnableStatus\000"
 5804      74657273 
 5804      456E6162 
 5804      6C655374 
 5804      61747573 
 5805              	.LASF116:
 5806 029a 77647449 		.ascii	"wdtIsrMask\000"
 5806      73724D61 
 5806      736B00
 5807              	.LASF72:
 5808 02a5 43795379 		.ascii	"CySysWdtEnable\000"
 5808      73576474 
 5808      456E6162 
 5808      6C6500
 5809              	.LASF93:
 5810 02b4 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5810      73576474 
 5810      53657449 
 5810      6E746572 
 5810      72757074 
 5811              	.LASF73:
 5812 02d1 636F756E 		.ascii	"counterMask\000"
 5812      7465724D 
 5812      61736B00 
 5813              	.LASF71:
 5814 02dd 43795379 		.ascii	"CySysWdtGetClearOnMatch\000"
 5814      73576474 
 5814      47657443 
 5814      6C656172 
 5814      4F6E4D61 
 5815              	.LASF8:
 5816 02f5 756E7369 		.ascii	"unsigned int\000"
 5816      676E6564 
 5816      20696E74 
 5816      00
 5817              	.LASF52:
 5818 0302 43795379 		.ascii	"CySysClkSetLfclkSource\000"
 5818      73436C6B 
 5818      5365744C 
 5818      66636C6B 
 5818      536F7572 
 5819              	.LASF102:
 5820 0319 66697273 		.ascii	"firstCount\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 175


 5820      74436F75 
 5820      6E7400
 5821              	.LASF97:
 5822 0324 72657443 		.ascii	"retCallback\000"
 5822      616C6C62 
 5822      61636B00 
 5823              	.LASF30:
 5824 0330 64657369 		.ascii	"desiredDelay\000"
 5824      72656444 
 5824      656C6179 
 5824      00
 5825              	.LASF5:
 5826 033d 6C6F6E67 		.ascii	"long unsigned int\000"
 5826      20756E73 
 5826      69676E65 
 5826      6420696E 
 5826      7400
 5827              	.LASF109:
 5828 034f 6D617463 		.ascii	"matchValue\000"
 5828      6856616C 
 5828      756500
 5829              	.LASF105:
 5830 035a 43795379 		.ascii	"CySysClkLfclkPosedgeRestore\000"
 5830      73436C6B 
 5830      4C66636C 
 5830      6B506F73 
 5830      65646765 
 5831              	.LASF98:
 5832 0376 43795379 		.ascii	"CySysWdtEnableCounterIsr\000"
 5832      73576474 
 5832      456E6162 
 5832      6C65436F 
 5832      756E7465 
 5833              	.LASF48:
 5834 038f 7472696D 		.ascii	"trimStep\000"
 5834      53746570 
 5834      00
 5835              	.LASF3:
 5836 0398 73686F72 		.ascii	"short unsigned int\000"
 5836      7420756E 
 5836      7369676E 
 5836      65642069 
 5836      6E7400
 5837              	.LASF64:
 5838 03ab 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5838      73576474 
 5838      47657445 
 5838      6E61626C 
 5838      65645374 
 5839              	.LASF96:
 5840 03c4 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 5840      73576474 
 5840      47657449 
 5840      6E746572 
 5840      72757074 
 5841              	.LASF27:
 5842 03e1 696C6F54 		.ascii	"iloTrimTrig\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 176


 5842      72696D54 
 5842      72696700 
 5843              	.LASF44:
 5844 03ed 43795379 		.ascii	"CySysClkIloUpdateTrimReg\000"
 5844      73436C6B 
 5844      496C6F55 
 5844      70646174 
 5844      65547269 
 5845              	.LASF28:
 5846 0406 43795379 		.ascii	"CySysClkIloStart\000"
 5846      73436C6B 
 5846      496C6F53 
 5846      74617274 
 5846      00
 5847              	.LASF83:
 5848 0417 43795379 		.ascii	"CySysWdtSetToggleBit\000"
 5848      73576474 
 5848      53657454 
 5848      6F67676C 
 5848      65426974 
 5849              	.LASF57:
 5850 042c 706F7765 		.ascii	"powerModeStatus\000"
 5850      724D6F64 
 5850      65537461 
 5850      74757300 
 5851              	.LASF119:
 5852 043c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5852      43313120 
 5852      352E342E 
 5852      31203230 
 5852      31363036 
 5853 046f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5853      20726576 
 5853      6973696F 
 5853      6E203233 
 5853      37373135 
 5854 04a2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5854      66756E63 
 5854      74696F6E 
 5854      2D736563 
 5854      74696F6E 
 5855              	.LASF101:
 5856 04ca 43795379 		.ascii	"CySysWatchdogFeed\000"
 5856      73576174 
 5856      6368646F 
 5856      67466565 
 5856      6400
 5857              	.LASF17:
 5858 04dc 72656733 		.ascii	"reg32\000"
 5858      3200
 5859              	.LASF112:
 5860 04e2 64656661 		.ascii	"defaultIloTrimRegValue\000"
 5860      756C7449 
 5860      6C6F5472 
 5860      696D5265 
 5860      6756616C 
 5861              	.LASF111:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 177


 5862 04f9 746D7056 		.ascii	"tmpValue\000"
 5862      616C7565 
 5862      00
 5863              	.LASF36:
 5864 0502 72657475 		.ascii	"returnStatus\000"
 5864      726E5374 
 5864      61747573 
 5864      00
 5865              	.LASF53:
 5866 050f 736F7572 		.ascii	"source\000"
 5866      636500
 5867              	.LASF58:
 5868 0516 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5868      73436C6B 
 5868      57636F43 
 5868      6C6F636B 
 5868      4F757453 
 5869              	.LASF23:
 5870 0530 73697A65 		.ascii	"sizetype\000"
 5870      74797065 
 5870      00
 5871              	.LASF22:
 5872 0539 6C6F6E67 		.ascii	"long double\000"
 5872      20646F75 
 5872      626C6500 
 5873              	.LASF86:
 5874 0545 43795379 		.ascii	"CySysWdtGetMatch\000"
 5874      73576474 
 5874      4765744D 
 5874      61746368 
 5874      00
 5875              	.LASF81:
 5876 0556 6D617463 		.ascii	"match\000"
 5876      6800
 5877              	.LASF50:
 5878 055c 43795379 		.ascii	"CySysClkIloRestoreFactoryTrim\000"
 5878      73436C6B 
 5878      496C6F52 
 5878      6573746F 
 5878      72654661 
 5879              	.LASF18:
 5880 057a 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5880      59535F54 
 5880      494D4552 
 5880      5F574149 
 5880      5400
 5881              	.LASF35:
 5882 058c 63686563 		.ascii	"checkStatus\000"
 5882      6B537461 
 5882      74757300 
 5883              	.LASF124:
 5884 0598 63796465 		.ascii	"cydelayFreqHz\000"
 5884      6C617946 
 5884      72657148 
 5884      7A00
 5885              	.LASF91:
 5886 05a6 43795379 		.ascii	"CySysWdtResetCounters\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 178


 5886      73576474 
 5886      52657365 
 5886      74436F75 
 5886      6E746572 
 5887              	.LASF42:
 5888 05bc 77616974 		.ascii	"waitUntilCntr1Stops\000"
 5888      556E7469 
 5888      6C436E74 
 5888      72315374 
 5888      6F707300 
 5889              	.LASF89:
 5890 05d0 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5890      73576474 
 5890      436C6561 
 5890      72496E74 
 5890      65727275 
 5891              	.LASF121:
 5892 05e7 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 5892      73657273 
 5892      5C48507A 
 5892      3432305C 
 5892      446F6375 
 5893 0614 6C622D62 		.ascii	"lb-boards\\FPGA Cards\\RETRO-EP4CE15\\PSOC\\USBFS_U"
 5893      6F617264 
 5893      735C4650 
 5893      47412043 
 5893      61726473 
 5894 0643 41525430 		.ascii	"ART01\\USBFS_UART01.cydsn\000"
 5894      315C5553 
 5894      4246535F 
 5894      55415254 
 5894      30312E63 
 5895              	.LASF13:
 5896 065c 666C6F61 		.ascii	"float\000"
 5896      7400
 5897              	.LASF110:
 5898 0662 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5898      7354696D 
 5898      65724465 
 5898      6C617955 
 5898      6E74696C 
 5899              	.LASF106:
 5900 067c 43795379 		.ascii	"CySysTimerDelay\000"
 5900      7354696D 
 5900      65724465 
 5900      6C617900 
 5901              	.LASF62:
 5902 068c 43795379 		.ascii	"CySysWdtLocked\000"
 5902      73576474 
 5902      4C6F636B 
 5902      656400
 5903              	.LASF1:
 5904 069b 756E7369 		.ascii	"unsigned char\000"
 5904      676E6564 
 5904      20636861 
 5904      7200
 5905              	.LASF34:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 179


 5906 06a9 636F6D70 		.ascii	"compensateRunningStatus\000"
 5906      656E7361 
 5906      74655275 
 5906      6E6E696E 
 5906      67537461 
 5907              	.LASF103:
 5908 06c1 6C66636C 		.ascii	"lfclkPosedgeEnabledWdtCounter\000"
 5908      6B506F73 
 5908      65646765 
 5908      456E6162 
 5908      6C656457 
 5909              	.LASF108:
 5910 06df 64656C61 		.ascii	"delay\000"
 5910      7900
 5911              	.LASF2:
 5912 06e5 73686F72 		.ascii	"short int\000"
 5912      7420696E 
 5912      7400
 5913              	.LASF107:
 5914 06ef 64656C61 		.ascii	"delayType\000"
 5914      79547970 
 5914      6500
 5915              	.LASF74:
 5916 06f9 43795379 		.ascii	"CySysWdtDisable\000"
 5916      73576474 
 5916      44697361 
 5916      626C6500 
 5917              	.LASF38:
 5918 0709 43795379 		.ascii	"CySysClkIloTrim\000"
 5918      73436C6B 
 5918      496C6F54 
 5918      72696D00 
 5919              	.LASF61:
 5920 0719 43795379 		.ascii	"CySysClkIloEnabled\000"
 5920      73436C6B 
 5920      496C6F45 
 5920      6E61626C 
 5920      656400
 5921              	.LASF88:
 5922 072c 43795379 		.ascii	"CySysWdtGetInterruptSource\000"
 5922      73576474 
 5922      47657449 
 5922      6E746572 
 5922      72757074 
 5923              	.LASF120:
 5924 0747 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 5924      72617465 
 5924      645F536F 
 5924      75726365 
 5924      5C50536F 
 5925              	.LASF40:
 5926 0768 696C6F41 		.ascii	"iloAccuracyInPPT\000"
 5926      63637572 
 5926      61637949 
 5926      6E505054 
 5926      00
 5927              	.LASF55:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 180


 5928 0779 43795379 		.ascii	"CySysClkWcoStop\000"
 5928      73436C6B 
 5928      57636F53 
 5928      746F7000 
 5929              	.LASF56:
 5930 0789 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 5930      73436C6B 
 5930      57636F53 
 5930      6574506F 
 5930      7765724D 
 5931              	.LASF99:
 5932 07a1 43795379 		.ascii	"CySysWdtDisableCounterIsr\000"
 5932      73576474 
 5932      44697361 
 5932      626C6543 
 5932      6F756E74 
 5933              	.LASF15:
 5934 07bb 63686172 		.ascii	"char\000"
 5934      00
 5935              	.LASF39:
 5936 07c0 6D6F6465 		.ascii	"mode\000"
 5936      00
 5937              	.LASF87:
 5938 07c5 43795379 		.ascii	"CySysWdtGetCount\000"
 5938      73576474 
 5938      47657443 
 5938      6F756E74 
 5938      00
 5939              	.LASF60:
 5940 07d6 43795379 		.ascii	"CySysWdtLock\000"
 5940      73576474 
 5940      4C6F636B 
 5940      00
 5941              	.LASF115:
 5942 07e3 64697361 		.ascii	"disableServicedIsr\000"
 5942      626C6553 
 5942      65727669 
 5942      63656449 
 5942      737200
 5943              	.LASF69:
 5944 07f6 43795379 		.ascii	"CySysWdtSetClearOnMatch\000"
 5944      73576474 
 5944      53657443 
 5944      6C656172 
 5944      4F6E4D61 
 5945              	.LASF75:
 5946 080e 43795379 		.ascii	"CySysWdtSetCascade\000"
 5946      73576474 
 5946      53657443 
 5946      61736361 
 5946      646500
 5947              	.LASF41:
 5948 0821 74696D65 		.ascii	"timeOutClocks\000"
 5948      4F757443 
 5948      6C6F636B 
 5948      7300
 5949              	.LASF43:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 181


 5950 082f 7472696D 		.ascii	"trimRunningStatus\000"
 5950      52756E6E 
 5950      696E6753 
 5950      74617475 
 5950      7300
 5951              	.LASF68:
 5952 0841 43795379 		.ascii	"CySysWdtGetMode\000"
 5952      73576474 
 5952      4765744D 
 5952      6F646500 
 5953              	.LASF33:
 5954 0851 64657369 		.ascii	"desiredDelayInCounts\000"
 5954      72656444 
 5954      656C6179 
 5954      496E436F 
 5954      756E7473 
 5955              	.LASF54:
 5956 0866 43795379 		.ascii	"CySysClkWcoStart\000"
 5956      73436C6B 
 5956      57636F53 
 5956      74617274 
 5956      00
 5957              	.LASF90:
 5958 0877 7764744C 		.ascii	"wdtLockState\000"
 5958      6F636B53 
 5958      74617465 
 5958      00
 5959              	.LASF67:
 5960 0884 636F6E66 		.ascii	"configRegValue\000"
 5960      69675265 
 5960      6756616C 
 5960      756500
 5961              	.LASF114:
 5962 0893 6C66636C 		.ascii	"lfclkPosedgeWdtCounter0Mode\000"
 5962      6B506F73 
 5962      65646765 
 5962      57647443 
 5962      6F756E74 
 5963              	.LASF76:
 5964 08af 63617363 		.ascii	"cascadeMask\000"
 5964      6164654D 
 5964      61736B00 
 5965              	.LASF16:
 5966 08bb 63797374 		.ascii	"cystatus\000"
 5966      61747573 
 5966      00
 5967              	.LASF100:
 5968 08c4 43795379 		.ascii	"CySysWdtIsr\000"
 5968      73576474 
 5968      49737200 
 5969              	.LASF85:
 5970 08d0 43795379 		.ascii	"CySysWdtGetToggleBit\000"
 5970      73576474 
 5970      47657454 
 5970      6F67676C 
 5970      65426974 
 5971              	.LASF37:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccxxFyNc.s 			page 182


 5972 08e5 43795379 		.ascii	"CySysClkIloCompensate\000"
 5972      73436C6B 
 5972      496C6F43 
 5972      6F6D7065 
 5972      6E736174 
 5973              	.LASF19:
 5974 08fb 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
 5974      59535F54 
 5974      494D4552 
 5974      5F494E54 
 5974      45525255 
 5975              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
