ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBUART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBUART_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	USBUART_Start, %function
  31              	USBUART_Start:
  32              	.LFB1:
  33              		.file 1 "Generated_Source\\PSoC4\\USBUART.c"
   1:Generated_Source\PSoC4/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC4/USBUART.c **** * \version 3.10
   4:Generated_Source\PSoC4/USBUART.c **** *
   5:Generated_Source\PSoC4/USBUART.c **** * \brief
   6:Generated_Source\PSoC4/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC4/USBUART.c **** *
   8:Generated_Source\PSoC4/USBUART.c **** * Note:
   9:Generated_Source\PSoC4/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC4/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC4/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC4/USBUART.c **** *
  13:Generated_Source\PSoC4/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC4/USBUART.c **** * \copyright
  15:Generated_Source\PSoC4/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC4/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC4/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC4/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC4/USBUART.c **** 
  21:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC4/USBUART.c **** #include "USBUART_Dp.h"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 2


  25:Generated_Source\PSoC4/USBUART.c **** 
  26:Generated_Source\PSoC4/USBUART.c **** 
  27:Generated_Source\PSoC4/USBUART.c **** /***************************************
  28:Generated_Source\PSoC4/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC4/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC4/USBUART.c **** 
  31:Generated_Source\PSoC4/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC4/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC4/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC4/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC4/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC4/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC4/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC4/USBUART.c **** * functions.
  39:Generated_Source\PSoC4/USBUART.c **** */
  40:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC4/USBUART.c **** 
  42:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC4/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC4/USBUART.c **** 
  46:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC4/USBUART.c ****         {
  49:Generated_Source\PSoC4/USBUART.c ****             0u,
  50:Generated_Source\PSoC4/USBUART.c ****             0u,
  51:Generated_Source\PSoC4/USBUART.c ****             0u,
  52:Generated_Source\PSoC4/USBUART.c ****             0u,
  53:Generated_Source\PSoC4/USBUART.c ****             0u,
  54:Generated_Source\PSoC4/USBUART.c ****             0u,
  55:Generated_Source\PSoC4/USBUART.c ****             0u,
  56:Generated_Source\PSoC4/USBUART.c ****             0u,
  57:Generated_Source\PSoC4/USBUART.c ****             0u,
  58:Generated_Source\PSoC4/USBUART.c ****         };        
  59:Generated_Source\PSoC4/USBUART.c ****     #else
  60:Generated_Source\PSoC4/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC4/USBUART.c ****         
  63:Generated_Source\PSoC4/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC4/USBUART.c **** 
  68:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC4/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC4/USBUART.c ****     
  73:Generated_Source\PSoC4/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC4/USBUART.c **** 
  76:Generated_Source\PSoC4/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC4/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC4/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC4/USBUART.c ****      
  80:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 3


  82:Generated_Source\PSoC4/USBUART.c ****     {
  83:Generated_Source\PSoC4/USBUART.c ****         0u,
  84:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC4/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC4/USBUART.c ****         0u,
  88:Generated_Source\PSoC4/USBUART.c ****         0u,
  89:Generated_Source\PSoC4/USBUART.c ****         0u,
  90:Generated_Source\PSoC4/USBUART.c ****         0u,
  91:Generated_Source\PSoC4/USBUART.c ****         0u,
  92:Generated_Source\PSoC4/USBUART.c ****     };
  93:Generated_Source\PSoC4/USBUART.c **** 
  94:Generated_Source\PSoC4/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC4/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC4/USBUART.c ****     {
  97:Generated_Source\PSoC4/USBUART.c ****         0u,
  98:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC4/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC4/USBUART.c ****     };
 107:Generated_Source\PSoC4/USBUART.c ****     
 108:Generated_Source\PSoC4/USBUART.c **** #else
 109:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC4/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC4/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC4/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC4/USBUART.c ****         {
 114:Generated_Source\PSoC4/USBUART.c ****             0u,
 115:Generated_Source\PSoC4/USBUART.c ****             0u,
 116:Generated_Source\PSoC4/USBUART.c ****             0u,
 117:Generated_Source\PSoC4/USBUART.c ****             0u,
 118:Generated_Source\PSoC4/USBUART.c ****             0u,
 119:Generated_Source\PSoC4/USBUART.c ****             0u,
 120:Generated_Source\PSoC4/USBUART.c ****             0u,
 121:Generated_Source\PSoC4/USBUART.c ****             0u,
 122:Generated_Source\PSoC4/USBUART.c ****             0u,
 123:Generated_Source\PSoC4/USBUART.c ****         };
 124:Generated_Source\PSoC4/USBUART.c **** 
 125:Generated_Source\PSoC4/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC4/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC4/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC4/USBUART.c **** 
 132:Generated_Source\PSoC4/USBUART.c **** 
 133:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC4/USBUART.c **** *
 137:Generated_Source\PSoC4/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC4/USBUART.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 4


 139:Generated_Source\PSoC4/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC4/USBUART.c **** *   operation.
 141:Generated_Source\PSoC4/USBUART.c **** *
 142:Generated_Source\PSoC4/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC4/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC4/USBUART.c **** *
 145:Generated_Source\PSoC4/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC4/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC4/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC4/USBUART.c **** *
 149:Generated_Source\PSoC4/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC4/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC4/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC4/USBUART.c **** *
 153:Generated_Source\PSoC4/USBUART.c **** *  \param device
 154:Generated_Source\PSoC4/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC4/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC4/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC4/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC4/USBUART.c **** *   following list.
 163:Generated_Source\PSoC4/USBUART.c **** *
 164:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC4/USBUART.c **** *
 167:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC4/USBUART.c **** *
 170:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC4/USBUART.c **** *
 179:Generated_Source\PSoC4/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC4/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC4/USBUART.c **** *
 182:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC4/USBUART.c **** *  No.
 184:Generated_Source\PSoC4/USBUART.c **** *
 185:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC4/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC4/USBUART.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0200     		movs	r2, r0
  47 0008 FB1D     		adds	r3, r7, #7
  48 000a 1A70     		strb	r2, [r3]
  49 000c BB1D     		adds	r3, r7, #6
  50 000e 0A1C     		adds	r2, r1, #0
  51 0010 1A70     		strb	r2, [r3]
 188:Generated_Source\PSoC4/USBUART.c ****     if (0u == USBUART_initVar)
  52              		.loc 1 188 0
  53 0012 0A4B     		ldr	r3, .L3
  54 0014 1B78     		ldrb	r3, [r3]
  55 0016 002B     		cmp	r3, #0
  56 0018 04D1     		bne	.L2
 189:Generated_Source\PSoC4/USBUART.c ****     {
 190:Generated_Source\PSoC4/USBUART.c ****         USBUART_Init();
  57              		.loc 1 190 0
  58 001a FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC4/USBUART.c ****         USBUART_initVar = 1u;
  59              		.loc 1 191 0
  60 001e 074B     		ldr	r3, .L3
  61 0020 0122     		movs	r2, #1
  62 0022 1A70     		strb	r2, [r3]
  63              	.L2:
 192:Generated_Source\PSoC4/USBUART.c ****     }
 193:Generated_Source\PSoC4/USBUART.c **** 
 194:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitComponent(device, mode);
  64              		.loc 1 194 0
  65 0024 BB1D     		adds	r3, r7, #6
  66 0026 1A78     		ldrb	r2, [r3]
  67 0028 FB1D     		adds	r3, r7, #7
  68 002a 1B78     		ldrb	r3, [r3]
  69 002c 1100     		movs	r1, r2
  70 002e 1800     		movs	r0, r3
  71 0030 FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC4/USBUART.c **** }
  72              		.loc 1 195 0
  73 0034 C046     		nop
  74 0036 BD46     		mov	sp, r7
  75 0038 02B0     		add	sp, sp, #8
  76              		@ sp needed
  77 003a 80BD     		pop	{r7, pc}
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 003c 00000000 		.word	USBUART_initVar
  82              		.cfi_endproc
  83              	.LFE1:
  84              		.size	USBUART_Start, .-USBUART_Start
  85              		.section	.text.USBUART_Init,"ax",%progbits
  86              		.align	2
  87              		.global	USBUART_Init
  88              		.code	16
  89              		.thumb_func
  90              		.type	USBUART_Init, %function
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 6


  91              	USBUART_Init:
  92              	.LFB2:
 196:Generated_Source\PSoC4/USBUART.c **** 
 197:Generated_Source\PSoC4/USBUART.c **** 
 198:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC4/USBUART.c **** *
 202:Generated_Source\PSoC4/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC4/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC4/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC4/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC4/USBUART.c **** *
 207:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC4/USBUART.c **** *  No.
 209:Generated_Source\PSoC4/USBUART.c **** *
 210:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC4/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC4/USBUART.c **** {
  93              		.loc 1 212 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97 0000 B0B5     		push	{r4, r5, r7, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC4/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 105              		.loc 1 215 0
 106 0004 2C4B     		ldr	r3, .L8
 107 0006 0122     		movs	r2, #1
 108 0008 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/USBUART.c **** 
 217:Generated_Source\PSoC4/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC4/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC4/USBUART.c ****     */
 220:Generated_Source\PSoC4/USBUART.c **** 
 221:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 109              		.loc 1 222 0
 110 000a 2C4B     		ldr	r3, .L8+4
 111 000c 2B4A     		ldr	r2, .L8+4
 112 000e 1268     		ldr	r2, [r2]
 113 0010 2021     		movs	r1, #32
 114 0012 8A43     		bics	r2, r1
 115 0014 1A60     		str	r2, [r3]
 223:Generated_Source\PSoC4/USBUART.c **** 
 224:Generated_Source\PSoC4/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC4/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 116              		.loc 1 225 0
 117 0016 2A4B     		ldr	r3, .L8+8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 7


 118 0018 0A22     		movs	r2, #10
 119 001a 1A60     		str	r2, [r3]
 226:Generated_Source\PSoC4/USBUART.c **** 
 227:Generated_Source\PSoC4/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC4/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC4/USBUART.c ****     */
 230:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 120              		.loc 1 230 0
 121 001c 294B     		ldr	r3, .L8+12
 122 001e 2A4A     		ldr	r2, .L8+16
 123 0020 1A60     		str	r2, [r3]
 231:Generated_Source\PSoC4/USBUART.c **** 
 232:Generated_Source\PSoC4/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 124              		.loc 1 233 0
 125 0022 284B     		ldr	r3, .L8+12
 126 0024 274A     		ldr	r2, .L8+12
 127 0026 1268     		ldr	r2, [r2]
 128 0028 2849     		ldr	r1, .L8+20
 129 002a 0A43     		orrs	r2, r1
 130 002c 1A60     		str	r2, [r3]
 234:Generated_Source\PSoC4/USBUART.c **** 
 235:Generated_Source\PSoC4/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 131              		.loc 1 236 0
 132 002e 254B     		ldr	r3, .L8+12
 133 0030 244A     		ldr	r2, .L8+12
 134 0032 1268     		ldr	r2, [r2]
 135 0034 0421     		movs	r1, #4
 136 0036 8A43     		bics	r2, r1
 137 0038 1A60     		str	r2, [r3]
 237:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 138              		.loc 1 237 0
 139 003a 0220     		movs	r0, #2
 140 003c FFF7FEFF 		bl	CyDelayUs
 238:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 141              		.loc 1 238 0
 142 0040 204B     		ldr	r3, .L8+12
 143 0042 204A     		ldr	r2, .L8+12
 144 0044 1268     		ldr	r2, [r2]
 145 0046 0821     		movs	r1, #8
 146 0048 8A43     		bics	r2, r1
 147 004a 1A60     		str	r2, [r3]
 239:Generated_Source\PSoC4/USBUART.c **** 
 240:Generated_Source\PSoC4/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 148              		.loc 1 241 0
 149 004c 204C     		ldr	r4, .L8+24
 150 004e FFF7FEFF 		bl	CySysClkImoGetUsbLock
 151 0052 031E     		subs	r3, r0, #0
 152 0054 01D0     		beq	.L6
 153              		.loc 1 241 0 is_stmt 0 discriminator 1
 154 0056 0223     		movs	r3, #2
 155 0058 00E0     		b	.L7
 156              	.L6:
 157              		.loc 1 241 0 discriminator 2
 158 005a 0023     		movs	r3, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 8


 159              	.L7:
 160              		.loc 1 241 0 discriminator 4
 161 005c 2360     		str	r3, [r4]
 242:Generated_Source\PSoC4/USBUART.c **** 
 243:Generated_Source\PSoC4/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 162              		.loc 1 244 0 is_stmt 1 discriminator 4
 163 005e 1D4B     		ldr	r3, .L8+28
 164 0060 1D4A     		ldr	r2, .L8+32
 165 0062 1A60     		str	r2, [r3]
 245:Generated_Source\PSoC4/USBUART.c **** 
 246:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 166              		.loc 1 247 0 discriminator 4
 167 0064 1D4B     		ldr	r3, .L8+36
 168 0066 0722     		movs	r2, #7
 169 0068 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/USBUART.c **** 
 249:Generated_Source\PSoC4/USBUART.c **** #else
 250:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 251:Generated_Source\PSoC4/USBUART.c **** 
 252:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC4/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC4/USBUART.c **** 
 256:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 258:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC4/USBUART.c **** 
 261:Generated_Source\PSoC4/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC4/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 263:Generated_Source\PSoC4/USBUART.c **** 
 264:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 265:Generated_Source\PSoC4/USBUART.c **** 
 266:Generated_Source\PSoC4/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC4/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 269:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC4/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC4/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC4/USBUART.c ****     */
 274:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 275:Generated_Source\PSoC4/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC4/USBUART.c **** 
 277:Generated_Source\PSoC4/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 279:Generated_Source\PSoC4/USBUART.c **** 
 280:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC4/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 284:Generated_Source\PSoC4/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 286:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 9


 288:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 289:Generated_Source\PSoC4/USBUART.c **** 
 290:Generated_Source\PSoC4/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC4/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 293:Generated_Source\PSoC4/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 295:Generated_Source\PSoC4/USBUART.c **** 
 296:Generated_Source\PSoC4/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC4/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC4/USBUART.c **** 
 300:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC4/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC4/USBUART.c ****     {
 304:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC4/USBUART.c **** 
 306:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC4/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC4/USBUART.c ****     }
 310:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC4/USBUART.c **** 
 312:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 313:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC4/USBUART.c **** 
 315:Generated_Source\PSoC4/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC4/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 170              		.loc 1 318 0 discriminator 4
 171 006a 0321     		movs	r1, #3
 172 006c 1E20     		movs	r0, #30
 173 006e FFF7FEFF 		bl	CyIntSetPriority
 319:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 174              		.loc 1 319 0 discriminator 4
 175 0072 1B4B     		ldr	r3, .L8+40
 176 0074 1900     		movs	r1, r3
 177 0076 1E20     		movs	r0, #30
 178 0078 FFF7FEFF 		bl	CyIntSetVector
 320:Generated_Source\PSoC4/USBUART.c **** 
 321:Generated_Source\PSoC4/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 179              		.loc 1 322 0 discriminator 4
 180 007c 0321     		movs	r1, #3
 181 007e 1F20     		movs	r0, #31
 182 0080 FFF7FEFF 		bl	CyIntSetPriority
 323:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 183              		.loc 1 323 0 discriminator 4
 184 0084 174B     		ldr	r3, .L8+44
 185 0086 1900     		movs	r1, r3
 186 0088 1F20     		movs	r0, #31
 187 008a FFF7FEFF 		bl	CyIntSetVector
 324:Generated_Source\PSoC4/USBUART.c **** 
 325:Generated_Source\PSoC4/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 10


 188              		.loc 1 326 0 discriminator 4
 189 008e 0321     		movs	r1, #3
 190 0090 0020     		movs	r0, #0
 191 0092 FFF7FEFF 		bl	CyIntSetPriority
 327:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 192              		.loc 1 327 0 discriminator 4
 193 0096 144B     		ldr	r3, .L8+48
 194 0098 1900     		movs	r1, r3
 195 009a 0020     		movs	r0, #0
 196 009c FFF7FEFF 		bl	CyIntSetVector
 328:Generated_Source\PSoC4/USBUART.c **** 
 329:Generated_Source\PSoC4/USBUART.c **** #else
 330:Generated_Source\PSoC4/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 332:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 333:Generated_Source\PSoC4/USBUART.c **** 
 334:Generated_Source\PSoC4/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 336:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 337:Generated_Source\PSoC4/USBUART.c **** 
 338:Generated_Source\PSoC4/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 341:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 342:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC4/USBUART.c **** 
 344:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 347:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 348:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC4/USBUART.c **** 
 350:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 353:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 354:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC4/USBUART.c **** 
 356:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 359:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 360:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC4/USBUART.c **** 
 362:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC4/USBUART.c **** 
 368:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC4/USBUART.c **** 
 374:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 11


 375:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC4/USBUART.c **** 
 380:Generated_Source\PSoC4/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC4/USBUART.c **** 
 386:Generated_Source\PSoC4/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC4/USBUART.c **** 
 392:Generated_Source\PSoC4/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC4/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC4/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC4/USBUART.c **** 
 399:Generated_Source\PSoC4/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC4/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 197              		.loc 1 401 0 discriminator 4
 198 00a0 0321     		movs	r1, #3
 199 00a2 0520     		movs	r0, #5
 200 00a4 FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC4/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 201              		.loc 1 402 0 discriminator 4
 202 00a8 104B     		ldr	r3, .L8+52
 203 00aa 1900     		movs	r1, r3
 204 00ac 0520     		movs	r0, #5
 205 00ae FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC4/USBUART.c **** 
 405:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC4/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC4/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC4/USBUART.c **** }
 206              		.loc 1 409 0 discriminator 4
 207 00b2 C046     		nop
 208 00b4 BD46     		mov	sp, r7
 209              		@ sp needed
 210 00b6 B0BD     		pop	{r4, r5, r7, pc}
 211              	.L9:
 212              		.align	2
 213              	.L8:
 214 00b8 74022C40 		.word	1076626036
 215 00bc 48002C40 		.word	1076625480
 216 00c0 30032C40 		.word	1076626224
 217 00c4 00202C40 		.word	1076633600
 218 00c8 01000004 		.word	67108865
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 12


 219 00cc 0C0000B8 		.word	-1207959540
 220 00d0 24002C40 		.word	1076625444
 221 00d4 30202C40 		.word	1076633648
 222 00d8 1A001500 		.word	1376282
 223 00dc 28202C40 		.word	1076633640
 224 00e0 00000000 		.word	USBUART_INTR_HI_ISR
 225 00e4 00000000 		.word	USBUART_INTR_LO_ISR
 226 00e8 00000000 		.word	USBUART_INTR_MED_ISR
 227 00ec 00000000 		.word	USBUART_DP_ISR
 228              		.cfi_endproc
 229              	.LFE2:
 230              		.size	USBUART_Init, .-USBUART_Init
 231              		.section	.text.USBUART_InitComponent,"ax",%progbits
 232              		.align	2
 233              		.global	USBUART_InitComponent
 234              		.code	16
 235              		.thumb_func
 236              		.type	USBUART_InitComponent, %function
 237              	USBUART_InitComponent:
 238              	.LFB3:
 410:Generated_Source\PSoC4/USBUART.c **** 
 411:Generated_Source\PSoC4/USBUART.c **** 
 412:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC4/USBUART.c **** *
 416:Generated_Source\PSoC4/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC4/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC4/USBUART.c **** *
 419:Generated_Source\PSoC4/USBUART.c **** * \param device:
 420:Generated_Source\PSoC4/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC4/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC4/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC4/USBUART.c **** *   field.
 424:Generated_Source\PSoC4/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC4/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC4/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC4/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC4/USBUART.c **** *   following list.
 429:Generated_Source\PSoC4/USBUART.c **** *
 430:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC4/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC4/USBUART.c **** *
 433:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC4/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC4/USBUART.c **** *
 436:Generated_Source\PSoC4/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC4/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC4/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC4/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC4/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC4/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC4/USBUART.c **** *
 443:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 13


 447:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC4/USBUART.c **** *
 449:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC4/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC4/USBUART.c **** *
 454:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC4/USBUART.c **** *
 456:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC4/USBUART.c **** *  No.
 458:Generated_Source\PSoC4/USBUART.c **** *
 459:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC4/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC4/USBUART.c **** {
 239              		.loc 1 461 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 16
 242              		@ frame_needed = 1, uses_anonymous_args = 0
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 84B0     		sub	sp, sp, #16
 248              		.cfi_def_cfa_offset 24
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 0200     		movs	r2, r0
 252 0008 FB1D     		adds	r3, r7, #7
 253 000a 1A70     		strb	r2, [r3]
 254 000c BB1D     		adds	r3, r7, #6
 255 000e 0A1C     		adds	r2, r1, #0
 256 0010 1A70     		strb	r2, [r3]
 462:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC4/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC4/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC4/USBUART.c ****     */
 466:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC4/USBUART.c **** 
 469:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 257              		.loc 1 469 0
 258 0012 0F23     		movs	r3, #15
 259 0014 FB18     		adds	r3, r7, r3
 260 0016 0022     		movs	r2, #0
 261 0018 1A70     		strb	r2, [r3]
 262 001a 0CE0     		b	.L11
 263              	.L12:
 470:Generated_Source\PSoC4/USBUART.c ****     {
 471:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 264              		.loc 1 471 0 discriminator 3
 265 001c 0F23     		movs	r3, #15
 266 001e FB18     		adds	r3, r7, r3
 267 0020 1B78     		ldrb	r3, [r3]
 268 0022 314A     		ldr	r2, .L18
 269 0024 0121     		movs	r1, #1
 270 0026 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 14


 469:Generated_Source\PSoC4/USBUART.c ****     {
 271              		.loc 1 469 0 discriminator 3
 272 0028 0F23     		movs	r3, #15
 273 002a FB18     		adds	r3, r7, r3
 274 002c 1A78     		ldrb	r2, [r3]
 275 002e 0F23     		movs	r3, #15
 276 0030 FB18     		adds	r3, r7, r3
 277 0032 0132     		adds	r2, r2, #1
 278 0034 1A70     		strb	r2, [r3]
 279              	.L11:
 469:Generated_Source\PSoC4/USBUART.c ****     {
 280              		.loc 1 469 0 is_stmt 0 discriminator 1
 281 0036 0F23     		movs	r3, #15
 282 0038 FB18     		adds	r3, r7, r3
 283 003a 1B78     		ldrb	r3, [r3]
 284 003c 012B     		cmp	r3, #1
 285 003e EDD9     		bls	.L12
 472:Generated_Source\PSoC4/USBUART.c ****     }
 473:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC4/USBUART.c **** 
 475:Generated_Source\PSoC4/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC4/USBUART.c ****     USBUART_device = device;
 286              		.loc 1 476 0 is_stmt 1
 287 0040 2A4B     		ldr	r3, .L18+4
 288 0042 FA1D     		adds	r2, r7, #7
 289 0044 1278     		ldrb	r2, [r2]
 290 0046 1A70     		strb	r2, [r3]
 477:Generated_Source\PSoC4/USBUART.c **** 
 478:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 291              		.loc 1 479 0
 292 0048 294B     		ldr	r3, .L18+8
 293 004a 0022     		movs	r2, #0
 294 004c 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 295              		.loc 1 480 0
 296 004e 294B     		ldr	r3, .L18+12
 297 0050 0022     		movs	r2, #0
 298 0052 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 299              		.loc 1 481 0
 300 0054 284B     		ldr	r3, .L18+16
 301 0056 0022     		movs	r2, #0
 302 0058 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 303              		.loc 1 482 0
 304 005a 284B     		ldr	r3, .L18+20
 305 005c 0022     		movs	r2, #0
 306 005e 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 307              		.loc 1 483 0
 308 0060 274B     		ldr	r3, .L18+24
 309 0062 0022     		movs	r2, #0
 310 0064 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 311              		.loc 1 484 0
 312 0066 274B     		ldr	r3, .L18+28
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 15


 313 0068 0022     		movs	r2, #0
 314 006a 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 315              		.loc 1 485 0
 316 006c 264B     		ldr	r3, .L18+32
 317 006e 0022     		movs	r2, #0
 318 0070 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC4/USBUART.c **** 
 487:Generated_Source\PSoC4/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 319              		.loc 1 489 0
 320 0072 1E20     		movs	r0, #30
 321 0074 FFF7FEFF 		bl	CyIntEnable
 490:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 322              		.loc 1 490 0
 323 0078 0020     		movs	r0, #0
 324 007a FFF7FEFF 		bl	CyIntEnable
 491:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 325              		.loc 1 491 0
 326 007e 1F20     		movs	r0, #31
 327 0080 FFF7FEFF 		bl	CyIntEnable
 492:Generated_Source\PSoC4/USBUART.c **** #else
 493:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 494:Generated_Source\PSoC4/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 495:Generated_Source\PSoC4/USBUART.c **** 
 496:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 498:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC4/USBUART.c **** 
 500:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 502:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC4/USBUART.c **** 
 504:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 506:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC4/USBUART.c **** 
 508:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 510:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC4/USBUART.c **** 
 512:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC4/USBUART.c **** 
 516:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC4/USBUART.c **** 
 520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC4/USBUART.c **** 
 524:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 16


 527:Generated_Source\PSoC4/USBUART.c **** 
 528:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC4/USBUART.c **** 
 533:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC4/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC4/USBUART.c **** 
 537:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC4/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC4/USBUART.c **** 
 542:Generated_Source\PSoC4/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC4/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC4/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC4/USBUART.c **** 
 547:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC4/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC4/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC4/USBUART.c **** 
 551:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC4/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC4/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC4/USBUART.c **** 
 557:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC4/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC4/USBUART.c ****         #else
 562:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC4/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC4/USBUART.c **** 
 572:Generated_Source\PSoC4/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC4/USBUART.c ****     switch(mode)
 328              		.loc 1 573 0
 329 0084 BB1D     		adds	r3, r7, #6
 330 0086 1B78     		ldrb	r3, [r3]
 331 0088 002B     		cmp	r3, #0
 332 008a 02D0     		beq	.L14
 333 008c 012B     		cmp	r3, #1
 334 008e 07D0     		beq	.L15
 335 0090 0DE0     		b	.L17
 336              	.L14:
 574:Generated_Source\PSoC4/USBUART.c ****     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 17


 575:Generated_Source\PSoC4/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 337              		.loc 1 577 0
 338 0092 1E4B     		ldr	r3, .L18+36
 339 0094 1D4A     		ldr	r2, .L18+36
 340 0096 1268     		ldr	r2, [r2]
 341 0098 0121     		movs	r1, #1
 342 009a 8A43     		bics	r2, r1
 343 009c 1A60     		str	r2, [r3]
 578:Generated_Source\PSoC4/USBUART.c ****         break;
 344              		.loc 1 578 0
 345 009e 0DE0     		b	.L16
 346              	.L15:
 579:Generated_Source\PSoC4/USBUART.c **** 
 580:Generated_Source\PSoC4/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 347              		.loc 1 582 0
 348 00a0 1A4B     		ldr	r3, .L18+36
 349 00a2 1A4A     		ldr	r2, .L18+36
 350 00a4 1268     		ldr	r2, [r2]
 351 00a6 0121     		movs	r1, #1
 352 00a8 0A43     		orrs	r2, r1
 353 00aa 1A60     		str	r2, [r3]
 583:Generated_Source\PSoC4/USBUART.c ****         break;
 354              		.loc 1 583 0
 355 00ac 06E0     		b	.L16
 356              	.L17:
 584:Generated_Source\PSoC4/USBUART.c **** 
 585:Generated_Source\PSoC4/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC4/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG &= (uint32) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC4/USBUART.c ****     #else
 590:Generated_Source\PSoC4/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC4/USBUART.c ****         USBUART_CR1_REG |= (uint32)  USBUART_CR1_REG_ENABLE;
 357              		.loc 1 591 0
 358 00ae 174B     		ldr	r3, .L18+36
 359 00b0 164A     		ldr	r2, .L18+36
 360 00b2 1268     		ldr	r2, [r2]
 361 00b4 0121     		movs	r1, #1
 362 00b6 0A43     		orrs	r2, r1
 363 00b8 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC4/USBUART.c ****         break;
 364              		.loc 1 593 0
 365 00ba C046     		nop
 366              	.L16:
 594:Generated_Source\PSoC4/USBUART.c ****     }
 595:Generated_Source\PSoC4/USBUART.c **** 
 596:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 367              		.loc 1 598 0
 368 00bc 134B     		ldr	r3, .L18+36
 369 00be 134A     		ldr	r2, .L18+36
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 18


 370 00c0 1268     		ldr	r2, [r2]
 371 00c2 0421     		movs	r1, #4
 372 00c4 8A43     		bics	r2, r1
 373 00c6 1A60     		str	r2, [r3]
 599:Generated_Source\PSoC4/USBUART.c **** 
 600:Generated_Source\PSoC4/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 374              		.loc 1 601 0
 375 00c8 114B     		ldr	r3, .L18+40
 376 00ca 0022     		movs	r2, #0
 377 00cc 1A60     		str	r2, [r3]
 602:Generated_Source\PSoC4/USBUART.c **** 
 603:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 378              		.loc 1 604 0
 379 00ce 114B     		ldr	r3, .L18+44
 380 00d0 0122     		movs	r2, #1
 381 00d2 1A60     		str	r2, [r3]
 605:Generated_Source\PSoC4/USBUART.c **** 
 606:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC4/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC4/USBUART.c ****         {
 609:Generated_Source\PSoC4/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC4/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC4/USBUART.c ****             */
 612:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC4/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC4/USBUART.c ****         }
 615:Generated_Source\PSoC4/USBUART.c ****         else
 616:Generated_Source\PSoC4/USBUART.c ****         {
 617:Generated_Source\PSoC4/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC4/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC4/USBUART.c ****         }
 620:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC4/USBUART.c **** 
 622:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 382              		.loc 1 623 0
 383 00d4 104B     		ldr	r3, .L18+48
 384 00d6 8022     		movs	r2, #128
 385 00d8 1A60     		str	r2, [r3]
 624:Generated_Source\PSoC4/USBUART.c **** 
 625:Generated_Source\PSoC4/USBUART.c **** #else
 626:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 628:Generated_Source\PSoC4/USBUART.c **** 
 629:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 631:Generated_Source\PSoC4/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 632:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC4/USBUART.c **** 
 634:Generated_Source\PSoC4/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 386              		.loc 1 635 0
 387 00da 104B     		ldr	r3, .L18+52
 388 00dc 0422     		movs	r2, #4
 389 00de 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 19


 636:Generated_Source\PSoC4/USBUART.c **** }
 390              		.loc 1 636 0
 391 00e0 C046     		nop
 392 00e2 BD46     		mov	sp, r7
 393 00e4 04B0     		add	sp, sp, #16
 394              		@ sp needed
 395 00e6 80BD     		pop	{r7, pc}
 396              	.L19:
 397              		.align	2
 398              	.L18:
 399 00e8 00000000 		.word	USBUART_hidProtocol
 400 00ec 00000000 		.word	USBUART_device
 401 00f0 00000000 		.word	USBUART_transferState
 402 00f4 00000000 		.word	USBUART_configurationChanged
 403 00f8 00000000 		.word	USBUART_configuration
 404 00fc 00000000 		.word	USBUART_interfaceNumber
 405 0100 00000000 		.word	USBUART_deviceAddress
 406 0104 00000000 		.word	USBUART_deviceStatus
 407 0108 00000000 		.word	USBUART_lastPacketSize
 408 010c 24002C40 		.word	1076625444
 409 0110 A4002C40 		.word	1076625572
 410 0114 A0002C40 		.word	1076625568
 411 0118 20002C40 		.word	1076625440
 412 011c 48002C40 		.word	1076625480
 413              		.cfi_endproc
 414              	.LFE3:
 415              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 416              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 417              		.align	2
 418              		.global	USBUART_ReInitComponent
 419              		.code	16
 420              		.thumb_func
 421              		.type	USBUART_ReInitComponent, %function
 422              	USBUART_ReInitComponent:
 423              	.LFB4:
 637:Generated_Source\PSoC4/USBUART.c **** 
 638:Generated_Source\PSoC4/USBUART.c **** 
 639:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/USBUART.c **** *
 643:Generated_Source\PSoC4/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC4/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC4/USBUART.c **** *
 646:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC4/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC4/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC4/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC4/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC4/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC4/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC4/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC4/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC4/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC4/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 20


 659:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC4/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC4/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC4/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC4/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC4/USBUART.c **** *
 667:Generated_Source\PSoC4/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC4/USBUART.c **** *  No.
 669:Generated_Source\PSoC4/USBUART.c **** *
 670:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC4/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC4/USBUART.c **** {
 424              		.loc 1 672 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC4/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC4/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC4/USBUART.c ****     */
 676:Generated_Source\PSoC4/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC4/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC4/USBUART.c **** 
 679:Generated_Source\PSoC4/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 436              		.loc 1 679 0
 437 0006 FB1D     		adds	r3, r7, #7
 438 0008 0022     		movs	r2, #0
 439 000a 1A70     		strb	r2, [r3]
 440 000c 09E0     		b	.L21
 441              	.L22:
 680:Generated_Source\PSoC4/USBUART.c ****     {
 681:Generated_Source\PSoC4/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 442              		.loc 1 681 0 discriminator 3
 443 000e FB1D     		adds	r3, r7, #7
 444 0010 1B78     		ldrb	r3, [r3]
 445 0012 154A     		ldr	r2, .L23
 446 0014 0121     		movs	r1, #1
 447 0016 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC4/USBUART.c ****     {
 448              		.loc 1 679 0 discriminator 3
 449 0018 FB1D     		adds	r3, r7, #7
 450 001a 1A78     		ldrb	r2, [r3]
 451 001c FB1D     		adds	r3, r7, #7
 452 001e 0132     		adds	r2, r2, #1
 453 0020 1A70     		strb	r2, [r3]
 454              	.L21:
 679:Generated_Source\PSoC4/USBUART.c ****     {
 455              		.loc 1 679 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 21


 456 0022 FB1D     		adds	r3, r7, #7
 457 0024 1B78     		ldrb	r3, [r3]
 458 0026 012B     		cmp	r3, #1
 459 0028 F1D9     		bls	.L22
 682:Generated_Source\PSoC4/USBUART.c ****     }
 683:Generated_Source\PSoC4/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC4/USBUART.c **** 
 685:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC4/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 460              		.loc 1 686 0 is_stmt 1
 461 002a 104B     		ldr	r3, .L23+4
 462 002c 0022     		movs	r2, #0
 463 002e 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 464              		.loc 1 687 0
 465 0030 0F4B     		ldr	r3, .L23+8
 466 0032 0022     		movs	r2, #0
 467 0034 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 468              		.loc 1 688 0
 469 0036 0F4B     		ldr	r3, .L23+12
 470 0038 0022     		movs	r2, #0
 471 003a 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 472              		.loc 1 689 0
 473 003c 0E4B     		ldr	r3, .L23+16
 474 003e 0022     		movs	r2, #0
 475 0040 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 476              		.loc 1 690 0
 477 0042 0E4B     		ldr	r3, .L23+20
 478 0044 0022     		movs	r2, #0
 479 0046 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 480              		.loc 1 691 0
 481 0048 0D4B     		ldr	r3, .L23+24
 482 004a 0022     		movs	r2, #0
 483 004c 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC4/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 484              		.loc 1 692 0
 485 004e 0D4B     		ldr	r3, .L23+28
 486 0050 0022     		movs	r2, #0
 487 0052 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC4/USBUART.c **** 
 694:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 488              		.loc 1 696 0
 489 0054 0C4B     		ldr	r3, .L23+32
 490 0056 0122     		movs	r2, #1
 491 0058 1A60     		str	r2, [r3]
 697:Generated_Source\PSoC4/USBUART.c **** #else
 698:Generated_Source\PSoC4/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC4/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 700:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC4/USBUART.c **** 
 702:Generated_Source\PSoC4/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 22


 703:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 492              		.loc 1 703 0
 493 005a 0C4B     		ldr	r3, .L23+36
 494 005c 8022     		movs	r2, #128
 495 005e 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBUART.c **** }
 496              		.loc 1 704 0
 497 0060 C046     		nop
 498 0062 BD46     		mov	sp, r7
 499 0064 02B0     		add	sp, sp, #8
 500              		@ sp needed
 501 0066 80BD     		pop	{r7, pc}
 502              	.L24:
 503              		.align	2
 504              	.L23:
 505 0068 00000000 		.word	USBUART_hidProtocol
 506 006c 00000000 		.word	USBUART_transferState
 507 0070 00000000 		.word	USBUART_configurationChanged
 508 0074 00000000 		.word	USBUART_configuration
 509 0078 00000000 		.word	USBUART_interfaceNumber
 510 007c 00000000 		.word	USBUART_deviceAddress
 511 0080 00000000 		.word	USBUART_deviceStatus
 512 0084 00000000 		.word	USBUART_lastPacketSize
 513 0088 A0002C40 		.word	1076625568
 514 008c 20002C40 		.word	1076625440
 515              		.cfi_endproc
 516              	.LFE4:
 517              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 518              		.section	.text.USBUART_Stop,"ax",%progbits
 519              		.align	2
 520              		.global	USBUART_Stop
 521              		.code	16
 522              		.thumb_func
 523              		.type	USBUART_Stop, %function
 524              	USBUART_Stop:
 525              	.LFB5:
 705:Generated_Source\PSoC4/USBUART.c **** 
 706:Generated_Source\PSoC4/USBUART.c **** 
 707:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/USBUART.c **** *
 711:Generated_Source\PSoC4/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC4/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC4/USBUART.c **** *
 714:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC4/USBUART.c **** *
 717:Generated_Source\PSoC4/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC4/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC4/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC4/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC4/USBUART.c **** *
 722:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC4/USBUART.c **** *
 724:Generated_Source\PSoC4/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 23


 726:Generated_Source\PSoC4/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC4/USBUART.c **** *
 728:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC4/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC4/USBUART.c **** {
 526              		.loc 1 730 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 90B5     		push	{r4, r7, lr}
 531              		.cfi_def_cfa_offset 12
 532              		.cfi_offset 4, -12
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 83B0     		sub	sp, sp, #12
 536              		.cfi_def_cfa_offset 24
 537 0004 00AF     		add	r7, sp, #0
 538              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC4/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC4/USBUART.c **** 
 733:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC4/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC4/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC4/USBUART.c **** 
 738:Generated_Source\PSoC4/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 539              		.loc 1 738 0
 540 0006 FC1D     		adds	r4, r7, #7
 541 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 542 000c 0300     		movs	r3, r0
 543 000e 2370     		strb	r3, [r4]
 739:Generated_Source\PSoC4/USBUART.c **** 
 740:Generated_Source\PSoC4/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR0_REG &= (uint32) ~USBUART_CR0_ENABLE;
 544              		.loc 1 741 0
 545 0010 1A4B     		ldr	r3, .L26
 546 0012 1A4A     		ldr	r2, .L26
 547 0014 1268     		ldr	r2, [r2]
 548 0016 8021     		movs	r1, #128
 549 0018 8A43     		bics	r2, r1
 550 001a 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/USBUART.c **** 
 743:Generated_Source\PSoC4/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint32) ~ USBUART_USBIO_CR1_USBPUEN;
 551              		.loc 1 744 0
 552 001c 184B     		ldr	r3, .L26+4
 553 001e 184A     		ldr	r2, .L26+4
 554 0020 1268     		ldr	r2, [r2]
 555 0022 0421     		movs	r1, #4
 556 0024 8A43     		bics	r2, r1
 557 0026 1A60     		str	r2, [r3]
 745:Generated_Source\PSoC4/USBUART.c **** 
 746:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC4/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC4/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 558              		.loc 1 748 0
 559 0028 164B     		ldr	r3, .L26+8
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 24


 560 002a 164A     		ldr	r2, .L26+8
 561 002c 1268     		ldr	r2, [r2]
 562 002e 5200     		lsls	r2, r2, #1
 563 0030 5208     		lsrs	r2, r2, #1
 564 0032 1A60     		str	r2, [r3]
 749:Generated_Source\PSoC4/USBUART.c **** #else
 750:Generated_Source\PSoC4/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 752:Generated_Source\PSoC4/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 753:Generated_Source\PSoC4/USBUART.c **** 
 754:Generated_Source\PSoC4/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC4/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC4/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 757:Generated_Source\PSoC4/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 758:Generated_Source\PSoC4/USBUART.c **** 
 759:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC4/USBUART.c **** 
 761:Generated_Source\PSoC4/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 565              		.loc 1 761 0
 566 0034 FB1D     		adds	r3, r7, #7
 567 0036 1B78     		ldrb	r3, [r3]
 568 0038 1800     		movs	r0, r3
 569 003a FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC4/USBUART.c **** 
 763:Generated_Source\PSoC4/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 570              		.loc 1 765 0
 571 003e 1E20     		movs	r0, #30
 572 0040 FFF7FEFF 		bl	CyIntDisable
 766:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 573              		.loc 1 766 0
 574 0044 1F20     		movs	r0, #31
 575 0046 FFF7FEFF 		bl	CyIntDisable
 767:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 576              		.loc 1 767 0
 577 004a 0020     		movs	r0, #0
 578 004c FFF7FEFF 		bl	CyIntDisable
 768:Generated_Source\PSoC4/USBUART.c **** #else
 769:Generated_Source\PSoC4/USBUART.c **** 
 770:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 771:Generated_Source\PSoC4/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 772:Generated_Source\PSoC4/USBUART.c **** 
 773:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 775:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC4/USBUART.c **** 
 777:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 779:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC4/USBUART.c **** 
 781:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 783:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC4/USBUART.c **** 
 785:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 25


 787:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC4/USBUART.c **** 
 789:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC4/USBUART.c **** 
 793:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC4/USBUART.c **** 
 797:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC4/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC4/USBUART.c **** 
 801:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC4/USBUART.c **** 
 805:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC4/USBUART.c **** 
 809:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC4/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC4/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 812:Generated_Source\PSoC4/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 813:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC4/USBUART.c **** 
 815:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC4/USBUART.c **** 
 817:Generated_Source\PSoC4/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC4/USBUART.c ****     USBUART_configurationChanged = 0u;
 579              		.loc 1 818 0
 580 0050 0D4B     		ldr	r3, .L26+12
 581 0052 0022     		movs	r2, #0
 582 0054 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC4/USBUART.c ****     USBUART_configuration   = 0u;
 583              		.loc 1 819 0
 584 0056 0D4B     		ldr	r3, .L26+16
 585 0058 0022     		movs	r2, #0
 586 005a 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC4/USBUART.c ****     USBUART_interfaceNumber = 0u;
 587              		.loc 1 820 0
 588 005c 0C4B     		ldr	r3, .L26+20
 589 005e 0022     		movs	r2, #0
 590 0060 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceAddress   = 0u;
 591              		.loc 1 821 0
 592 0062 0C4B     		ldr	r3, .L26+24
 593 0064 0022     		movs	r2, #0
 594 0066 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC4/USBUART.c ****     USBUART_deviceStatus    = 0u;
 595              		.loc 1 822 0
 596 0068 0B4B     		ldr	r3, .L26+28
 597 006a 0022     		movs	r2, #0
 598 006c 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 26


 824:Generated_Source\PSoC4/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC4/USBUART.c ****     USBUART_initVar = 0u;
 599              		.loc 1 825 0
 600 006e 0B4B     		ldr	r3, .L26+32
 601 0070 0022     		movs	r2, #0
 602 0072 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC4/USBUART.c **** }
 603              		.loc 1 826 0
 604 0074 C046     		nop
 605 0076 BD46     		mov	sp, r7
 606 0078 03B0     		add	sp, sp, #12
 607              		@ sp needed
 608 007a 90BD     		pop	{r4, r7, pc}
 609              	.L27:
 610              		.align	2
 611              	.L26:
 612 007c 20002C40 		.word	1076625440
 613 0080 48002C40 		.word	1076625480
 614 0084 00202C40 		.word	1076633600
 615 0088 00000000 		.word	USBUART_configurationChanged
 616 008c 00000000 		.word	USBUART_configuration
 617 0090 00000000 		.word	USBUART_interfaceNumber
 618 0094 00000000 		.word	USBUART_deviceAddress
 619 0098 00000000 		.word	USBUART_deviceStatus
 620 009c 00000000 		.word	USBUART_initVar
 621              		.cfi_endproc
 622              	.LFE5:
 623              		.size	USBUART_Stop, .-USBUART_Stop
 624              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 625              		.align	2
 626              		.global	USBUART_CheckActivity
 627              		.code	16
 628              		.thumb_func
 629              		.type	USBUART_CheckActivity, %function
 630              	USBUART_CheckActivity:
 631              	.LFB6:
 827:Generated_Source\PSoC4/USBUART.c **** 
 828:Generated_Source\PSoC4/USBUART.c **** 
 829:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC4/USBUART.c **** *
 833:Generated_Source\PSoC4/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC4/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC4/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC4/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC4/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC4/USBUART.c **** *
 839:Generated_Source\PSoC4/USBUART.c **** *
 840:Generated_Source\PSoC4/USBUART.c **** * \return
 841:Generated_Source\PSoC4/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC4/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC4/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC4/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC4/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC4/USBUART.c **** *
 847:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 27


 848:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC4/USBUART.c **** {
 632              		.loc 1 850 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 8
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 82B0     		sub	sp, sp, #8
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC4/USBUART.c ****     uint32 cr1Reg = USBUART_CR1_REG;
 644              		.loc 1 851 0
 645 0006 094B     		ldr	r3, .L32
 646 0008 1B68     		ldr	r3, [r3]
 647 000a 7B60     		str	r3, [r7, #4]
 852:Generated_Source\PSoC4/USBUART.c **** 
 853:Generated_Source\PSoC4/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC4/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint32) ~USBUART_CR1_BUS_ACTIVITY);
 648              		.loc 1 854 0
 649 000c 074B     		ldr	r3, .L32
 650 000e 7A68     		ldr	r2, [r7, #4]
 651 0010 0421     		movs	r1, #4
 652 0012 8A43     		bics	r2, r1
 653 0014 1A60     		str	r2, [r3]
 855:Generated_Source\PSoC4/USBUART.c **** 
 856:Generated_Source\PSoC4/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC4/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 654              		.loc 1 857 0
 655 0016 7B68     		ldr	r3, [r7, #4]
 656 0018 0422     		movs	r2, #4
 657 001a 1340     		ands	r3, r2
 658 001c 01D0     		beq	.L29
 659              		.loc 1 857 0 is_stmt 0 discriminator 1
 660 001e 0123     		movs	r3, #1
 661 0020 00E0     		b	.L30
 662              	.L29:
 663              		.loc 1 857 0 discriminator 2
 664 0022 0023     		movs	r3, #0
 665              	.L30:
 858:Generated_Source\PSoC4/USBUART.c **** }
 666              		.loc 1 858 0 is_stmt 1 discriminator 4
 667 0024 1800     		movs	r0, r3
 668 0026 BD46     		mov	sp, r7
 669 0028 02B0     		add	sp, sp, #8
 670              		@ sp needed
 671 002a 80BD     		pop	{r7, pc}
 672              	.L33:
 673              		.align	2
 674              	.L32:
 675 002c 24002C40 		.word	1076625444
 676              		.cfi_endproc
 677              	.LFE6:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 28


 678              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 679              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 680              		.align	2
 681              		.global	USBUART_GetConfiguration
 682              		.code	16
 683              		.thumb_func
 684              		.type	USBUART_GetConfiguration, %function
 685              	USBUART_GetConfiguration:
 686              	.LFB7:
 859:Generated_Source\PSoC4/USBUART.c **** 
 860:Generated_Source\PSoC4/USBUART.c **** 
 861:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC4/USBUART.c **** *
 865:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC4/USBUART.c **** *
 867:Generated_Source\PSoC4/USBUART.c **** * \return
 868:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC4/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC4/USBUART.c **** *
 871:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC4/USBUART.c **** {
 687              		.loc 1 873 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691 0000 80B5     		push	{r7, lr}
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 00AF     		add	r7, sp, #0
 696              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_configuration);
 697              		.loc 1 874 0
 698 0004 024B     		ldr	r3, .L36
 699 0006 1B78     		ldrb	r3, [r3]
 700 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC4/USBUART.c **** }
 701              		.loc 1 875 0
 702 000a 1800     		movs	r0, r3
 703 000c BD46     		mov	sp, r7
 704              		@ sp needed
 705 000e 80BD     		pop	{r7, pc}
 706              	.L37:
 707              		.align	2
 708              	.L36:
 709 0010 00000000 		.word	USBUART_configuration
 710              		.cfi_endproc
 711              	.LFE7:
 712              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 713              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 714              		.align	2
 715              		.global	USBUART_IsConfigurationChanged
 716              		.code	16
 717              		.thumb_func
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 29


 718              		.type	USBUART_IsConfigurationChanged, %function
 719              	USBUART_IsConfigurationChanged:
 720              	.LFB8:
 876:Generated_Source\PSoC4/USBUART.c **** 
 877:Generated_Source\PSoC4/USBUART.c **** 
 878:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/USBUART.c **** *
 882:Generated_Source\PSoC4/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC4/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC4/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC4/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC4/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC4/USBUART.c **** *
 888:Generated_Source\PSoC4/USBUART.c **** * \return
 889:Generated_Source\PSoC4/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC4/USBUART.c **** *  returned.
 891:Generated_Source\PSoC4/USBUART.c **** *
 892:Generated_Source\PSoC4/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC4/USBUART.c **** *
 894:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC4/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC4/USBUART.c **** *
 897:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC4/USBUART.c **** {
 721              		.loc 1 899 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 8
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725 0000 80B5     		push	{r7, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
 729 0002 82B0     		sub	sp, sp, #8
 730              		.cfi_def_cfa_offset 16
 731 0004 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC4/USBUART.c ****     uint8 res = 0u;
 733              		.loc 1 900 0
 734 0006 FB1D     		adds	r3, r7, #7
 735 0008 0022     		movs	r2, #0
 736 000a 1A70     		strb	r2, [r3]
 901:Generated_Source\PSoC4/USBUART.c **** 
 902:Generated_Source\PSoC4/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 737              		.loc 1 902 0
 738 000c 084B     		ldr	r3, .L41
 739 000e 1B78     		ldrb	r3, [r3]
 740 0010 DBB2     		uxtb	r3, r3
 741 0012 002B     		cmp	r3, #0
 742 0014 06D0     		beq	.L39
 903:Generated_Source\PSoC4/USBUART.c ****     {
 904:Generated_Source\PSoC4/USBUART.c ****         res = USBUART_configurationChanged;
 743              		.loc 1 904 0
 744 0016 FB1D     		adds	r3, r7, #7
 745 0018 054A     		ldr	r2, .L41
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 30


 746 001a 1278     		ldrb	r2, [r2]
 747 001c 1A70     		strb	r2, [r3]
 905:Generated_Source\PSoC4/USBUART.c ****         USBUART_configurationChanged = 0u;
 748              		.loc 1 905 0
 749 001e 044B     		ldr	r3, .L41
 750 0020 0022     		movs	r2, #0
 751 0022 1A70     		strb	r2, [r3]
 752              	.L39:
 906:Generated_Source\PSoC4/USBUART.c ****     }
 907:Generated_Source\PSoC4/USBUART.c **** 
 908:Generated_Source\PSoC4/USBUART.c ****     return (res);
 753              		.loc 1 908 0
 754 0024 FB1D     		adds	r3, r7, #7
 755 0026 1B78     		ldrb	r3, [r3]
 909:Generated_Source\PSoC4/USBUART.c **** }
 756              		.loc 1 909 0
 757 0028 1800     		movs	r0, r3
 758 002a BD46     		mov	sp, r7
 759 002c 02B0     		add	sp, sp, #8
 760              		@ sp needed
 761 002e 80BD     		pop	{r7, pc}
 762              	.L42:
 763              		.align	2
 764              	.L41:
 765 0030 00000000 		.word	USBUART_configurationChanged
 766              		.cfi_endproc
 767              	.LFE8:
 768              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 769              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 770              		.align	2
 771              		.global	USBUART_GetInterfaceSetting
 772              		.code	16
 773              		.thumb_func
 774              		.type	USBUART_GetInterfaceSetting, %function
 775              	USBUART_GetInterfaceSetting:
 776              	.LFB9:
 910:Generated_Source\PSoC4/USBUART.c **** 
 911:Generated_Source\PSoC4/USBUART.c **** 
 912:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC4/USBUART.c **** *
 916:Generated_Source\PSoC4/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC4/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC4/USBUART.c **** *  interface.
 919:Generated_Source\PSoC4/USBUART.c **** *
 920:Generated_Source\PSoC4/USBUART.c **** *  \param
 921:Generated_Source\PSoC4/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC4/USBUART.c **** *
 923:Generated_Source\PSoC4/USBUART.c **** * \return
 924:Generated_Source\PSoC4/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC4/USBUART.c **** *
 926:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC4/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC4/USBUART.c ****                                                     
 929:Generated_Source\PSoC4/USBUART.c **** {
 777              		.loc 1 929 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 31


 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 0000 80B5     		push	{r7, lr}
 782              		.cfi_def_cfa_offset 8
 783              		.cfi_offset 7, -8
 784              		.cfi_offset 14, -4
 785 0002 82B0     		sub	sp, sp, #8
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 789 0006 0200     		movs	r2, r0
 790 0008 FB1D     		adds	r3, r7, #7
 791 000a 1A70     		strb	r2, [r3]
 930:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 792              		.loc 1 930 0
 793 000c FB1D     		adds	r3, r7, #7
 794 000e 1B78     		ldrb	r3, [r3]
 795 0010 034A     		ldr	r2, .L45
 796 0012 D35C     		ldrb	r3, [r2, r3]
 797 0014 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC4/USBUART.c **** }
 798              		.loc 1 931 0
 799 0016 1800     		movs	r0, r3
 800 0018 BD46     		mov	sp, r7
 801 001a 02B0     		add	sp, sp, #8
 802              		@ sp needed
 803 001c 80BD     		pop	{r7, pc}
 804              	.L46:
 805 001e C046     		.align	2
 806              	.L45:
 807 0020 00000000 		.word	USBUART_interfaceSetting
 808              		.cfi_endproc
 809              	.LFE9:
 810              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 811              		.section	.text.USBUART_GetEPState,"ax",%progbits
 812              		.align	2
 813              		.global	USBUART_GetEPState
 814              		.code	16
 815              		.thumb_func
 816              		.type	USBUART_GetEPState, %function
 817              	USBUART_GetEPState:
 818              	.LFB10:
 932:Generated_Source\PSoC4/USBUART.c **** 
 933:Generated_Source\PSoC4/USBUART.c **** 
 934:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC4/USBUART.c **** *
 938:Generated_Source\PSoC4/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC4/USBUART.c **** *
 940:Generated_Source\PSoC4/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC4/USBUART.c **** *
 942:Generated_Source\PSoC4/USBUART.c **** * \return
 943:Generated_Source\PSoC4/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC4/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC4/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 32


 946:Generated_Source\PSoC4/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC4/USBUART.c **** *
 948:Generated_Source\PSoC4/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC4/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC4/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC4/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC4/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC4/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC4/USBUART.c **** *
 958:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC4/USBUART.c **** {
 819              		.loc 1 960 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 8
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 82B0     		sub	sp, sp, #8
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_def_cfa_register 7
 831 0006 0200     		movs	r2, r0
 832 0008 FB1D     		adds	r3, r7, #7
 833 000a 1A70     		strb	r2, [r3]
 961:Generated_Source\PSoC4/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 834              		.loc 1 961 0
 835 000c FB1D     		adds	r3, r7, #7
 836 000e 1A78     		ldrb	r2, [r3]
 837 0010 0649     		ldr	r1, .L49
 838 0012 1300     		movs	r3, r2
 839 0014 5B00     		lsls	r3, r3, #1
 840 0016 9B18     		adds	r3, r3, r2
 841 0018 9B00     		lsls	r3, r3, #2
 842 001a CB18     		adds	r3, r1, r3
 843 001c 0133     		adds	r3, r3, #1
 844 001e 1B78     		ldrb	r3, [r3]
 845 0020 DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC4/USBUART.c **** }
 846              		.loc 1 962 0
 847 0022 1800     		movs	r0, r3
 848 0024 BD46     		mov	sp, r7
 849 0026 02B0     		add	sp, sp, #8
 850              		@ sp needed
 851 0028 80BD     		pop	{r7, pc}
 852              	.L50:
 853 002a C046     		.align	2
 854              	.L49:
 855 002c 00000000 		.word	USBUART_EP
 856              		.cfi_endproc
 857              	.LFE10:
 858              		.size	USBUART_GetEPState, .-USBUART_GetEPState
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 33


 859              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 860              		.align	2
 861              		.global	USBUART_GetEPCount
 862              		.code	16
 863              		.thumb_func
 864              		.type	USBUART_GetEPCount, %function
 865              	USBUART_GetEPCount:
 866              	.LFB11:
 963:Generated_Source\PSoC4/USBUART.c **** 
 964:Generated_Source\PSoC4/USBUART.c **** 
 965:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC4/USBUART.c **** *
 969:Generated_Source\PSoC4/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC4/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC4/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC4/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC4/USBUART.c **** *
 974:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC4/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC4/USBUART.c **** *
 977:Generated_Source\PSoC4/USBUART.c **** * \return
 978:Generated_Source\PSoC4/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC4/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC4/USBUART.c **** *
 981:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC4/USBUART.c **** {
 867              		.loc 1 983 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 16
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871 0000 80B5     		push	{r7, lr}
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 84B0     		sub	sp, sp, #16
 876              		.cfi_def_cfa_offset 24
 877 0004 00AF     		add	r7, sp, #0
 878              		.cfi_def_cfa_register 7
 879 0006 0200     		movs	r2, r0
 880 0008 FB1D     		adds	r3, r7, #7
 881 000a 1A70     		strb	r2, [r3]
 984:Generated_Source\PSoC4/USBUART.c ****     uint16 cntr = 0u;
 882              		.loc 1 984 0
 883 000c 0E23     		movs	r3, #14
 884 000e FB18     		adds	r3, r7, r3
 885 0010 0022     		movs	r2, #0
 886 0012 1A80     		strh	r2, [r3]
 985:Generated_Source\PSoC4/USBUART.c **** 
 986:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 887              		.loc 1 986 0
 888 0014 FB1D     		adds	r3, r7, #7
 889 0016 1B78     		ldrb	r3, [r3]
 890 0018 002B     		cmp	r3, #0
 891 001a 28D0     		beq	.L52
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 34


 892              		.loc 1 986 0 is_stmt 0 discriminator 1
 893 001c FB1D     		adds	r3, r7, #7
 894 001e 1B78     		ldrb	r3, [r3]
 895 0020 082B     		cmp	r3, #8
 896 0022 24D8     		bhi	.L52
 987:Generated_Source\PSoC4/USBUART.c ****     {
 988:Generated_Source\PSoC4/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 897              		.loc 1 989 0 is_stmt 1
 898 0024 154A     		ldr	r2, .L54
 899 0026 FB1D     		adds	r3, r7, #7
 900 0028 1B78     		ldrb	r3, [r3]
 901 002a 9B01     		lsls	r3, r3, #6
 902 002c 9B58     		ldr	r3, [r3, r2]
 903 002e 9AB2     		uxth	r2, r3
 904 0030 0E23     		movs	r3, #14
 905 0032 FB18     		adds	r3, r7, r3
 906 0034 0F21     		movs	r1, #15
 907 0036 0A40     		ands	r2, r1
 908 0038 1A80     		strh	r2, [r3]
 990:Generated_Source\PSoC4/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 909              		.loc 1 990 0
 910 003a 0E23     		movs	r3, #14
 911 003c FB18     		adds	r3, r7, r3
 912 003e 1B88     		ldrh	r3, [r3]
 913 0040 1B02     		lsls	r3, r3, #8
 914 0042 9BB2     		uxth	r3, r3
 915 0044 1AB2     		sxth	r2, r3
 916 0046 0D49     		ldr	r1, .L54
 917 0048 FB1D     		adds	r3, r7, #7
 918 004a 1B78     		ldrb	r3, [r3]
 919 004c 9B01     		lsls	r3, r3, #6
 920 004e CB18     		adds	r3, r1, r3
 921 0050 0433     		adds	r3, r3, #4
 922 0052 1B68     		ldr	r3, [r3]
 923 0054 1BB2     		sxth	r3, r3
 924 0056 1343     		orrs	r3, r2
 925 0058 1AB2     		sxth	r2, r3
 926 005a 0E23     		movs	r3, #14
 927 005c FB18     		adds	r3, r7, r3
 928 005e 1A80     		strh	r2, [r3]
 991:Generated_Source\PSoC4/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 929              		.loc 1 991 0
 930 0060 0E23     		movs	r3, #14
 931 0062 FB18     		adds	r3, r7, r3
 932 0064 0E22     		movs	r2, #14
 933 0066 BA18     		adds	r2, r7, r2
 934 0068 1288     		ldrh	r2, [r2]
 935 006a 023A     		subs	r2, r2, #2
 936 006c 1A80     		strh	r2, [r3]
 937              	.L52:
 992:Generated_Source\PSoC4/USBUART.c ****     }
 993:Generated_Source\PSoC4/USBUART.c **** 
 994:Generated_Source\PSoC4/USBUART.c ****     return (cntr);
 938              		.loc 1 994 0
 939 006e 0E23     		movs	r3, #14
 940 0070 FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 35


 941 0072 1B88     		ldrh	r3, [r3]
 995:Generated_Source\PSoC4/USBUART.c **** }
 942              		.loc 1 995 0
 943 0074 1800     		movs	r0, r3
 944 0076 BD46     		mov	sp, r7
 945 0078 04B0     		add	sp, sp, #16
 946              		@ sp needed
 947 007a 80BD     		pop	{r7, pc}
 948              	.L55:
 949              		.align	2
 950              	.L54:
 951 007c F0FF2B40 		.word	1076625392
 952              		.cfi_endproc
 953              	.LFE11:
 954              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 955              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 956              		.align	2
 957              		.global	USBUART_LoadInEP
 958              		.code	16
 959              		.thumb_func
 960              		.type	USBUART_LoadInEP, %function
 961              	USBUART_LoadInEP:
 962              	.LFB12:
 996:Generated_Source\PSoC4/USBUART.c **** 
 997:Generated_Source\PSoC4/USBUART.c **** 
 998:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC4/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC4/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC4/USBUART.c ****     *
1004:Generated_Source\PSoC4/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC4/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC4/USBUART.c ****     *
1007:Generated_Source\PSoC4/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC4/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC4/USBUART.c ****     {
1010:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC4/USBUART.c **** 
1014:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC4/USBUART.c **** 
1018:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC4/USBUART.c **** 
1022:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC4/USBUART.c **** 
1026:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 36


1030:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC4/USBUART.c **** 
1034:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC4/USBUART.c **** 
1038:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC4/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC4/USBUART.c **** 
1042:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC4/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC4/USBUART.c **** 
1048:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC4/USBUART.c **** 
1052:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC4/USBUART.c **** 
1056:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC4/USBUART.c **** 
1060:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC4/USBUART.c **** 
1064:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC4/USBUART.c **** 
1068:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC4/USBUART.c **** 
1072:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC4/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC4/USBUART.c ****     }
1077:Generated_Source\PSoC4/USBUART.c **** #else
1078:Generated_Source\PSoC4/USBUART.c **** 
1079:Generated_Source\PSoC4/USBUART.c **** 
1080:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC4/USBUART.c ****     *
1084:Generated_Source\PSoC4/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC4/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 37


1087:Generated_Source\PSoC4/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC4/USBUART.c ****     *
1089:Generated_Source\PSoC4/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC4/USBUART.c ****     *
1091:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC4/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC4/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC4/USBUART.c ****     *
1095:Generated_Source\PSoC4/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC4/USBUART.c ****     *
1097:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC4/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC4/USBUART.c ****                                                                     
1100:Generated_Source\PSoC4/USBUART.c ****     {
1101:Generated_Source\PSoC4/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC4/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC4/USBUART.c **** 
1104:Generated_Source\PSoC4/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC4/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC4/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC4/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC4/USBUART.c ****     #else
1109:Generated_Source\PSoC4/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC4/USBUART.c ****         {
1111:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC4/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC4/USBUART.c ****         }
1115:Generated_Source\PSoC4/USBUART.c ****         else
1116:Generated_Source\PSoC4/USBUART.c ****         {
1117:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC4/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC4/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC4/USBUART.c ****         }
1121:Generated_Source\PSoC4/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC4/USBUART.c **** 
1123:Generated_Source\PSoC4/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC4/USBUART.c ****         {
1125:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC4/USBUART.c ****             break;
1130:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC4/USBUART.c **** 
1132:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC4/USBUART.c ****             break;
1137:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC4/USBUART.c **** 
1139:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC4/USBUART.c ****             break;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 38


1144:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC4/USBUART.c **** 
1146:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC4/USBUART.c ****             break;
1151:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC4/USBUART.c **** 
1153:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC4/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC4/USBUART.c ****             break;
1158:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC4/USBUART.c **** 
1160:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC4/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC4/USBUART.c ****             break;
1165:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC4/USBUART.c **** 
1167:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC4/USBUART.c ****             break;
1172:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC4/USBUART.c **** 
1174:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC4/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC4/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC4/USBUART.c ****             break;
1179:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC4/USBUART.c **** 
1181:Generated_Source\PSoC4/USBUART.c ****         default:
1182:Generated_Source\PSoC4/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC4/USBUART.c ****             break;
1184:Generated_Source\PSoC4/USBUART.c ****         }
1185:Generated_Source\PSoC4/USBUART.c **** 
1186:Generated_Source\PSoC4/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC4/USBUART.c ****         {
1188:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC4/USBUART.c **** 
1190:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC4/USBUART.c ****         }
1194:Generated_Source\PSoC4/USBUART.c ****     }
1195:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC4/USBUART.c **** 
1197:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC4/USBUART.c ****     *  
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 39


1201:Generated_Source\PSoC4/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC4/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC4/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC4/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC4/USBUART.c ****     *  
1207:Generated_Source\PSoC4/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC4/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC4/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC4/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC4/USBUART.c ****     *
1212:Generated_Source\PSoC4/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC4/USBUART.c ****     *  No.
1214:Generated_Source\PSoC4/USBUART.c ****     *
1215:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC4/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC4/USBUART.c ****     {
1218:Generated_Source\PSoC4/USBUART.c ****         uint32 i;
1219:Generated_Source\PSoC4/USBUART.c **** 
1220:Generated_Source\PSoC4/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC4/USBUART.c **** 
1222:Generated_Source\PSoC4/USBUART.c ****         do
1223:Generated_Source\PSoC4/USBUART.c ****         {
1224:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC4/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC4/USBUART.c ****             {
1227:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC4/USBUART.c ****             }
1229:Generated_Source\PSoC4/USBUART.c ****         #else
1230:Generated_Source\PSoC4/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC4/USBUART.c ****             {
1232:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC4/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC4/USBUART.c ****             }
1236:Generated_Source\PSoC4/USBUART.c **** 
1237:Generated_Source\PSoC4/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC4/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC4/USBUART.c ****                 {
1240:Generated_Source\PSoC4/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC4/USBUART.c ****                 }
1243:Generated_Source\PSoC4/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC4/USBUART.c **** 
1245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC4/USBUART.c ****             i++;
1247:Generated_Source\PSoC4/USBUART.c ****         }
1248:Generated_Source\PSoC4/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC4/USBUART.c ****     }
1250:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC4/USBUART.c **** 
1252:Generated_Source\PSoC4/USBUART.c **** 
1253:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 40


1258:Generated_Source\PSoC4/USBUART.c ****     *
1259:Generated_Source\PSoC4/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC4/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC4/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC4/USBUART.c ****     *
1263:Generated_Source\PSoC4/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC4/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC4/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC4/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC4/USBUART.c ****     *
1268:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC4/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC4/USBUART.c ****     {
1271:Generated_Source\PSoC4/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC4/USBUART.c **** 
1273:Generated_Source\PSoC4/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC4/USBUART.c ****         {
1275:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC4/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC4/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC4/USBUART.c ****         }
1286:Generated_Source\PSoC4/USBUART.c ****         else
1287:Generated_Source\PSoC4/USBUART.c ****         {
1288:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC4/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC4/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC4/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC4/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC4/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC4/USBUART.c ****         }
1298:Generated_Source\PSoC4/USBUART.c **** 
1299:Generated_Source\PSoC4/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC4/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC4/USBUART.c ****     }
1302:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC4/USBUART.c **** 
1305:Generated_Source\PSoC4/USBUART.c **** 
1306:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/USBUART.c **** *
1310:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC4/USBUART.c **** *
1314:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 41


1315:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC4/USBUART.c **** *
1318:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC4/USBUART.c **** *
1322:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC4/USBUART.c **** *
1328:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC4/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC4/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC4/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC4/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC4/USBUART.c **** *
1337:Generated_Source\PSoC4/USBUART.c **** *
1338:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC4/USBUART.c **** *  No.
1340:Generated_Source\PSoC4/USBUART.c **** *
1341:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC4/USBUART.c ****                                                                         
1344:Generated_Source\PSoC4/USBUART.c **** {
 963              		.loc 1 1344 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 16
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 B0B5     		push	{r4, r5, r7, lr}
 968              		.cfi_def_cfa_offset 16
 969              		.cfi_offset 4, -16
 970              		.cfi_offset 5, -12
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 84B0     		sub	sp, sp, #16
 974              		.cfi_def_cfa_offset 32
 975 0004 00AF     		add	r7, sp, #0
 976              		.cfi_def_cfa_register 7
 977 0006 3960     		str	r1, [r7]
 978 0008 1100     		movs	r1, r2
 979 000a FB1D     		adds	r3, r7, #7
 980 000c 021C     		adds	r2, r0, #0
 981 000e 1A70     		strb	r2, [r3]
 982 0010 3B1D     		adds	r3, r7, #4
 983 0012 0A1C     		adds	r2, r1, #0
 984 0014 1A80     		strh	r2, [r3]
1345:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 985              		.loc 1 1345 0
 986 0016 FB1D     		adds	r3, r7, #7
 987 0018 1B78     		ldrb	r3, [r3]
 988 001a 002B     		cmp	r3, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 42


 989 001c 00D1     		bne	.LCB836
 990 001e 8AE0     		b	.L62	@long jump
 991              	.LCB836:
 992              		.loc 1 1345 0 is_stmt 0 discriminator 1
 993 0020 FB1D     		adds	r3, r7, #7
 994 0022 1B78     		ldrb	r3, [r3]
 995 0024 082B     		cmp	r3, #8
 996 0026 00D9     		bls	.LCB840
 997 0028 85E0     		b	.L62	@long jump
 998              	.LCB840:
1346:Generated_Source\PSoC4/USBUART.c ****     {
1347:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 999              		.loc 1 1349 0 is_stmt 1
 1000 002a 3B1D     		adds	r3, r7, #4
 1001 002c 1988     		ldrh	r1, [r3]
 1002 002e FB1D     		adds	r3, r7, #7
 1003 0030 1A78     		ldrb	r2, [r3]
 1004 0032 4348     		ldr	r0, .L63
 1005 0034 1300     		movs	r3, r2
 1006 0036 5B00     		lsls	r3, r3, #1
 1007 0038 9B18     		adds	r3, r3, r2
 1008 003a 9B00     		lsls	r3, r3, #2
 1009 003c C318     		adds	r3, r0, r3
 1010 003e 0633     		adds	r3, r3, #6
 1011 0040 1B88     		ldrh	r3, [r3]
 1012 0042 9BB2     		uxth	r3, r3
 1013 0044 1A00     		movs	r2, r3
 1014 0046 8023     		movs	r3, #128
 1015 0048 9B00     		lsls	r3, r3, #2
 1016 004a 9B1A     		subs	r3, r3, r2
 1017 004c 9942     		cmp	r1, r3
 1018 004e 0FD9     		bls	.L58
1350:Generated_Source\PSoC4/USBUART.c ****         {
1351:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1019              		.loc 1 1351 0
 1020 0050 FB1D     		adds	r3, r7, #7
 1021 0052 1A78     		ldrb	r2, [r3]
 1022 0054 3A49     		ldr	r1, .L63
 1023 0056 1300     		movs	r3, r2
 1024 0058 5B00     		lsls	r3, r3, #1
 1025 005a 9B18     		adds	r3, r3, r2
 1026 005c 9B00     		lsls	r3, r3, #2
 1027 005e CB18     		adds	r3, r1, r3
 1028 0060 0633     		adds	r3, r3, #6
 1029 0062 1B88     		ldrh	r3, [r3]
 1030 0064 9AB2     		uxth	r2, r3
 1031 0066 3B1D     		adds	r3, r7, #4
 1032 0068 8021     		movs	r1, #128
 1033 006a 8900     		lsls	r1, r1, #2
 1034 006c 8A1A     		subs	r2, r1, r2
 1035 006e 1A80     		strh	r2, [r3]
 1036              	.L58:
1352:Generated_Source\PSoC4/USBUART.c ****         }
1353:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 43


1355:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
 1037              		.loc 1 1356 0
 1038 0070 344D     		ldr	r5, .L63+4
 1039 0072 FB1D     		adds	r3, r7, #7
 1040 0074 1978     		ldrb	r1, [r3]
 1041 0076 3B1D     		adds	r3, r7, #4
 1042 0078 1B88     		ldrh	r3, [r3]
 1043 007a 1B0A     		lsrs	r3, r3, #8
 1044 007c 9BB2     		uxth	r3, r3
 1045 007e D8B2     		uxtb	r0, r3
 1046 0080 FB1D     		adds	r3, r7, #7
 1047 0082 1A78     		ldrb	r2, [r3]
 1048 0084 2E4C     		ldr	r4, .L63
 1049 0086 1300     		movs	r3, r2
 1050 0088 5B00     		lsls	r3, r3, #1
 1051 008a 9B18     		adds	r3, r3, r2
 1052 008c 9B00     		lsls	r3, r3, #2
 1053 008e E318     		adds	r3, r4, r3
 1054 0090 0333     		adds	r3, r3, #3
 1055 0092 1B78     		ldrb	r3, [r3]
 1056 0094 DBB2     		uxtb	r3, r3
 1057 0096 0343     		orrs	r3, r0
 1058 0098 DBB2     		uxtb	r3, r3
 1059 009a 1A00     		movs	r2, r3
 1060 009c 8B01     		lsls	r3, r1, #6
 1061 009e 5A51     		str	r2, [r3, r5]
1357:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 1062              		.loc 1 1357 0
 1063 00a0 2849     		ldr	r1, .L63+4
 1064 00a2 FB1D     		adds	r3, r7, #7
 1065 00a4 1B78     		ldrb	r3, [r3]
 1066 00a6 3A1D     		adds	r2, r7, #4
 1067 00a8 1288     		ldrh	r2, [r2]
 1068 00aa D2B2     		uxtb	r2, r2
 1069 00ac 9B01     		lsls	r3, r3, #6
 1070 00ae CB18     		adds	r3, r1, r3
 1071 00b0 0433     		adds	r3, r3, #4
 1072 00b2 1A60     		str	r2, [r3]
1358:Generated_Source\PSoC4/USBUART.c **** 
1359:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
 1073              		.loc 1 1360 0
 1074 00b4 3B68     		ldr	r3, [r7]
 1075 00b6 002B     		cmp	r3, #0
 1076 00b8 1FD0     		beq	.L59
 1077              	.LBB2:
1361:Generated_Source\PSoC4/USBUART.c ****         {
1362:Generated_Source\PSoC4/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
 1078              		.loc 1 1364 0
 1079 00ba 0E23     		movs	r3, #14
 1080 00bc FB18     		adds	r3, r7, r3
 1081 00be 0022     		movs	r2, #0
 1082 00c0 1A80     		strh	r2, [r3]
 1083 00c2 13E0     		b	.L60
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 44


 1084              	.L61:
1365:Generated_Source\PSoC4/USBUART.c ****             {
1366:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1085              		.loc 1 1366 0 discriminator 3
 1086 00c4 2048     		ldr	r0, .L63+8
 1087 00c6 FB1D     		adds	r3, r7, #7
 1088 00c8 1B78     		ldrb	r3, [r3]
 1089 00ca 0E22     		movs	r2, #14
 1090 00cc BA18     		adds	r2, r7, r2
 1091 00ce 1288     		ldrh	r2, [r2]
 1092 00d0 3968     		ldr	r1, [r7]
 1093 00d2 8A18     		adds	r2, r1, r2
 1094 00d4 1278     		ldrb	r2, [r2]
 1095 00d6 9B01     		lsls	r3, r3, #6
 1096 00d8 C318     		adds	r3, r0, r3
 1097 00da 2033     		adds	r3, r3, #32
 1098 00dc 1A60     		str	r2, [r3]
1364:Generated_Source\PSoC4/USBUART.c ****             {
 1099              		.loc 1 1364 0 discriminator 3
 1100 00de 0E23     		movs	r3, #14
 1101 00e0 FB18     		adds	r3, r7, r3
 1102 00e2 0E22     		movs	r2, #14
 1103 00e4 BA18     		adds	r2, r7, r2
 1104 00e6 1288     		ldrh	r2, [r2]
 1105 00e8 0132     		adds	r2, r2, #1
 1106 00ea 1A80     		strh	r2, [r3]
 1107              	.L60:
1364:Generated_Source\PSoC4/USBUART.c ****             {
 1108              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1109 00ec 0E23     		movs	r3, #14
 1110 00ee FA18     		adds	r2, r7, r3
 1111 00f0 3B1D     		adds	r3, r7, #4
 1112 00f2 1288     		ldrh	r2, [r2]
 1113 00f4 1B88     		ldrh	r3, [r3]
 1114 00f6 9A42     		cmp	r2, r3
 1115 00f8 E4D3     		bcc	.L61
 1116              	.L59:
 1117              	.LBE2:
1367:Generated_Source\PSoC4/USBUART.c ****             }
1368:Generated_Source\PSoC4/USBUART.c ****         }
1369:Generated_Source\PSoC4/USBUART.c **** 
1370:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1118              		.loc 1 1371 0 is_stmt 1
 1119 00fa FB1D     		adds	r3, r7, #7
 1120 00fc 1A78     		ldrb	r2, [r3]
 1121 00fe 1049     		ldr	r1, .L63
 1122 0100 1300     		movs	r3, r2
 1123 0102 5B00     		lsls	r3, r3, #1
 1124 0104 9B18     		adds	r3, r3, r2
 1125 0106 9B00     		lsls	r3, r3, #2
 1126 0108 CB18     		adds	r3, r1, r3
 1127 010a 0133     		adds	r3, r3, #1
 1128 010c 0022     		movs	r2, #0
 1129 010e 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC4/USBUART.c **** 
1373:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 45


1374:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1130              		.loc 1 1374 0
 1131 0110 0C4C     		ldr	r4, .L63+4
 1132 0112 FB1D     		adds	r3, r7, #7
 1133 0114 1978     		ldrb	r1, [r3]
 1134 0116 FB1D     		adds	r3, r7, #7
 1135 0118 1A78     		ldrb	r2, [r3]
 1136 011a 0948     		ldr	r0, .L63
 1137 011c 1300     		movs	r3, r2
 1138 011e 5B00     		lsls	r3, r3, #1
 1139 0120 9B18     		adds	r3, r3, r2
 1140 0122 9B00     		lsls	r3, r3, #2
 1141 0124 C318     		adds	r3, r0, r3
 1142 0126 0533     		adds	r3, r3, #5
 1143 0128 1B78     		ldrb	r3, [r3]
 1144 012a DBB2     		uxtb	r3, r3
 1145 012c 1A00     		movs	r2, r3
 1146 012e 8B01     		lsls	r3, r1, #6
 1147 0130 E318     		adds	r3, r4, r3
 1148 0132 0833     		adds	r3, r3, #8
 1149 0134 1A60     		str	r2, [r3]
 1150              	.L62:
1375:Generated_Source\PSoC4/USBUART.c **** 
1376:Generated_Source\PSoC4/USBUART.c ****     #else
1377:Generated_Source\PSoC4/USBUART.c **** 
1378:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC4/USBUART.c ****             {
1382:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC4/USBUART.c ****             }
1384:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC4/USBUART.c **** 
1386:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC4/USBUART.c **** 
1390:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC4/USBUART.c ****             {
1392:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC4/USBUART.c **** 
1395:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC4/USBUART.c **** 
1398:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC4/USBUART.c **** 
1402:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC4/USBUART.c ****                 --length;
1404:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC4/USBUART.c **** 
1407:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 46


1410:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC4/USBUART.c ****             #else
1413:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC4/USBUART.c **** 
1418:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC4/USBUART.c **** 
1423:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1425:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1426:Generated_Source\PSoC4/USBUART.c **** 
1427:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC4/USBUART.c ****             }
1429:Generated_Source\PSoC4/USBUART.c ****             else
1430:Generated_Source\PSoC4/USBUART.c ****             {
1431:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC4/USBUART.c ****             }
1434:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC4/USBUART.c **** 
1436:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC4/USBUART.c ****             {
1439:Generated_Source\PSoC4/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC4/USBUART.c **** 
1442:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC4/USBUART.c **** 
1445:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC4/USBUART.c **** 
1448:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC4/USBUART.c **** 
1452:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC4/USBUART.c **** 
1456:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC4/USBUART.c **** 
1460:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC4/USBUART.c **** 
1463:Generated_Source\PSoC4/USBUART.c **** 
1464:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 47


1467:Generated_Source\PSoC4/USBUART.c ****             #else
1468:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC4/USBUART.c **** 
1470:Generated_Source\PSoC4/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC4/USBUART.c **** 
1474:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC4/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC4/USBUART.c **** 
1481:Generated_Source\PSoC4/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC4/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC4/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC4/USBUART.c ****                     */
1485:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC4/USBUART.c **** 
1489:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC4/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC4/USBUART.c ****                 #else
1493:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC4/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC4/USBUART.c **** 
1500:Generated_Source\PSoC4/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC4/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC4/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC4/USBUART.c ****             }
1507:Generated_Source\PSoC4/USBUART.c ****             else
1508:Generated_Source\PSoC4/USBUART.c ****             {
1509:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC4/USBUART.c **** 
1512:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC4/USBUART.c ****                 {
1514:Generated_Source\PSoC4/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC4/USBUART.c **** 
1518:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC4/USBUART.c **** 
1521:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 48


1524:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC4/USBUART.c **** 
1527:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC4/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC4/USBUART.c **** 
1532:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC4/USBUART.c **** 
1536:Generated_Source\PSoC4/USBUART.c **** 
1537:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC4/USBUART.c **** 
1541:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC4/USBUART.c **** 
1544:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC4/USBUART.c **** 
1549:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC4/USBUART.c **** 
1553:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC4/USBUART.c **** 
1557:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC4/USBUART.c ****                     {
1560:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC4/USBUART.c ****                     }                   
1562:Generated_Source\PSoC4/USBUART.c **** 
1563:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC4/USBUART.c **** 
1566:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC4/USBUART.c **** 
1569:Generated_Source\PSoC4/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC4/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC4/USBUART.c **** 
1573:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC4/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC4/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC4/USBUART.c ****                                                                                LO16((uint32) &USBUA
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 49


1581:Generated_Source\PSoC4/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC4/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC4/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC4/USBUART.c **** 
1588:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC4/USBUART.c **** 
1593:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC4/USBUART.c ****                 }
1595:Generated_Source\PSoC4/USBUART.c ****                 else
1596:Generated_Source\PSoC4/USBUART.c ****                 {
1597:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC4/USBUART.c ****                 }
1600:Generated_Source\PSoC4/USBUART.c ****             }
1601:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC4/USBUART.c ****     }
1604:Generated_Source\PSoC4/USBUART.c **** }
 1151              		.loc 1 1604 0
 1152 0136 C046     		nop
 1153 0138 BD46     		mov	sp, r7
 1154 013a 04B0     		add	sp, sp, #16
 1155              		@ sp needed
 1156 013c B0BD     		pop	{r4, r5, r7, pc}
 1157              	.L64:
 1158 013e C046     		.align	2
 1159              	.L63:
 1160 0140 00000000 		.word	USBUART_EP
 1161 0144 F0FF2B40 		.word	1076625392
 1162 0148 C0012C40 		.word	1076625856
 1163              		.cfi_endproc
 1164              	.LFE12:
 1165              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1166              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1167              		.align	2
 1168              		.global	USBUART_ReadOutEP
 1169              		.code	16
 1170              		.thumb_func
 1171              		.type	USBUART_ReadOutEP, %function
 1172              	USBUART_ReadOutEP:
 1173              	.LFB13:
1605:Generated_Source\PSoC4/USBUART.c **** 
1606:Generated_Source\PSoC4/USBUART.c **** 
1607:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC4/USBUART.c **** *
1611:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC4/USBUART.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 50


1615:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC4/USBUART.c **** *
1621:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC4/USBUART.c **** *
1627:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC4/USBUART.c **** *
1629:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC4/USBUART.c **** *
1633:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC4/USBUART.c **** *
1637:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC4/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC4/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC4/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC4/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC4/USBUART.c **** *
1646:Generated_Source\PSoC4/USBUART.c **** * \return
1647:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC4/USBUART.c **** *
1649:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC4/USBUART.c **** *  No.
1651:Generated_Source\PSoC4/USBUART.c **** *
1652:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC4/USBUART.c ****                                                                         
1655:Generated_Source\PSoC4/USBUART.c **** {
 1174              		.loc 1 1655 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 16
 1177              		@ frame_needed = 1, uses_anonymous_args = 0
 1178 0000 80B5     		push	{r7, lr}
 1179              		.cfi_def_cfa_offset 8
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 84B0     		sub	sp, sp, #16
 1183              		.cfi_def_cfa_offset 24
 1184 0004 00AF     		add	r7, sp, #0
 1185              		.cfi_def_cfa_register 7
 1186 0006 3960     		str	r1, [r7]
 1187 0008 1100     		movs	r1, r2
 1188 000a FB1D     		adds	r3, r7, #7
 1189 000c 021C     		adds	r2, r0, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 51


 1190 000e 1A70     		strb	r2, [r3]
 1191 0010 3B1D     		adds	r3, r7, #4
 1192 0012 0A1C     		adds	r2, r1, #0
 1193 0014 1A80     		strh	r2, [r3]
1656:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1194              		.loc 1 1656 0
 1195 0016 3B68     		ldr	r3, [r7]
 1196 0018 002B     		cmp	r3, #0
 1197 001a 45D0     		beq	.L66
 1198              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1199 001c FB1D     		adds	r3, r7, #7
 1200 001e 1B78     		ldrb	r3, [r3]
 1201 0020 002B     		cmp	r3, #0
 1202 0022 41D0     		beq	.L66
 1203              		.loc 1 1656 0 discriminator 2
 1204 0024 FB1D     		adds	r3, r7, #7
 1205 0026 1B78     		ldrb	r3, [r3]
 1206 0028 082B     		cmp	r3, #8
 1207 002a 3DD8     		bhi	.L66
1657:Generated_Source\PSoC4/USBUART.c ****     {
1658:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1208              		.loc 1 1660 0 is_stmt 1
 1209 002c FB1D     		adds	r3, r7, #7
 1210 002e 1B78     		ldrb	r3, [r3]
 1211 0030 1800     		movs	r0, r3
 1212 0032 FFF7FEFF 		bl	USBUART_GetEPCount
 1213 0036 0300     		movs	r3, r0
 1214 0038 1A00     		movs	r2, r3
 1215 003a 3B1D     		adds	r3, r7, #4
 1216 003c 1B88     		ldrh	r3, [r3]
 1217 003e 9342     		cmp	r3, r2
 1218 0040 07D9     		bls	.L67
 1219              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1220 0042 FB1D     		adds	r3, r7, #7
 1221 0044 1B78     		ldrb	r3, [r3]
 1222 0046 1800     		movs	r0, r3
 1223 0048 FFF7FEFF 		bl	USBUART_GetEPCount
 1224 004c 0300     		movs	r3, r0
 1225 004e 1A00     		movs	r2, r3
 1226 0050 01E0     		b	.L68
 1227              	.L67:
 1228              		.loc 1 1660 0 discriminator 2
 1229 0052 3B1D     		adds	r3, r7, #4
 1230 0054 1A88     		ldrh	r2, [r3]
 1231              	.L68:
 1232              		.loc 1 1660 0 discriminator 4
 1233 0056 3B1D     		adds	r3, r7, #4
 1234 0058 1A80     		strh	r2, [r3]
 1235              	.LBB3:
1661:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC4/USBUART.c **** 
1663:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC4/USBUART.c ****         {
1665:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 52


1667:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < length; ++i)
 1236              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1237 005a 0E23     		movs	r3, #14
 1238 005c FB18     		adds	r3, r7, r3
 1239 005e 0022     		movs	r2, #0
 1240 0060 1A80     		strh	r2, [r3]
 1241 0062 14E0     		b	.L69
 1242              	.L70:
1668:Generated_Source\PSoC4/USBUART.c ****             {
1669:Generated_Source\PSoC4/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1243              		.loc 1 1669 0 discriminator 3
 1244 0064 0E23     		movs	r3, #14
 1245 0066 FB18     		adds	r3, r7, r3
 1246 0068 1B88     		ldrh	r3, [r3]
 1247 006a 3A68     		ldr	r2, [r7]
 1248 006c D218     		adds	r2, r2, r3
 1249 006e 1349     		ldr	r1, .L73
 1250 0070 FB1D     		adds	r3, r7, #7
 1251 0072 1B78     		ldrb	r3, [r3]
 1252 0074 9B01     		lsls	r3, r3, #6
 1253 0076 CB18     		adds	r3, r1, r3
 1254 0078 2033     		adds	r3, r3, #32
 1255 007a 1B68     		ldr	r3, [r3]
 1256 007c DBB2     		uxtb	r3, r3
 1257 007e 1370     		strb	r3, [r2]
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1258              		.loc 1 1667 0 discriminator 3
 1259 0080 0E23     		movs	r3, #14
 1260 0082 FB18     		adds	r3, r7, r3
 1261 0084 0E22     		movs	r2, #14
 1262 0086 BA18     		adds	r2, r7, r2
 1263 0088 1288     		ldrh	r2, [r2]
 1264 008a 0132     		adds	r2, r2, #1
 1265 008c 1A80     		strh	r2, [r3]
 1266              	.L69:
1667:Generated_Source\PSoC4/USBUART.c ****             {
 1267              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1268 008e 0E23     		movs	r3, #14
 1269 0090 FA18     		adds	r2, r7, r3
 1270 0092 3B1D     		adds	r3, r7, #4
 1271 0094 1288     		ldrh	r2, [r2]
 1272 0096 1B88     		ldrh	r3, [r3]
 1273 0098 9A42     		cmp	r2, r3
 1274 009a E3D3     		bcc	.L70
 1275              	.LBE3:
1670:Generated_Source\PSoC4/USBUART.c ****             }
1671:Generated_Source\PSoC4/USBUART.c ****         }
1672:Generated_Source\PSoC4/USBUART.c **** 
1673:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1276              		.loc 1 1674 0 is_stmt 1
 1277 009c FB1D     		adds	r3, r7, #7
 1278 009e 1B78     		ldrb	r3, [r3]
 1279 00a0 1800     		movs	r0, r3
 1280 00a2 FFF7FEFF 		bl	USBUART_EnableOutEP
 1281 00a6 02E0     		b	.L71
 1282              	.L66:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 53


1675:Generated_Source\PSoC4/USBUART.c ****     #else
1676:Generated_Source\PSoC4/USBUART.c **** 
1677:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC4/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC4/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC4/USBUART.c ****             {
1681:Generated_Source\PSoC4/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC4/USBUART.c ****             }
1683:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC4/USBUART.c **** 
1685:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC4/USBUART.c ****         {
1688:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC4/USBUART.c **** 
1690:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC4/USBUART.c **** 
1693:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC4/USBUART.c **** 
1697:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC4/USBUART.c **** 
1701:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC4/USBUART.c **** 
1704:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC4/USBUART.c ****         }
1707:Generated_Source\PSoC4/USBUART.c ****         #else
1708:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC4/USBUART.c **** 
1713:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC4/USBUART.c **** 
1718:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC4/USBUART.c **** 
1722:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC4/USBUART.c ****             */
1725:Generated_Source\PSoC4/USBUART.c **** 
1726:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC4/USBUART.c **** 
1728:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC4/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC4/USBUART.c ****         {
1731:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 54


1732:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC4/USBUART.c **** 
1734:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC4/USBUART.c **** 
1737:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC4/USBUART.c **** 
1740:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC4/USBUART.c **** 
1743:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC4/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC4/USBUART.c **** 
1748:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC4/USBUART.c **** 
1752:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC4/USBUART.c **** 
1755:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC4/USBUART.c **** 
1759:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC4/USBUART.c **** 
1763:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC4/USBUART.c **** 
1766:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC4/USBUART.c **** 
1769:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC4/USBUART.c **** 
1773:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC4/USBUART.c **** 
1776:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC4/USBUART.c **** 
1780:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC4/USBUART.c **** 
1784:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC4/USBUART.c **** 
1787:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 55


1789:Generated_Source\PSoC4/USBUART.c **** 
1790:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC4/USBUART.c ****             {
1792:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC4/USBUART.c ****             }
1794:Generated_Source\PSoC4/USBUART.c **** 
1795:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC4/USBUART.c ****         }
1798:Generated_Source\PSoC4/USBUART.c ****         #else
1799:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC4/USBUART.c **** 
1803:Generated_Source\PSoC4/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC4/USBUART.c **** 
1806:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC4/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC4/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC4/USBUART.c **** 
1811:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC4/USBUART.c ****             */
1814:Generated_Source\PSoC4/USBUART.c **** 
1815:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC4/USBUART.c ****     }
1818:Generated_Source\PSoC4/USBUART.c ****     else
1819:Generated_Source\PSoC4/USBUART.c ****     {
1820:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
 1283              		.loc 1 1820 0
 1284 00a8 3B1D     		adds	r3, r7, #4
 1285 00aa 0022     		movs	r2, #0
 1286 00ac 1A80     		strh	r2, [r3]
 1287              	.L71:
1821:Generated_Source\PSoC4/USBUART.c ****     }
1822:Generated_Source\PSoC4/USBUART.c **** 
1823:Generated_Source\PSoC4/USBUART.c ****     return (length);
 1288              		.loc 1 1823 0
 1289 00ae 3B1D     		adds	r3, r7, #4
 1290 00b0 1B88     		ldrh	r3, [r3]
1824:Generated_Source\PSoC4/USBUART.c **** }
 1291              		.loc 1 1824 0
 1292 00b2 1800     		movs	r0, r3
 1293 00b4 BD46     		mov	sp, r7
 1294 00b6 04B0     		add	sp, sp, #16
 1295              		@ sp needed
 1296 00b8 80BD     		pop	{r7, pc}
 1297              	.L74:
 1298 00ba C046     		.align	2
 1299              	.L73:
 1300 00bc C0012C40 		.word	1076625856
 1301              		.cfi_endproc
 1302              	.LFE13:
 1303              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 56


 1304              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1305              		.align	2
 1306              		.global	USBUART_EnableOutEP
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	USBUART_EnableOutEP, %function
 1310              	USBUART_EnableOutEP:
 1311              	.LFB14:
1825:Generated_Source\PSoC4/USBUART.c **** 
1826:Generated_Source\PSoC4/USBUART.c **** 
1827:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC4/USBUART.c **** *
1832:Generated_Source\PSoC4/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC4/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC4/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC4/USBUART.c **** *
1836:Generated_Source\PSoC4/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC4/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC4/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC4/USBUART.c **** *
1840:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC4/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC4/USBUART.c **** *
1844:Generated_Source\PSoC4/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC4/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC4/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC4/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC4/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC4/USBUART.c **** *
1850:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC4/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC4/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC4/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC4/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC4/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC4/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC4/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC4/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC4/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC4/USBUART.c **** *
1861:Generated_Source\PSoC4/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC4/USBUART.c **** *  No.
1863:Generated_Source\PSoC4/USBUART.c **** *
1864:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC4/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC4/USBUART.c **** {
1867:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC4/USBUART.c **** 
1870:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC4/USBUART.c ****     {
1872:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC4/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 57


1874:Generated_Source\PSoC4/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC4/USBUART.c ****         {
1876:Generated_Source\PSoC4/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC4/USBUART.c ****         }
1878:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC4/USBUART.c **** 
1880:Generated_Source\PSoC4/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC4/USBUART.c **** 
1884:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC4/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC4/USBUART.c **** 
1887:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC4/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC4/USBUART.c ****         {
1890:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC4/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC4/USBUART.c **** 
1893:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC4/USBUART.c ****             {
1897:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC4/USBUART.c ****             }
1899:Generated_Source\PSoC4/USBUART.c ****         }
1900:Generated_Source\PSoC4/USBUART.c **** 
1901:Generated_Source\PSoC4/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC4/USBUART.c **** 
1904:Generated_Source\PSoC4/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC4/USBUART.c **** 
1907:Generated_Source\PSoC4/USBUART.c ****     #else
1908:Generated_Source\PSoC4/USBUART.c **** 
1909:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC4/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC4/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC4/USBUART.c **** 
1913:Generated_Source\PSoC4/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC4/USBUART.c ****             {
1915:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC4/USBUART.c **** 
1917:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC4/USBUART.c **** 
1920:Generated_Source\PSoC4/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC4/USBUART.c **** 
1924:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC4/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC4/USBUART.c **** 
1929:Generated_Source\PSoC4/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 58


1931:Generated_Source\PSoC4/USBUART.c **** 
1932:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC4/USBUART.c **** 
1935:Generated_Source\PSoC4/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC4/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC4/USBUART.c **** 
1939:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC4/USBUART.c ****             }
1941:Generated_Source\PSoC4/USBUART.c ****             else
1942:Generated_Source\PSoC4/USBUART.c ****             {
1943:Generated_Source\PSoC4/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC4/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC4/USBUART.c ****             }
1946:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC4/USBUART.c **** 
1948:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC4/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC4/USBUART.c ****             {
1951:Generated_Source\PSoC4/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC4/USBUART.c **** 
1953:Generated_Source\PSoC4/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC4/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC4/USBUART.c **** 
1956:Generated_Source\PSoC4/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC4/USBUART.c **** 
1959:Generated_Source\PSoC4/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC4/USBUART.c **** 
1963:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC4/USBUART.c **** 
1967:Generated_Source\PSoC4/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC4/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC4/USBUART.c **** 
1971:Generated_Source\PSoC4/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC4/USBUART.c **** 
1974:Generated_Source\PSoC4/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC4/USBUART.c ****             }
1977:Generated_Source\PSoC4/USBUART.c ****             else
1978:Generated_Source\PSoC4/USBUART.c ****             {
1979:Generated_Source\PSoC4/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC4/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC4/USBUART.c **** 
1982:Generated_Source\PSoC4/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC4/USBUART.c ****                 {
1984:Generated_Source\PSoC4/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC4/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC4/USBUART.c **** 
1987:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of full bursts. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 59


1988:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC4/USBUART.c **** 
1990:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC4/USBUART.c **** 
1993:Generated_Source\PSoC4/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC4/USBUART.c **** 
1996:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC4/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC4/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC4/USBUART.c **** 
2001:Generated_Source\PSoC4/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC4/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC4/USBUART.c **** 
2005:Generated_Source\PSoC4/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC4/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC4/USBUART.c **** 
2009:Generated_Source\PSoC4/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC4/USBUART.c **** 
2012:Generated_Source\PSoC4/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC4/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC4/USBUART.c **** 
2017:Generated_Source\PSoC4/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC4/USBUART.c **** 
2021:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC4/USBUART.c **** 
2025:Generated_Source\PSoC4/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC4/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC4/USBUART.c ****                     {
2028:Generated_Source\PSoC4/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC4/USBUART.c ****                     }
2030:Generated_Source\PSoC4/USBUART.c **** 
2031:Generated_Source\PSoC4/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC4/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC4/USBUART.c **** 
2034:Generated_Source\PSoC4/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC4/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC4/USBUART.c **** 
2037:Generated_Source\PSoC4/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC4/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC4/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC4/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC4/USBUART.c **** 
2042:Generated_Source\PSoC4/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC4/USBUART.c ****                 }
2044:Generated_Source\PSoC4/USBUART.c ****                 else
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 60


2045:Generated_Source\PSoC4/USBUART.c ****                 {
2046:Generated_Source\PSoC4/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC4/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC4/USBUART.c ****                 }
2049:Generated_Source\PSoC4/USBUART.c ****             }
2050:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC4/USBUART.c ****     }
2053:Generated_Source\PSoC4/USBUART.c **** }
2054:Generated_Source\PSoC4/USBUART.c **** 
2055:Generated_Source\PSoC4/USBUART.c **** 
2056:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC4/USBUART.c **** *
2060:Generated_Source\PSoC4/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC4/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC4/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC4/USBUART.c **** *
2064:Generated_Source\PSoC4/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC4/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC4/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC4/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC4/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC4/USBUART.c **** *
2070:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC4/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC4/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC4/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC4/USBUART.c **** *
2076:Generated_Source\PSoC4/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC4/USBUART.c **** *
2078:Generated_Source\PSoC4/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC4/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC4/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC4/USBUART.c **** *
2082:Generated_Source\PSoC4/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC4/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC4/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC4/USBUART.c **** *
2086:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC4/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC4/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC4/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC4/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC4/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC4/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC4/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC4/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC4/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC4/USBUART.c **** *
2097:Generated_Source\PSoC4/USBUART.c **** * \return
2098:Generated_Source\PSoC4/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC4/USBUART.c **** *
2100:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC4/USBUART.c **** *  No.
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 61


2102:Generated_Source\PSoC4/USBUART.c **** *
2103:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC4/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC4/USBUART.c **** {
2106:Generated_Source\PSoC4/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC4/USBUART.c **** 
2108:Generated_Source\PSoC4/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC4/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC4/USBUART.c **** 
2111:Generated_Source\PSoC4/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC4/USBUART.c ****     {
2113:Generated_Source\PSoC4/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC4/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC4/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC4/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC4/USBUART.c **** 
2118:Generated_Source\PSoC4/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC4/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC4/USBUART.c **** 
2121:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC4/USBUART.c ****         {
2123:Generated_Source\PSoC4/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC4/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC4/USBUART.c **** 
2126:Generated_Source\PSoC4/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC4/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC4/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC4/USBUART.c ****             {
2130:Generated_Source\PSoC4/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC4/USBUART.c ****             }
2132:Generated_Source\PSoC4/USBUART.c ****         }
2133:Generated_Source\PSoC4/USBUART.c **** 
2134:Generated_Source\PSoC4/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC4/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC4/USBUART.c ****     #else
2137:Generated_Source\PSoC4/USBUART.c **** 
2138:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC4/USBUART.c ****         {
2140:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC4/USBUART.c **** 
2142:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC4/USBUART.c **** 
2145:Generated_Source\PSoC4/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC4/USBUART.c **** 
2149:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC4/USBUART.c **** 
2153:Generated_Source\PSoC4/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC4/USBUART.c **** 
2156:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 62


2159:Generated_Source\PSoC4/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC4/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC4/USBUART.c **** 
2163:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC4/USBUART.c ****             */
2166:Generated_Source\PSoC4/USBUART.c ****         }
2167:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC4/USBUART.c **** 
2169:Generated_Source\PSoC4/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC4/USBUART.c ****         {
2171:Generated_Source\PSoC4/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC4/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC4/USBUART.c **** 
2174:Generated_Source\PSoC4/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC4/USBUART.c **** 
2177:Generated_Source\PSoC4/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC4/USBUART.c **** 
2180:Generated_Source\PSoC4/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC4/USBUART.c **** 
2183:Generated_Source\PSoC4/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC4/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC4/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC4/USBUART.c **** 
2188:Generated_Source\PSoC4/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC4/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC4/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC4/USBUART.c **** 
2192:Generated_Source\PSoC4/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC4/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC4/USBUART.c **** 
2196:Generated_Source\PSoC4/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC4/USBUART.c **** 
2199:Generated_Source\PSoC4/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC4/USBUART.c **** 
2202:Generated_Source\PSoC4/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC4/USBUART.c **** 
2206:Generated_Source\PSoC4/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC4/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC4/USBUART.c **** 
2209:Generated_Source\PSoC4/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC4/USBUART.c **** 
2212:Generated_Source\PSoC4/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC4/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 63


2216:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC4/USBUART.c **** 
2219:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC4/USBUART.c **** 
2223:Generated_Source\PSoC4/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC4/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC4/USBUART.c **** 
2227:Generated_Source\PSoC4/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC4/USBUART.c **** 
2230:Generated_Source\PSoC4/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC4/USBUART.c ****             
2233:Generated_Source\PSoC4/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC4/USBUART.c ****             {
2235:Generated_Source\PSoC4/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC4/USBUART.c ****             }
2237:Generated_Source\PSoC4/USBUART.c **** 
2238:Generated_Source\PSoC4/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC4/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC4/USBUART.c **** 
2241:Generated_Source\PSoC4/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC4/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC4/USBUART.c ****             */
2244:Generated_Source\PSoC4/USBUART.c ****         }
2245:Generated_Source\PSoC4/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC4/USBUART.c ****     }
2248:Generated_Source\PSoC4/USBUART.c ****     else
2249:Generated_Source\PSoC4/USBUART.c ****     {
2250:Generated_Source\PSoC4/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC4/USBUART.c ****     }
2252:Generated_Source\PSoC4/USBUART.c **** 
2253:Generated_Source\PSoC4/USBUART.c ****     return (length);
2254:Generated_Source\PSoC4/USBUART.c **** }
2255:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC4/USBUART.c **** 
2257:Generated_Source\PSoC4/USBUART.c **** 
2258:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC4/USBUART.c **** *
2262:Generated_Source\PSoC4/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC4/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC4/USBUART.c **** *
2265:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC4/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC4/USBUART.c **** *
2268:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC4/USBUART.c **** *
2270:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC4/USBUART.c **** *
2272:Generated_Source\PSoC4/USBUART.c **** * \reentrant
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 64


2273:Generated_Source\PSoC4/USBUART.c **** *  No.
2274:Generated_Source\PSoC4/USBUART.c **** *
2275:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC4/USBUART.c **** {
 1312              		.loc 1 2277 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 8
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 90B5     		push	{r4, r7, lr}
 1317              		.cfi_def_cfa_offset 12
 1318              		.cfi_offset 4, -12
 1319              		.cfi_offset 7, -8
 1320              		.cfi_offset 14, -4
 1321 0002 83B0     		sub	sp, sp, #12
 1322              		.cfi_def_cfa_offset 24
 1323 0004 00AF     		add	r7, sp, #0
 1324              		.cfi_def_cfa_register 7
 1325 0006 0200     		movs	r2, r0
 1326 0008 FB1D     		adds	r3, r7, #7
 1327 000a 1A70     		strb	r2, [r3]
2278:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1328              		.loc 1 2278 0
 1329 000c FB1D     		adds	r3, r7, #7
 1330 000e 1B78     		ldrb	r3, [r3]
 1331 0010 002B     		cmp	r3, #0
 1332 0012 21D0     		beq	.L77
 1333              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1334 0014 FB1D     		adds	r3, r7, #7
 1335 0016 1B78     		ldrb	r3, [r3]
 1336 0018 082B     		cmp	r3, #8
 1337 001a 1DD8     		bhi	.L77
2279:Generated_Source\PSoC4/USBUART.c ****     {
2280:Generated_Source\PSoC4/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1338              		.loc 1 2280 0 is_stmt 1
 1339 001c FB1D     		adds	r3, r7, #7
 1340 001e 1A78     		ldrb	r2, [r3]
 1341 0020 0F49     		ldr	r1, .L78
 1342 0022 1300     		movs	r3, r2
 1343 0024 5B00     		lsls	r3, r3, #1
 1344 0026 9B18     		adds	r3, r3, r2
 1345 0028 9B00     		lsls	r3, r3, #2
 1346 002a CB18     		adds	r3, r1, r3
 1347 002c 0133     		adds	r3, r3, #1
 1348 002e 0022     		movs	r2, #0
 1349 0030 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/USBUART.c **** 
2282:Generated_Source\PSoC4/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1350              		.loc 1 2283 0
 1351 0032 0C4C     		ldr	r4, .L78+4
 1352 0034 FB1D     		adds	r3, r7, #7
 1353 0036 1978     		ldrb	r1, [r3]
 1354 0038 FB1D     		adds	r3, r7, #7
 1355 003a 1A78     		ldrb	r2, [r3]
 1356 003c 0848     		ldr	r0, .L78
 1357 003e 1300     		movs	r3, r2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 65


 1358 0040 5B00     		lsls	r3, r3, #1
 1359 0042 9B18     		adds	r3, r3, r2
 1360 0044 9B00     		lsls	r3, r3, #2
 1361 0046 C318     		adds	r3, r0, r3
 1362 0048 0533     		adds	r3, r3, #5
 1363 004a 1B78     		ldrb	r3, [r3]
 1364 004c DBB2     		uxtb	r3, r3
 1365 004e 1A00     		movs	r2, r3
 1366 0050 8B01     		lsls	r3, r1, #6
 1367 0052 E318     		adds	r3, r4, r3
 1368 0054 0833     		adds	r3, r3, #8
 1369 0056 1A60     		str	r2, [r3]
 1370              	.L77:
2284:Generated_Source\PSoC4/USBUART.c ****         
2285:Generated_Source\PSoC4/USBUART.c ****     }
2286:Generated_Source\PSoC4/USBUART.c **** }
 1371              		.loc 1 2286 0
 1372 0058 C046     		nop
 1373 005a BD46     		mov	sp, r7
 1374 005c 03B0     		add	sp, sp, #12
 1375              		@ sp needed
 1376 005e 90BD     		pop	{r4, r7, pc}
 1377              	.L79:
 1378              		.align	2
 1379              	.L78:
 1380 0060 00000000 		.word	USBUART_EP
 1381 0064 F0FF2B40 		.word	1076625392
 1382              		.cfi_endproc
 1383              	.LFE14:
 1384              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1385              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1386              		.align	2
 1387              		.global	USBUART_DisableOutEP
 1388              		.code	16
 1389              		.thumb_func
 1390              		.type	USBUART_DisableOutEP, %function
 1391              	USBUART_DisableOutEP:
 1392              	.LFB15:
2287:Generated_Source\PSoC4/USBUART.c **** 
2288:Generated_Source\PSoC4/USBUART.c **** 
2289:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC4/USBUART.c **** *
2293:Generated_Source\PSoC4/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC4/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC4/USBUART.c **** *
2296:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC4/USBUART.c **** *
2299:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC4/USBUART.c **** {
 1393              		.loc 1 2301 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 8
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 66


 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 82B0     		sub	sp, sp, #8
 1402              		.cfi_def_cfa_offset 16
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 0200     		movs	r2, r0
 1406 0008 FB1D     		adds	r3, r7, #7
 1407 000a 1A70     		strb	r2, [r3]
2302:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1408              		.loc 1 2302 0
 1409 000c FB1D     		adds	r3, r7, #7
 1410 000e 1B78     		ldrb	r3, [r3]
 1411 0010 002B     		cmp	r3, #0
 1412 0012 0BD0     		beq	.L82
 1413              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1414 0014 FB1D     		adds	r3, r7, #7
 1415 0016 1B78     		ldrb	r3, [r3]
 1416 0018 082B     		cmp	r3, #8
 1417 001a 07D8     		bhi	.L82
2303:Generated_Source\PSoC4/USBUART.c ****     {
2304:Generated_Source\PSoC4/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC4/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1418              		.loc 1 2305 0 is_stmt 1
 1419 001c 054A     		ldr	r2, .L83
 1420 001e FB1D     		adds	r3, r7, #7
 1421 0020 1B78     		ldrb	r3, [r3]
 1422 0022 9B01     		lsls	r3, r3, #6
 1423 0024 D318     		adds	r3, r2, r3
 1424 0026 0833     		adds	r3, r3, #8
 1425 0028 0822     		movs	r2, #8
 1426 002a 1A60     		str	r2, [r3]
 1427              	.L82:
2306:Generated_Source\PSoC4/USBUART.c ****     }
2307:Generated_Source\PSoC4/USBUART.c **** }
 1428              		.loc 1 2307 0
 1429 002c C046     		nop
 1430 002e BD46     		mov	sp, r7
 1431 0030 02B0     		add	sp, sp, #8
 1432              		@ sp needed
 1433 0032 80BD     		pop	{r7, pc}
 1434              	.L84:
 1435              		.align	2
 1436              	.L83:
 1437 0034 F0FF2B40 		.word	1076625392
 1438              		.cfi_endproc
 1439              	.LFE15:
 1440              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1441              		.section	.text.USBUART_Force,"ax",%progbits
 1442              		.align	2
 1443              		.global	USBUART_Force
 1444              		.code	16
 1445              		.thumb_func
 1446              		.type	USBUART_Force, %function
 1447              	USBUART_Force:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 67


 1448              	.LFB16:
2308:Generated_Source\PSoC4/USBUART.c **** 
2309:Generated_Source\PSoC4/USBUART.c **** 
2310:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC4/USBUART.c **** *
2314:Generated_Source\PSoC4/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC4/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC4/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC4/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC4/USBUART.c **** *
2319:Generated_Source\PSoC4/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC4/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC4/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC4/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC4/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC4/USBUART.c **** *
2328:Generated_Source\PSoC4/USBUART.c **** *
2329:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC4/USBUART.c **** {
 1449              		.loc 1 2331 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 8
 1452              		@ frame_needed = 1, uses_anonymous_args = 0
 1453 0000 80B5     		push	{r7, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 82B0     		sub	sp, sp, #8
 1458              		.cfi_def_cfa_offset 16
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 0200     		movs	r2, r0
 1462 0008 FB1D     		adds	r3, r7, #7
 1463 000a 1A70     		strb	r2, [r3]
2332:Generated_Source\PSoC4/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC4/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC4/USBUART.c ****     */
2335:Generated_Source\PSoC4/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1464              		.loc 1 2335 0
 1465 000c 034B     		ldr	r3, .L86
 1466 000e FA1D     		adds	r2, r7, #7
 1467 0010 1278     		ldrb	r2, [r2]
 1468 0012 1A60     		str	r2, [r3]
2336:Generated_Source\PSoC4/USBUART.c **** }
 1469              		.loc 1 2336 0
 1470 0014 C046     		nop
 1471 0016 BD46     		mov	sp, r7
 1472 0018 02B0     		add	sp, sp, #8
 1473              		@ sp needed
 1474 001a 80BD     		pop	{r7, pc}
 1475              	.L87:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 68


 1476              		.align	2
 1477              	.L86:
 1478 001c 40002C40 		.word	1076625472
 1479              		.cfi_endproc
 1480              	.LFE16:
 1481              		.size	USBUART_Force, .-USBUART_Force
 1482              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1483              		.align	2
 1484              		.global	USBUART_GetEPAckState
 1485              		.code	16
 1486              		.thumb_func
 1487              		.type	USBUART_GetEPAckState, %function
 1488              	USBUART_GetEPAckState:
 1489              	.LFB17:
2337:Generated_Source\PSoC4/USBUART.c **** 
2338:Generated_Source\PSoC4/USBUART.c **** 
2339:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC4/USBUART.c **** *
2343:Generated_Source\PSoC4/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC4/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC4/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC4/USBUART.c **** *
2347:Generated_Source\PSoC4/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC4/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC4/USBUART.c **** *
2350:Generated_Source\PSoC4/USBUART.c **** *  \return
2351:Generated_Source\PSoC4/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC4/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC4/USBUART.c **** *
2354:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC4/USBUART.c **** {
 1490              		.loc 1 2356 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 16
 1493              		@ frame_needed = 1, uses_anonymous_args = 0
 1494 0000 80B5     		push	{r7, lr}
 1495              		.cfi_def_cfa_offset 8
 1496              		.cfi_offset 7, -8
 1497              		.cfi_offset 14, -4
 1498 0002 84B0     		sub	sp, sp, #16
 1499              		.cfi_def_cfa_offset 24
 1500 0004 00AF     		add	r7, sp, #0
 1501              		.cfi_def_cfa_register 7
 1502 0006 0200     		movs	r2, r0
 1503 0008 FB1D     		adds	r3, r7, #7
 1504 000a 1A70     		strb	r2, [r3]
2357:Generated_Source\PSoC4/USBUART.c ****     uint32 cr = 0u;
 1505              		.loc 1 2357 0
 1506 000c 0023     		movs	r3, #0
 1507 000e FB60     		str	r3, [r7, #12]
2358:Generated_Source\PSoC4/USBUART.c **** 
2359:Generated_Source\PSoC4/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1508              		.loc 1 2359 0
 1509 0010 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 69


 1510 0012 1B78     		ldrb	r3, [r3]
 1511 0014 002B     		cmp	r3, #0
 1512 0016 0DD0     		beq	.L89
 1513              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1514 0018 FB1D     		adds	r3, r7, #7
 1515 001a 1B78     		ldrb	r3, [r3]
 1516 001c 082B     		cmp	r3, #8
 1517 001e 09D8     		bhi	.L89
2360:Generated_Source\PSoC4/USBUART.c ****     {
2361:Generated_Source\PSoC4/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1518              		.loc 1 2361 0 is_stmt 1
 1519 0020 074A     		ldr	r2, .L91
 1520 0022 FB1D     		adds	r3, r7, #7
 1521 0024 1B78     		ldrb	r3, [r3]
 1522 0026 9B01     		lsls	r3, r3, #6
 1523 0028 D318     		adds	r3, r2, r3
 1524 002a 0833     		adds	r3, r3, #8
 1525 002c 1B68     		ldr	r3, [r3]
 1526 002e 1022     		movs	r2, #16
 1527 0030 1340     		ands	r3, r2
 1528 0032 FB60     		str	r3, [r7, #12]
 1529              	.L89:
2362:Generated_Source\PSoC4/USBUART.c ****     }
2363:Generated_Source\PSoC4/USBUART.c **** 
2364:Generated_Source\PSoC4/USBUART.c ****     return ((uint8) cr);
 1530              		.loc 1 2364 0
 1531 0034 FB68     		ldr	r3, [r7, #12]
 1532 0036 DBB2     		uxtb	r3, r3
2365:Generated_Source\PSoC4/USBUART.c **** }
 1533              		.loc 1 2365 0
 1534 0038 1800     		movs	r0, r3
 1535 003a BD46     		mov	sp, r7
 1536 003c 04B0     		add	sp, sp, #16
 1537              		@ sp needed
 1538 003e 80BD     		pop	{r7, pc}
 1539              	.L92:
 1540              		.align	2
 1541              	.L91:
 1542 0040 F0FF2B40 		.word	1076625392
 1543              		.cfi_endproc
 1544              	.LFE17:
 1545              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1546              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1547              		.align	2
 1548              		.global	USBUART_SetPowerStatus
 1549              		.code	16
 1550              		.thumb_func
 1551              		.type	USBUART_SetPowerStatus, %function
 1552              	USBUART_SetPowerStatus:
 1553              	.LFB18:
2366:Generated_Source\PSoC4/USBUART.c **** 
2367:Generated_Source\PSoC4/USBUART.c **** 
2368:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC4/USBUART.c **** *
2372:Generated_Source\PSoC4/USBUART.c **** *  This function sets the current power status. The device replies to USB
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 70


2373:Generated_Source\PSoC4/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC4/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC4/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC4/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC4/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC4/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC4/USBUART.c **** *
2380:Generated_Source\PSoC4/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC4/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC4/USBUART.c **** *        given here:
2383:Generated_Source\PSoC4/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC4/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC4/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC4/USBUART.c **** *
2388:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC4/USBUART.c **** *
2390:Generated_Source\PSoC4/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC4/USBUART.c **** *
2392:Generated_Source\PSoC4/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC4/USBUART.c **** *  No.
2394:Generated_Source\PSoC4/USBUART.c **** *
2395:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC4/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC4/USBUART.c **** {
 1554              		.loc 1 2397 0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 8
 1557              		@ frame_needed = 1, uses_anonymous_args = 0
 1558 0000 80B5     		push	{r7, lr}
 1559              		.cfi_def_cfa_offset 8
 1560              		.cfi_offset 7, -8
 1561              		.cfi_offset 14, -4
 1562 0002 82B0     		sub	sp, sp, #8
 1563              		.cfi_def_cfa_offset 16
 1564 0004 00AF     		add	r7, sp, #0
 1565              		.cfi_def_cfa_register 7
 1566 0006 0200     		movs	r2, r0
 1567 0008 FB1D     		adds	r3, r7, #7
 1568 000a 1A70     		strb	r2, [r3]
2398:Generated_Source\PSoC4/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1569              		.loc 1 2398 0
 1570 000c FB1D     		adds	r3, r7, #7
 1571 000e 1B78     		ldrb	r3, [r3]
 1572 0010 002B     		cmp	r3, #0
 1573 0012 08D0     		beq	.L94
2399:Generated_Source\PSoC4/USBUART.c ****     {
2400:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1574              		.loc 1 2400 0
 1575 0014 0A4B     		ldr	r3, .L97
 1576 0016 1B78     		ldrb	r3, [r3]
 1577 0018 DBB2     		uxtb	r3, r3
 1578 001a 0122     		movs	r2, #1
 1579 001c 1343     		orrs	r3, r2
 1580 001e DAB2     		uxtb	r2, r3
 1581 0020 074B     		ldr	r3, .L97
 1582 0022 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 71


2401:Generated_Source\PSoC4/USBUART.c ****     }
2402:Generated_Source\PSoC4/USBUART.c ****     else
2403:Generated_Source\PSoC4/USBUART.c ****     {
2404:Generated_Source\PSoC4/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC4/USBUART.c ****     }
2406:Generated_Source\PSoC4/USBUART.c **** }
 1583              		.loc 1 2406 0
 1584 0024 07E0     		b	.L96
 1585              	.L94:
2404:Generated_Source\PSoC4/USBUART.c ****     }
 1586              		.loc 1 2404 0
 1587 0026 064B     		ldr	r3, .L97
 1588 0028 1B78     		ldrb	r3, [r3]
 1589 002a DBB2     		uxtb	r3, r3
 1590 002c 0122     		movs	r2, #1
 1591 002e 9343     		bics	r3, r2
 1592 0030 DAB2     		uxtb	r2, r3
 1593 0032 034B     		ldr	r3, .L97
 1594 0034 1A70     		strb	r2, [r3]
 1595              	.L96:
 1596              		.loc 1 2406 0
 1597 0036 C046     		nop
 1598 0038 BD46     		mov	sp, r7
 1599 003a 02B0     		add	sp, sp, #8
 1600              		@ sp needed
 1601 003c 80BD     		pop	{r7, pc}
 1602              	.L98:
 1603 003e C046     		.align	2
 1604              	.L97:
 1605 0040 00000000 		.word	USBUART_deviceStatus
 1606              		.cfi_endproc
 1607              	.LFE18:
 1608              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1609              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1610              		.align	2
 1611              		.global	USBUART_RWUEnabled
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	USBUART_RWUEnabled, %function
 1615              	USBUART_RWUEnabled:
 1616              	.LFB19:
2407:Generated_Source\PSoC4/USBUART.c **** 
2408:Generated_Source\PSoC4/USBUART.c **** 
2409:Generated_Source\PSoC4/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC4/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC4/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC4/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC4/USBUART.c ****     *
2414:Generated_Source\PSoC4/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC4/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC4/USBUART.c ****     *
2417:Generated_Source\PSoC4/USBUART.c ****     * \return
2418:Generated_Source\PSoC4/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC4/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC4/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC4/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC4/USBUART.c ****     *  0            | VBUS is absent
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 72


2423:Generated_Source\PSoC4/USBUART.c ****     *
2424:Generated_Source\PSoC4/USBUART.c ****     *
2425:Generated_Source\PSoC4/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC4/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC4/USBUART.c ****     {
2428:Generated_Source\PSoC4/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC4/USBUART.c ****     }
2430:Generated_Source\PSoC4/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC4/USBUART.c **** 
2432:Generated_Source\PSoC4/USBUART.c **** 
2433:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC4/USBUART.c **** *
2437:Generated_Source\PSoC4/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC4/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC4/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC4/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC4/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC4/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC4/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC4/USBUART.c **** *
2445:Generated_Source\PSoC4/USBUART.c **** *
2446:Generated_Source\PSoC4/USBUART.c **** * \return
2447:Generated_Source\PSoC4/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC4/USBUART.c **** *
2449:Generated_Source\PSoC4/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC4/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC4/USBUART.c **** *
2452:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC4/USBUART.c **** {
 1617              		.loc 1 2454 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 8
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621 0000 80B5     		push	{r7, lr}
 1622              		.cfi_def_cfa_offset 8
 1623              		.cfi_offset 7, -8
 1624              		.cfi_offset 14, -4
 1625 0002 82B0     		sub	sp, sp, #8
 1626              		.cfi_def_cfa_offset 16
 1627 0004 00AF     		add	r7, sp, #0
 1628              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC4/USBUART.c ****     uint8 result = USBUART_FALSE;
 1629              		.loc 1 2455 0
 1630 0006 FB1D     		adds	r3, r7, #7
 1631 0008 0022     		movs	r2, #0
 1632 000a 1A70     		strb	r2, [r3]
2456:Generated_Source\PSoC4/USBUART.c **** 
2457:Generated_Source\PSoC4/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1633              		.loc 1 2457 0
 1634 000c 074B     		ldr	r3, .L102
 1635 000e 1B78     		ldrb	r3, [r3]
 1636 0010 DBB2     		uxtb	r3, r3
 1637 0012 1A00     		movs	r2, r3
 1638 0014 0223     		movs	r3, #2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 73


 1639 0016 1340     		ands	r3, r2
 1640 0018 02D0     		beq	.L100
2458:Generated_Source\PSoC4/USBUART.c ****     {
2459:Generated_Source\PSoC4/USBUART.c ****         result = USBUART_TRUE;
 1641              		.loc 1 2459 0
 1642 001a FB1D     		adds	r3, r7, #7
 1643 001c 0122     		movs	r2, #1
 1644 001e 1A70     		strb	r2, [r3]
 1645              	.L100:
2460:Generated_Source\PSoC4/USBUART.c ****     }
2461:Generated_Source\PSoC4/USBUART.c **** 
2462:Generated_Source\PSoC4/USBUART.c ****     return (result);
 1646              		.loc 1 2462 0
 1647 0020 FB1D     		adds	r3, r7, #7
 1648 0022 1B78     		ldrb	r3, [r3]
2463:Generated_Source\PSoC4/USBUART.c **** }
 1649              		.loc 1 2463 0
 1650 0024 1800     		movs	r0, r3
 1651 0026 BD46     		mov	sp, r7
 1652 0028 02B0     		add	sp, sp, #8
 1653              		@ sp needed
 1654 002a 80BD     		pop	{r7, pc}
 1655              	.L103:
 1656              		.align	2
 1657              	.L102:
 1658 002c 00000000 		.word	USBUART_deviceStatus
 1659              		.cfi_endproc
 1660              	.LFE19:
 1661              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1662              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1663              		.align	2
 1664              		.global	USBUART_GetDeviceAddress
 1665              		.code	16
 1666              		.thumb_func
 1667              		.type	USBUART_GetDeviceAddress, %function
 1668              	USBUART_GetDeviceAddress:
 1669              	.LFB20:
2464:Generated_Source\PSoC4/USBUART.c **** 
2465:Generated_Source\PSoC4/USBUART.c **** 
2466:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC4/USBUART.c **** *
2470:Generated_Source\PSoC4/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC4/USBUART.c **** *
2472:Generated_Source\PSoC4/USBUART.c **** * \return
2473:Generated_Source\PSoC4/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC4/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC4/USBUART.c **** *
2476:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC4/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC4/USBUART.c **** {
 1670              		.loc 1 2478 0
 1671              		.cfi_startproc
 1672              		@ args = 0, pretend = 0, frame = 0
 1673              		@ frame_needed = 1, uses_anonymous_args = 0
 1674 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 74


 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0002 00AF     		add	r7, sp, #0
 1679              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC4/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1680              		.loc 1 2479 0
 1681 0004 044B     		ldr	r3, .L106
 1682 0006 1B68     		ldr	r3, [r3]
 1683 0008 DBB2     		uxtb	r3, r3
 1684 000a 7F22     		movs	r2, #127
 1685 000c 1340     		ands	r3, r2
 1686 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC4/USBUART.c **** }
 1687              		.loc 1 2480 0
 1688 0010 1800     		movs	r0, r3
 1689 0012 BD46     		mov	sp, r7
 1690              		@ sp needed
 1691 0014 80BD     		pop	{r7, pc}
 1692              	.L107:
 1693 0016 C046     		.align	2
 1694              	.L106:
 1695 0018 20002C40 		.word	1076625440
 1696              		.cfi_endproc
 1697              	.LFE20:
 1698              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1699              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1700              		.align	2
 1701              		.global	USBUART_EnableSofInt
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	USBUART_EnableSofInt, %function
 1705              	USBUART_EnableSofInt:
 1706              	.LFB21:
2481:Generated_Source\PSoC4/USBUART.c **** 
2482:Generated_Source\PSoC4/USBUART.c **** 
2483:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC4/USBUART.c **** *
2487:Generated_Source\PSoC4/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC4/USBUART.c **** *
2490:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC4/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC4/USBUART.c **** {
 1707              		.loc 1 2492 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711 0000 80B5     		push	{r7, lr}
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 00AF     		add	r7, sp, #0
 1716              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 75


2494:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
 1717              		.loc 1 2495 0
 1718 0004 044B     		ldr	r3, .L109
 1719 0006 044A     		ldr	r2, .L109
 1720 0008 1268     		ldr	r2, [r2]
 1721 000a 0121     		movs	r1, #1
 1722 000c 0A43     		orrs	r2, r1
 1723 000e 1A60     		str	r2, [r3]
2496:Generated_Source\PSoC4/USBUART.c **** #else
2497:Generated_Source\PSoC4/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC4/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
2500:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC4/USBUART.c **** }
 1724              		.loc 1 2502 0
 1725 0010 C046     		nop
 1726 0012 BD46     		mov	sp, r7
 1727              		@ sp needed
 1728 0014 80BD     		pop	{r7, pc}
 1729              	.L110:
 1730 0016 C046     		.align	2
 1731              	.L109:
 1732 0018 28202C40 		.word	1076633640
 1733              		.cfi_endproc
 1734              	.LFE21:
 1735              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1736              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1737              		.align	2
 1738              		.global	USBUART_DisableSofInt
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	USBUART_DisableSofInt, %function
 1742              	USBUART_DisableSofInt:
 1743              	.LFB22:
2503:Generated_Source\PSoC4/USBUART.c **** 
2504:Generated_Source\PSoC4/USBUART.c **** 
2505:Generated_Source\PSoC4/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC4/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC4/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC4/USBUART.c **** *
2509:Generated_Source\PSoC4/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC4/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC4/USBUART.c **** *
2512:Generated_Source\PSoC4/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC4/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC4/USBUART.c **** {
 1744              		.loc 1 2514 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748 0000 80B5     		push	{r7, lr}
 1749              		.cfi_def_cfa_offset 8
 1750              		.cfi_offset 7, -8
 1751              		.cfi_offset 14, -4
 1752 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 76


 1753              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC4/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC4/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
 1754              		.loc 1 2517 0
 1755 0004 044B     		ldr	r3, .L112
 1756 0006 044A     		ldr	r2, .L112
 1757 0008 1268     		ldr	r2, [r2]
 1758 000a 0121     		movs	r1, #1
 1759 000c 8A43     		bics	r2, r1
 1760 000e 1A60     		str	r2, [r3]
2518:Generated_Source\PSoC4/USBUART.c **** #else
2519:Generated_Source\PSoC4/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC4/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC4/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
2522:Generated_Source\PSoC4/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC4/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC4/USBUART.c **** }
 1761              		.loc 1 2524 0
 1762 0010 C046     		nop
 1763 0012 BD46     		mov	sp, r7
 1764              		@ sp needed
 1765 0014 80BD     		pop	{r7, pc}
 1766              	.L113:
 1767 0016 C046     		.align	2
 1768              	.L112:
 1769 0018 28202C40 		.word	1076633640
 1770              		.cfi_endproc
 1771              	.LFE22:
 1772              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1773              		.text
 1774              	.Letext0:
 1775              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1776              		.file 3 "Generated_Source\\PSoC4\\USBUART.h"
 1777              		.file 4 "Generated_Source\\PSoC4\\USBUART_pvt.h"
 1778              		.section	.debug_info,"",%progbits
 1779              	.Ldebug_info0:
 1780 0000 26070000 		.4byte	0x726
 1781 0004 0400     		.2byte	0x4
 1782 0006 00000000 		.4byte	.Ldebug_abbrev0
 1783 000a 04       		.byte	0x4
 1784 000b 01       		.uleb128 0x1
 1785 000c A9020000 		.4byte	.LASF92
 1786 0010 0C       		.byte	0xc
 1787 0011 2F000000 		.4byte	.LASF93
 1788 0015 E1030000 		.4byte	.LASF94
 1789 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1790 001d 00000000 		.4byte	0
 1791 0021 00000000 		.4byte	.Ldebug_line0
 1792 0025 02       		.uleb128 0x2
 1793 0026 01       		.byte	0x1
 1794 0027 06       		.byte	0x6
 1795 0028 EF000000 		.4byte	.LASF0
 1796 002c 02       		.uleb128 0x2
 1797 002d 01       		.byte	0x1
 1798 002e 08       		.byte	0x8
 1799 002f 92040000 		.4byte	.LASF1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 77


 1800 0033 02       		.uleb128 0x2
 1801 0034 02       		.byte	0x2
 1802 0035 05       		.byte	0x5
 1803 0036 A0040000 		.4byte	.LASF2
 1804 003a 02       		.uleb128 0x2
 1805 003b 02       		.byte	0x2
 1806 003c 07       		.byte	0x7
 1807 003d 4C020000 		.4byte	.LASF3
 1808 0041 02       		.uleb128 0x2
 1809 0042 04       		.byte	0x4
 1810 0043 05       		.byte	0x5
 1811 0044 57010000 		.4byte	.LASF4
 1812 0048 02       		.uleb128 0x2
 1813 0049 04       		.byte	0x4
 1814 004a 07       		.byte	0x7
 1815 004b 3A020000 		.4byte	.LASF5
 1816 004f 02       		.uleb128 0x2
 1817 0050 08       		.byte	0x8
 1818 0051 05       		.byte	0x5
 1819 0052 E1000000 		.4byte	.LASF6
 1820 0056 02       		.uleb128 0x2
 1821 0057 08       		.byte	0x8
 1822 0058 07       		.byte	0x7
 1823 0059 8B000000 		.4byte	.LASF7
 1824 005d 03       		.uleb128 0x3
 1825 005e 04       		.byte	0x4
 1826 005f 05       		.byte	0x5
 1827 0060 696E7400 		.ascii	"int\000"
 1828 0064 02       		.uleb128 0x2
 1829 0065 04       		.byte	0x4
 1830 0066 07       		.byte	0x7
 1831 0067 2D020000 		.4byte	.LASF8
 1832 006b 04       		.uleb128 0x4
 1833 006c 60010000 		.4byte	.LASF9
 1834 0070 02       		.byte	0x2
 1835 0071 D201     		.2byte	0x1d2
 1836 0073 2C000000 		.4byte	0x2c
 1837 0077 04       		.uleb128 0x4
 1838 0078 00000000 		.4byte	.LASF10
 1839 007c 02       		.byte	0x2
 1840 007d D301     		.2byte	0x1d3
 1841 007f 3A000000 		.4byte	0x3a
 1842 0083 04       		.uleb128 0x4
 1843 0084 F5010000 		.4byte	.LASF11
 1844 0088 02       		.byte	0x2
 1845 0089 D401     		.2byte	0x1d4
 1846 008b 48000000 		.4byte	0x48
 1847 008f 02       		.uleb128 0x2
 1848 0090 04       		.byte	0x4
 1849 0091 04       		.byte	0x4
 1850 0092 56040000 		.4byte	.LASF12
 1851 0096 02       		.uleb128 0x2
 1852 0097 08       		.byte	0x8
 1853 0098 04       		.byte	0x4
 1854 0099 88010000 		.4byte	.LASF13
 1855 009d 02       		.uleb128 0x2
 1856 009e 01       		.byte	0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 78


 1857 009f 08       		.byte	0x8
 1858 00a0 03050000 		.4byte	.LASF14
 1859 00a4 05       		.uleb128 0x5
 1860 00a5 6B000000 		.4byte	0x6b
 1861 00a9 04       		.uleb128 0x4
 1862 00aa 48030000 		.4byte	.LASF15
 1863 00ae 02       		.byte	0x2
 1864 00af 7E02     		.2byte	0x27e
 1865 00b1 B5000000 		.4byte	0xb5
 1866 00b5 05       		.uleb128 0x5
 1867 00b6 83000000 		.4byte	0x83
 1868 00ba 02       		.uleb128 0x2
 1869 00bb 08       		.byte	0x8
 1870 00bc 04       		.byte	0x4
 1871 00bd A4030000 		.4byte	.LASF16
 1872 00c1 02       		.uleb128 0x2
 1873 00c2 04       		.byte	0x4
 1874 00c3 07       		.byte	0x7
 1875 00c4 9B030000 		.4byte	.LASF17
 1876 00c8 06       		.uleb128 0x6
 1877 00c9 0C       		.byte	0xc
 1878 00ca 03       		.byte	0x3
 1879 00cb 92       		.byte	0x92
 1880 00cc 3D010000 		.4byte	0x13d
 1881 00d0 07       		.uleb128 0x7
 1882 00d1 BE030000 		.4byte	.LASF18
 1883 00d5 03       		.byte	0x3
 1884 00d6 94       		.byte	0x94
 1885 00d7 6B000000 		.4byte	0x6b
 1886 00db 00       		.byte	0
 1887 00dc 07       		.uleb128 0x7
 1888 00dd 6E040000 		.4byte	.LASF19
 1889 00e1 03       		.byte	0x3
 1890 00e2 95       		.byte	0x95
 1891 00e3 6B000000 		.4byte	0x6b
 1892 00e7 01       		.byte	0x1
 1893 00e8 07       		.uleb128 0x7
 1894 00e9 7A030000 		.4byte	.LASF20
 1895 00ed 03       		.byte	0x3
 1896 00ee 96       		.byte	0x96
 1897 00ef 6B000000 		.4byte	0x6b
 1898 00f3 02       		.byte	0x2
 1899 00f4 07       		.uleb128 0x7
 1900 00f5 66010000 		.4byte	.LASF21
 1901 00f9 03       		.byte	0x3
 1902 00fa 97       		.byte	0x97
 1903 00fb 6B000000 		.4byte	0x6b
 1904 00ff 03       		.byte	0x3
 1905 0100 07       		.uleb128 0x7
 1906 0101 A2000000 		.4byte	.LASF22
 1907 0105 03       		.byte	0x3
 1908 0106 98       		.byte	0x98
 1909 0107 6B000000 		.4byte	0x6b
 1910 010b 04       		.byte	0x4
 1911 010c 07       		.uleb128 0x7
 1912 010d 08020000 		.4byte	.LASF23
 1913 0111 03       		.byte	0x3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 79


 1914 0112 99       		.byte	0x99
 1915 0113 6B000000 		.4byte	0x6b
 1916 0117 05       		.byte	0x5
 1917 0118 07       		.uleb128 0x7
 1918 0119 2F050000 		.4byte	.LASF24
 1919 011d 03       		.byte	0x3
 1920 011e 9A       		.byte	0x9a
 1921 011f 77000000 		.4byte	0x77
 1922 0123 06       		.byte	0x6
 1923 0124 07       		.uleb128 0x7
 1924 0125 0D050000 		.4byte	.LASF25
 1925 0129 03       		.byte	0x3
 1926 012a 9B       		.byte	0x9b
 1927 012b 77000000 		.4byte	0x77
 1928 012f 08       		.byte	0x8
 1929 0130 07       		.uleb128 0x7
 1930 0131 37030000 		.4byte	.LASF26
 1931 0135 03       		.byte	0x3
 1932 0136 9C       		.byte	0x9c
 1933 0137 6B000000 		.4byte	0x6b
 1934 013b 0A       		.byte	0xa
 1935 013c 00       		.byte	0
 1936 013d 08       		.uleb128 0x8
 1937 013e 18050000 		.4byte	.LASF27
 1938 0142 03       		.byte	0x3
 1939 0143 9D       		.byte	0x9d
 1940 0144 C8000000 		.4byte	0xc8
 1941 0148 06       		.uleb128 0x6
 1942 0149 40       		.byte	0x40
 1943 014a 03       		.byte	0x3
 1944 014b D9       		.byte	0xd9
 1945 014c 81010000 		.4byte	0x181
 1946 0150 07       		.uleb128 0x7
 1947 0151 CD030000 		.4byte	.LASF28
 1948 0155 03       		.byte	0x3
 1949 0156 DB       		.byte	0xdb
 1950 0157 83000000 		.4byte	0x83
 1951 015b 00       		.byte	0
 1952 015c 07       		.uleb128 0x7
 1953 015d D4030000 		.4byte	.LASF29
 1954 0161 03       		.byte	0x3
 1955 0162 DC       		.byte	0xdc
 1956 0163 83000000 		.4byte	0x83
 1957 0167 04       		.byte	0x4
 1958 0168 07       		.uleb128 0x7
 1959 0169 DB030000 		.4byte	.LASF30
 1960 016d 03       		.byte	0x3
 1961 016e DD       		.byte	0xdd
 1962 016f 83000000 		.4byte	0x83
 1963 0173 08       		.byte	0x8
 1964 0174 09       		.uleb128 0x9
 1965 0175 67617000 		.ascii	"gap\000"
 1966 0179 03       		.byte	0x3
 1967 017a DE       		.byte	0xde
 1968 017b 81010000 		.4byte	0x181
 1969 017f 0C       		.byte	0xc
 1970 0180 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 80


 1971 0181 0A       		.uleb128 0xa
 1972 0182 83000000 		.4byte	0x83
 1973 0186 91010000 		.4byte	0x191
 1974 018a 0B       		.uleb128 0xb
 1975 018b C1000000 		.4byte	0xc1
 1976 018f 0C       		.byte	0xc
 1977 0190 00       		.byte	0
 1978 0191 08       		.uleb128 0x8
 1979 0192 DF040000 		.4byte	.LASF31
 1980 0196 03       		.byte	0x3
 1981 0197 DF       		.byte	0xdf
 1982 0198 48010000 		.4byte	0x148
 1983 019c 06       		.uleb128 0x6
 1984 019d 40       		.byte	0x40
 1985 019e 03       		.byte	0x3
 1986 019f EB       		.byte	0xeb
 1987 01a0 1D020000 		.4byte	0x21d
 1988 01a4 07       		.uleb128 0x7
 1989 01a5 A7000000 		.4byte	.LASF32
 1990 01a9 03       		.byte	0x3
 1991 01aa ED       		.byte	0xed
 1992 01ab 83000000 		.4byte	0x83
 1993 01af 00       		.byte	0
 1994 01b0 07       		.uleb128 0x7
 1995 01b1 BE050000 		.4byte	.LASF33
 1996 01b5 03       		.byte	0x3
 1997 01b6 EE       		.byte	0xee
 1998 01b7 83000000 		.4byte	0x83
 1999 01bb 04       		.byte	0x4
 2000 01bc 07       		.uleb128 0x7
 2001 01bd C8010000 		.4byte	.LASF34
 2002 01c1 03       		.byte	0x3
 2003 01c2 EF       		.byte	0xef
 2004 01c3 83000000 		.4byte	0x83
 2005 01c7 08       		.byte	0x8
 2006 01c8 07       		.uleb128 0x7
 2007 01c9 0F020000 		.4byte	.LASF35
 2008 01cd 03       		.byte	0x3
 2009 01ce F0       		.byte	0xf0
 2010 01cf 83000000 		.4byte	0x83
 2011 01d3 0C       		.byte	0xc
 2012 01d4 07       		.uleb128 0x7
 2013 01d5 83010000 		.4byte	.LASF36
 2014 01d9 03       		.byte	0x3
 2015 01da F1       		.byte	0xf1
 2016 01db 83000000 		.4byte	0x83
 2017 01df 10       		.byte	0x10
 2018 01e0 07       		.uleb128 0x7
 2019 01e1 D7040000 		.4byte	.LASF37
 2020 01e5 03       		.byte	0x3
 2021 01e6 F2       		.byte	0xf2
 2022 01e7 83000000 		.4byte	0x83
 2023 01eb 14       		.byte	0x14
 2024 01ec 07       		.uleb128 0x7
 2025 01ed BD040000 		.4byte	.LASF38
 2026 01f1 03       		.byte	0x3
 2027 01f2 F3       		.byte	0xf3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 81


 2028 01f3 83000000 		.4byte	0x83
 2029 01f7 18       		.byte	0x18
 2030 01f8 07       		.uleb128 0x7
 2031 01f9 C5030000 		.4byte	.LASF39
 2032 01fd 03       		.byte	0x3
 2033 01fe F4       		.byte	0xf4
 2034 01ff 83000000 		.4byte	0x83
 2035 0203 1C       		.byte	0x1c
 2036 0204 07       		.uleb128 0x7
 2037 0205 6E050000 		.4byte	.LASF40
 2038 0209 03       		.byte	0x3
 2039 020a F5       		.byte	0xf5
 2040 020b 83000000 		.4byte	0x83
 2041 020f 20       		.byte	0x20
 2042 0210 09       		.uleb128 0x9
 2043 0211 67617000 		.ascii	"gap\000"
 2044 0215 03       		.byte	0x3
 2045 0216 F6       		.byte	0xf6
 2046 0217 1D020000 		.4byte	0x21d
 2047 021b 24       		.byte	0x24
 2048 021c 00       		.byte	0
 2049 021d 0A       		.uleb128 0xa
 2050 021e 83000000 		.4byte	0x83
 2051 0222 2D020000 		.4byte	0x22d
 2052 0226 0B       		.uleb128 0xb
 2053 0227 C1000000 		.4byte	0xc1
 2054 022b 06       		.byte	0x6
 2055 022c 00       		.byte	0
 2056 022d 08       		.uleb128 0x8
 2057 022e 64030000 		.4byte	.LASF41
 2058 0232 03       		.byte	0x3
 2059 0233 F7       		.byte	0xf7
 2060 0234 9C010000 		.4byte	0x19c
 2061 0238 0C       		.uleb128 0xc
 2062 0239 4002     		.2byte	0x240
 2063 023b 03       		.byte	0x3
 2064 023c 1301     		.2byte	0x113
 2065 023e 50020000 		.4byte	0x250
 2066 0242 0D       		.uleb128 0xd
 2067 0243 02020000 		.4byte	.LASF42
 2068 0247 03       		.byte	0x3
 2069 0248 1501     		.2byte	0x115
 2070 024a 50020000 		.4byte	0x250
 2071 024e 00       		.byte	0
 2072 024f 00       		.byte	0
 2073 0250 0A       		.uleb128 0xa
 2074 0251 91010000 		.4byte	0x191
 2075 0255 60020000 		.4byte	0x260
 2076 0259 0B       		.uleb128 0xb
 2077 025a C1000000 		.4byte	0xc1
 2078 025e 08       		.byte	0x8
 2079 025f 00       		.byte	0
 2080 0260 04       		.uleb128 0x4
 2081 0261 2A010000 		.4byte	.LASF43
 2082 0265 03       		.byte	0x3
 2083 0266 1601     		.2byte	0x116
 2084 0268 38020000 		.4byte	0x238
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 82


 2085 026c 0C       		.uleb128 0xc
 2086 026d 4002     		.2byte	0x240
 2087 026f 03       		.byte	0x3
 2088 0270 1901     		.2byte	0x119
 2089 0272 84020000 		.4byte	0x284
 2090 0276 0D       		.uleb128 0xd
 2091 0277 A3020000 		.4byte	.LASF44
 2092 027b 03       		.byte	0x3
 2093 027c 1B01     		.2byte	0x11b
 2094 027e 84020000 		.4byte	0x284
 2095 0282 00       		.byte	0
 2096 0283 00       		.byte	0
 2097 0284 0A       		.uleb128 0xa
 2098 0285 2D020000 		.4byte	0x22d
 2099 0289 94020000 		.4byte	0x294
 2100 028d 0B       		.uleb128 0xb
 2101 028e C1000000 		.4byte	0xc1
 2102 0292 08       		.byte	0x8
 2103 0293 00       		.byte	0
 2104 0294 04       		.uleb128 0x4
 2105 0295 84030000 		.4byte	.LASF45
 2106 0299 03       		.byte	0x3
 2107 029a 1C01     		.2byte	0x11c
 2108 029c 6C020000 		.4byte	0x26c
 2109 02a0 0E       		.uleb128 0xe
 2110 02a1 6C020000 		.4byte	.LASF48
 2111 02a5 01       		.byte	0x1
 2112 02a6 BA       		.byte	0xba
 2113 02a7 00000000 		.4byte	.LFB1
 2114 02ab 40000000 		.4byte	.LFE1-.LFB1
 2115 02af 01       		.uleb128 0x1
 2116 02b0 9C       		.byte	0x9c
 2117 02b1 D2020000 		.4byte	0x2d2
 2118 02b5 0F       		.uleb128 0xf
 2119 02b6 C1000000 		.4byte	.LASF46
 2120 02ba 01       		.byte	0x1
 2121 02bb BA       		.byte	0xba
 2122 02bc 6B000000 		.4byte	0x6b
 2123 02c0 02       		.uleb128 0x2
 2124 02c1 91       		.byte	0x91
 2125 02c2 77       		.sleb128 -9
 2126 02c3 0F       		.uleb128 0xf
 2127 02c4 08050000 		.4byte	.LASF47
 2128 02c8 01       		.byte	0x1
 2129 02c9 BA       		.byte	0xba
 2130 02ca 6B000000 		.4byte	0x6b
 2131 02ce 02       		.uleb128 0x2
 2132 02cf 91       		.byte	0x91
 2133 02d0 76       		.sleb128 -10
 2134 02d1 00       		.byte	0
 2135 02d2 10       		.uleb128 0x10
 2136 02d3 96020000 		.4byte	.LASF77
 2137 02d7 01       		.byte	0x1
 2138 02d8 D3       		.byte	0xd3
 2139 02d9 00000000 		.4byte	.LFB2
 2140 02dd F0000000 		.4byte	.LFE2-.LFB2
 2141 02e1 01       		.uleb128 0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 83


 2142 02e2 9C       		.byte	0x9c
 2143 02e3 11       		.uleb128 0x11
 2144 02e4 73050000 		.4byte	.LASF49
 2145 02e8 01       		.byte	0x1
 2146 02e9 CC01     		.2byte	0x1cc
 2147 02eb 00000000 		.4byte	.LFB3
 2148 02ef 20010000 		.4byte	.LFE3-.LFB3
 2149 02f3 01       		.uleb128 0x1
 2150 02f4 9C       		.byte	0x9c
 2151 02f5 25030000 		.4byte	0x325
 2152 02f9 12       		.uleb128 0x12
 2153 02fa C1000000 		.4byte	.LASF46
 2154 02fe 01       		.byte	0x1
 2155 02ff CC01     		.2byte	0x1cc
 2156 0301 6B000000 		.4byte	0x6b
 2157 0305 02       		.uleb128 0x2
 2158 0306 91       		.byte	0x91
 2159 0307 6F       		.sleb128 -17
 2160 0308 12       		.uleb128 0x12
 2161 0309 08050000 		.4byte	.LASF47
 2162 030d 01       		.byte	0x1
 2163 030e CC01     		.2byte	0x1cc
 2164 0310 6B000000 		.4byte	0x6b
 2165 0314 02       		.uleb128 0x2
 2166 0315 91       		.byte	0x91
 2167 0316 6E       		.sleb128 -18
 2168 0317 13       		.uleb128 0x13
 2169 0318 6900     		.ascii	"i\000"
 2170 031a 01       		.byte	0x1
 2171 031b D301     		.2byte	0x1d3
 2172 031d 6B000000 		.4byte	0x6b
 2173 0321 02       		.uleb128 0x2
 2174 0322 91       		.byte	0x91
 2175 0323 77       		.sleb128 -9
 2176 0324 00       		.byte	0
 2177 0325 14       		.uleb128 0x14
 2178 0326 C6050000 		.4byte	.LASF50
 2179 032a 01       		.byte	0x1
 2180 032b 9F02     		.2byte	0x29f
 2181 032d 00000000 		.4byte	.LFB4
 2182 0331 90000000 		.4byte	.LFE4-.LFB4
 2183 0335 01       		.uleb128 0x1
 2184 0336 9C       		.byte	0x9c
 2185 0337 49030000 		.4byte	0x349
 2186 033b 13       		.uleb128 0x13
 2187 033c 6900     		.ascii	"i\000"
 2188 033e 01       		.byte	0x1
 2189 033f A502     		.2byte	0x2a5
 2190 0341 6B000000 		.4byte	0x6b
 2191 0345 02       		.uleb128 0x2
 2192 0346 91       		.byte	0x91
 2193 0347 77       		.sleb128 -9
 2194 0348 00       		.byte	0
 2195 0349 11       		.uleb128 0x11
 2196 034a 5F020000 		.4byte	.LASF51
 2197 034e 01       		.byte	0x1
 2198 034f D902     		.2byte	0x2d9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 84


 2199 0351 00000000 		.4byte	.LFB5
 2200 0355 A0000000 		.4byte	.LFE5-.LFB5
 2201 0359 01       		.uleb128 0x1
 2202 035a 9C       		.byte	0x9c
 2203 035b 6F030000 		.4byte	0x36f
 2204 035f 15       		.uleb128 0x15
 2205 0360 5D050000 		.4byte	.LASF52
 2206 0364 01       		.byte	0x1
 2207 0365 DB02     		.2byte	0x2db
 2208 0367 6B000000 		.4byte	0x6b
 2209 036b 02       		.uleb128 0x2
 2210 036c 91       		.byte	0x91
 2211 036d 6F       		.sleb128 -17
 2212 036e 00       		.byte	0
 2213 036f 16       		.uleb128 0x16
 2214 0370 41010000 		.4byte	.LASF54
 2215 0374 01       		.byte	0x1
 2216 0375 5103     		.2byte	0x351
 2217 0377 6B000000 		.4byte	0x6b
 2218 037b 00000000 		.4byte	.LFB6
 2219 037f 30000000 		.4byte	.LFE6-.LFB6
 2220 0383 01       		.uleb128 0x1
 2221 0384 9C       		.byte	0x9c
 2222 0385 99030000 		.4byte	0x399
 2223 0389 15       		.uleb128 0x15
 2224 038a 41030000 		.4byte	.LASF53
 2225 038e 01       		.byte	0x1
 2226 038f 5303     		.2byte	0x353
 2227 0391 83000000 		.4byte	0x83
 2228 0395 02       		.uleb128 0x2
 2229 0396 91       		.byte	0x91
 2230 0397 74       		.sleb128 -12
 2231 0398 00       		.byte	0
 2232 0399 17       		.uleb128 0x17
 2233 039a C8000000 		.4byte	.LASF75
 2234 039e 01       		.byte	0x1
 2235 039f 6803     		.2byte	0x368
 2236 03a1 6B000000 		.4byte	0x6b
 2237 03a5 00000000 		.4byte	.LFB7
 2238 03a9 14000000 		.4byte	.LFE7-.LFB7
 2239 03ad 01       		.uleb128 0x1
 2240 03ae 9C       		.byte	0x9c
 2241 03af 16       		.uleb128 0x16
 2242 03b0 9F050000 		.4byte	.LASF55
 2243 03b4 01       		.byte	0x1
 2244 03b5 8203     		.2byte	0x382
 2245 03b7 6B000000 		.4byte	0x6b
 2246 03bb 00000000 		.4byte	.LFB8
 2247 03bf 34000000 		.4byte	.LFE8-.LFB8
 2248 03c3 01       		.uleb128 0x1
 2249 03c4 9C       		.byte	0x9c
 2250 03c5 D9030000 		.4byte	0x3d9
 2251 03c9 13       		.uleb128 0x13
 2252 03ca 72657300 		.ascii	"res\000"
 2253 03ce 01       		.byte	0x1
 2254 03cf 8403     		.2byte	0x384
 2255 03d1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 85


 2256 03d5 02       		.uleb128 0x2
 2257 03d6 91       		.byte	0x91
 2258 03d7 77       		.sleb128 -9
 2259 03d8 00       		.byte	0
 2260 03d9 16       		.uleb128 0x16
 2261 03da 7A020000 		.4byte	.LASF56
 2262 03de 01       		.byte	0x1
 2263 03df 9F03     		.2byte	0x39f
 2264 03e1 6B000000 		.4byte	0x6b
 2265 03e5 00000000 		.4byte	.LFB9
 2266 03e9 24000000 		.4byte	.LFE9-.LFB9
 2267 03ed 01       		.uleb128 0x1
 2268 03ee 9C       		.byte	0x9c
 2269 03ef 03040000 		.4byte	0x403
 2270 03f3 12       		.uleb128 0x12
 2271 03f4 3A050000 		.4byte	.LASF57
 2272 03f8 01       		.byte	0x1
 2273 03f9 9F03     		.2byte	0x39f
 2274 03fb 6B000000 		.4byte	0x6b
 2275 03ff 02       		.uleb128 0x2
 2276 0400 91       		.byte	0x91
 2277 0401 77       		.sleb128 -9
 2278 0402 00       		.byte	0
 2279 0403 16       		.uleb128 0x16
 2280 0404 AA040000 		.4byte	.LASF58
 2281 0408 01       		.byte	0x1
 2282 0409 BF03     		.2byte	0x3bf
 2283 040b 6B000000 		.4byte	0x6b
 2284 040f 00000000 		.4byte	.LFB10
 2285 0413 30000000 		.4byte	.LFE10-.LFB10
 2286 0417 01       		.uleb128 0x1
 2287 0418 9C       		.byte	0x9c
 2288 0419 2D040000 		.4byte	0x42d
 2289 041d 12       		.uleb128 0x12
 2290 041e B8000000 		.4byte	.LASF59
 2291 0422 01       		.byte	0x1
 2292 0423 BF03     		.2byte	0x3bf
 2293 0425 6B000000 		.4byte	0x6b
 2294 0429 02       		.uleb128 0x2
 2295 042a 91       		.byte	0x91
 2296 042b 77       		.sleb128 -9
 2297 042c 00       		.byte	0
 2298 042d 16       		.uleb128 0x16
 2299 042e 4A050000 		.4byte	.LASF60
 2300 0432 01       		.byte	0x1
 2301 0433 D603     		.2byte	0x3d6
 2302 0435 77000000 		.4byte	0x77
 2303 0439 00000000 		.4byte	.LFB11
 2304 043d 80000000 		.4byte	.LFE11-.LFB11
 2305 0441 01       		.uleb128 0x1
 2306 0442 9C       		.byte	0x9c
 2307 0443 66040000 		.4byte	0x466
 2308 0447 12       		.uleb128 0x12
 2309 0448 B8000000 		.4byte	.LASF59
 2310 044c 01       		.byte	0x1
 2311 044d D603     		.2byte	0x3d6
 2312 044f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 86


 2313 0453 02       		.uleb128 0x2
 2314 0454 91       		.byte	0x91
 2315 0455 6F       		.sleb128 -17
 2316 0456 15       		.uleb128 0x15
 2317 0457 25010000 		.4byte	.LASF61
 2318 045b 01       		.byte	0x1
 2319 045c D803     		.2byte	0x3d8
 2320 045e 77000000 		.4byte	0x77
 2321 0462 02       		.uleb128 0x2
 2322 0463 91       		.byte	0x91
 2323 0464 76       		.sleb128 -10
 2324 0465 00       		.byte	0
 2325 0466 14       		.uleb128 0x14
 2326 0467 7A000000 		.4byte	.LASF62
 2327 046b 01       		.byte	0x1
 2328 046c 3E05     		.2byte	0x53e
 2329 046e 00000000 		.4byte	.LFB12
 2330 0472 4C010000 		.4byte	.LFE12-.LFB12
 2331 0476 01       		.uleb128 0x1
 2332 0477 9C       		.byte	0x9c
 2333 0478 C1040000 		.4byte	0x4c1
 2334 047c 12       		.uleb128 0x12
 2335 047d B8000000 		.4byte	.LASF59
 2336 0481 01       		.byte	0x1
 2337 0482 3E05     		.2byte	0x53e
 2338 0484 6B000000 		.4byte	0x6b
 2339 0488 02       		.uleb128 0x2
 2340 0489 91       		.byte	0x91
 2341 048a 67       		.sleb128 -25
 2342 048b 12       		.uleb128 0x12
 2343 048c FC010000 		.4byte	.LASF63
 2344 0490 01       		.byte	0x1
 2345 0491 3E05     		.2byte	0x53e
 2346 0493 C1040000 		.4byte	0x4c1
 2347 0497 02       		.uleb128 0x2
 2348 0498 91       		.byte	0x91
 2349 0499 60       		.sleb128 -32
 2350 049a 12       		.uleb128 0x12
 2351 049b FC040000 		.4byte	.LASF64
 2352 049f 01       		.byte	0x1
 2353 04a0 3E05     		.2byte	0x53e
 2354 04a2 77000000 		.4byte	0x77
 2355 04a6 02       		.uleb128 0x2
 2356 04a7 91       		.byte	0x91
 2357 04a8 64       		.sleb128 -28
 2358 04a9 18       		.uleb128 0x18
 2359 04aa BA000000 		.4byte	.LBB2
 2360 04ae 40000000 		.4byte	.LBE2-.LBB2
 2361 04b2 13       		.uleb128 0x13
 2362 04b3 6900     		.ascii	"i\000"
 2363 04b5 01       		.byte	0x1
 2364 04b6 5305     		.2byte	0x553
 2365 04b8 77000000 		.4byte	0x77
 2366 04bc 02       		.uleb128 0x2
 2367 04bd 91       		.byte	0x91
 2368 04be 6E       		.sleb128 -18
 2369 04bf 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 87


 2370 04c0 00       		.byte	0
 2371 04c1 19       		.uleb128 0x19
 2372 04c2 04       		.byte	0x4
 2373 04c3 C7040000 		.4byte	0x4c7
 2374 04c7 1A       		.uleb128 0x1a
 2375 04c8 6B000000 		.4byte	0x6b
 2376 04cc 1B       		.uleb128 0x1b
 2377 04cd 5C040000 		.4byte	.LASF65
 2378 04d1 01       		.byte	0x1
 2379 04d2 7506     		.2byte	0x675
 2380 04d4 77000000 		.4byte	0x77
 2381 04d8 00000000 		.4byte	.LFB13
 2382 04dc C0000000 		.4byte	.LFE13-.LFB13
 2383 04e0 01       		.uleb128 0x1
 2384 04e1 9C       		.byte	0x9c
 2385 04e2 2B050000 		.4byte	0x52b
 2386 04e6 12       		.uleb128 0x12
 2387 04e7 B8000000 		.4byte	.LASF59
 2388 04eb 01       		.byte	0x1
 2389 04ec 7506     		.2byte	0x675
 2390 04ee 6B000000 		.4byte	0x6b
 2391 04f2 02       		.uleb128 0x2
 2392 04f3 91       		.byte	0x91
 2393 04f4 6F       		.sleb128 -17
 2394 04f5 12       		.uleb128 0x12
 2395 04f6 FC010000 		.4byte	.LASF63
 2396 04fa 01       		.byte	0x1
 2397 04fb 7506     		.2byte	0x675
 2398 04fd 2B050000 		.4byte	0x52b
 2399 0501 02       		.uleb128 0x2
 2400 0502 91       		.byte	0x91
 2401 0503 68       		.sleb128 -24
 2402 0504 12       		.uleb128 0x12
 2403 0505 FC040000 		.4byte	.LASF64
 2404 0509 01       		.byte	0x1
 2405 050a 7506     		.2byte	0x675
 2406 050c 77000000 		.4byte	0x77
 2407 0510 02       		.uleb128 0x2
 2408 0511 91       		.byte	0x91
 2409 0512 6C       		.sleb128 -20
 2410 0513 18       		.uleb128 0x18
 2411 0514 5A000000 		.4byte	.LBB3
 2412 0518 42000000 		.4byte	.LBE3-.LBB3
 2413 051c 13       		.uleb128 0x13
 2414 051d 6900     		.ascii	"i\000"
 2415 051f 01       		.byte	0x1
 2416 0520 8206     		.2byte	0x682
 2417 0522 77000000 		.4byte	0x77
 2418 0526 02       		.uleb128 0x2
 2419 0527 91       		.byte	0x91
 2420 0528 76       		.sleb128 -10
 2421 0529 00       		.byte	0
 2422 052a 00       		.byte	0
 2423 052b 19       		.uleb128 0x19
 2424 052c 04       		.byte	0x4
 2425 052d 6B000000 		.4byte	0x6b
 2426 0531 14       		.uleb128 0x14
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 88


 2427 0532 FB000000 		.4byte	.LASF66
 2428 0536 01       		.byte	0x1
 2429 0537 E408     		.2byte	0x8e4
 2430 0539 00000000 		.4byte	.LFB14
 2431 053d 68000000 		.4byte	.LFE14-.LFB14
 2432 0541 01       		.uleb128 0x1
 2433 0542 9C       		.byte	0x9c
 2434 0543 57050000 		.4byte	0x557
 2435 0547 12       		.uleb128 0x12
 2436 0548 B8000000 		.4byte	.LASF59
 2437 054c 01       		.byte	0x1
 2438 054d E408     		.2byte	0x8e4
 2439 054f 6B000000 		.4byte	0x6b
 2440 0553 02       		.uleb128 0x2
 2441 0554 91       		.byte	0x91
 2442 0555 6F       		.sleb128 -17
 2443 0556 00       		.byte	0
 2444 0557 14       		.uleb128 0x14
 2445 0558 C2040000 		.4byte	.LASF67
 2446 055c 01       		.byte	0x1
 2447 055d FC08     		.2byte	0x8fc
 2448 055f 00000000 		.4byte	.LFB15
 2449 0563 38000000 		.4byte	.LFE15-.LFB15
 2450 0567 01       		.uleb128 0x1
 2451 0568 9C       		.byte	0x9c
 2452 0569 7D050000 		.4byte	0x57d
 2453 056d 12       		.uleb128 0x12
 2454 056e B8000000 		.4byte	.LASF59
 2455 0572 01       		.byte	0x1
 2456 0573 FC08     		.2byte	0x8fc
 2457 0575 6B000000 		.4byte	0x6b
 2458 0579 02       		.uleb128 0x2
 2459 057a 91       		.byte	0x91
 2460 057b 77       		.sleb128 -9
 2461 057c 00       		.byte	0
 2462 057d 14       		.uleb128 0x14
 2463 057e B0030000 		.4byte	.LASF68
 2464 0582 01       		.byte	0x1
 2465 0583 1A09     		.2byte	0x91a
 2466 0585 00000000 		.4byte	.LFB16
 2467 0589 20000000 		.4byte	.LFE16-.LFB16
 2468 058d 01       		.uleb128 0x1
 2469 058e 9C       		.byte	0x9c
 2470 058f A3050000 		.4byte	0x5a3
 2471 0593 12       		.uleb128 0x12
 2472 0594 F5040000 		.4byte	.LASF69
 2473 0598 01       		.byte	0x1
 2474 0599 1A09     		.2byte	0x91a
 2475 059b 6B000000 		.4byte	0x6b
 2476 059f 02       		.uleb128 0x2
 2477 05a0 91       		.byte	0x91
 2478 05a1 77       		.sleb128 -9
 2479 05a2 00       		.byte	0
 2480 05a3 16       		.uleb128 0x16
 2481 05a4 0F010000 		.4byte	.LASF70
 2482 05a8 01       		.byte	0x1
 2483 05a9 3309     		.2byte	0x933
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 89


 2484 05ab 6B000000 		.4byte	0x6b
 2485 05af 00000000 		.4byte	.LFB17
 2486 05b3 44000000 		.4byte	.LFE17-.LFB17
 2487 05b7 01       		.uleb128 0x1
 2488 05b8 9C       		.byte	0x9c
 2489 05b9 DB050000 		.4byte	0x5db
 2490 05bd 12       		.uleb128 0x12
 2491 05be B8000000 		.4byte	.LASF59
 2492 05c2 01       		.byte	0x1
 2493 05c3 3309     		.2byte	0x933
 2494 05c5 6B000000 		.4byte	0x6b
 2495 05c9 02       		.uleb128 0x2
 2496 05ca 91       		.byte	0x91
 2497 05cb 6F       		.sleb128 -17
 2498 05cc 13       		.uleb128 0x13
 2499 05cd 637200   		.ascii	"cr\000"
 2500 05d0 01       		.byte	0x1
 2501 05d1 3509     		.2byte	0x935
 2502 05d3 83000000 		.4byte	0x83
 2503 05d7 02       		.uleb128 0x2
 2504 05d8 91       		.byte	0x91
 2505 05d9 74       		.sleb128 -12
 2506 05da 00       		.byte	0
 2507 05db 14       		.uleb128 0x14
 2508 05dc B1010000 		.4byte	.LASF71
 2509 05e0 01       		.byte	0x1
 2510 05e1 5C09     		.2byte	0x95c
 2511 05e3 00000000 		.4byte	.LFB18
 2512 05e7 44000000 		.4byte	.LFE18-.LFB18
 2513 05eb 01       		.uleb128 0x1
 2514 05ec 9C       		.byte	0x9c
 2515 05ed 01060000 		.4byte	0x601
 2516 05f1 12       		.uleb128 0x12
 2517 05f2 8F010000 		.4byte	.LASF72
 2518 05f6 01       		.byte	0x1
 2519 05f7 5C09     		.2byte	0x95c
 2520 05f9 6B000000 		.4byte	0x6b
 2521 05fd 02       		.uleb128 0x2
 2522 05fe 91       		.byte	0x91
 2523 05ff 77       		.sleb128 -9
 2524 0600 00       		.byte	0
 2525 0601 16       		.uleb128 0x16
 2526 0602 50000000 		.4byte	.LASF73
 2527 0606 01       		.byte	0x1
 2528 0607 9509     		.2byte	0x995
 2529 0609 6B000000 		.4byte	0x6b
 2530 060d 00000000 		.4byte	.LFB19
 2531 0611 30000000 		.4byte	.LFE19-.LFB19
 2532 0615 01       		.uleb128 0x1
 2533 0616 9C       		.byte	0x9c
 2534 0617 2B060000 		.4byte	0x62b
 2535 061b 15       		.uleb128 0x15
 2536 061c 26060000 		.4byte	.LASF74
 2537 0620 01       		.byte	0x1
 2538 0621 9709     		.2byte	0x997
 2539 0623 6B000000 		.4byte	0x6b
 2540 0627 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 90


 2541 0628 91       		.byte	0x91
 2542 0629 77       		.sleb128 -9
 2543 062a 00       		.byte	0
 2544 062b 17       		.uleb128 0x17
 2545 062c 16000000 		.4byte	.LASF76
 2546 0630 01       		.byte	0x1
 2547 0631 AD09     		.2byte	0x9ad
 2548 0633 6B000000 		.4byte	0x6b
 2549 0637 00000000 		.4byte	.LFB20
 2550 063b 1C000000 		.4byte	.LFE20-.LFB20
 2551 063f 01       		.uleb128 0x1
 2552 0640 9C       		.byte	0x9c
 2553 0641 1C       		.uleb128 0x1c
 2554 0642 F4050000 		.4byte	.LASF78
 2555 0646 01       		.byte	0x1
 2556 0647 BB09     		.2byte	0x9bb
 2557 0649 00000000 		.4byte	.LFB21
 2558 064d 1C000000 		.4byte	.LFE21-.LFB21
 2559 0651 01       		.uleb128 0x1
 2560 0652 9C       		.byte	0x9c
 2561 0653 1C       		.uleb128 0x1c
 2562 0654 9B010000 		.4byte	.LASF79
 2563 0658 01       		.byte	0x1
 2564 0659 D109     		.2byte	0x9d1
 2565 065b 00000000 		.4byte	.LFB22
 2566 065f 1C000000 		.4byte	.LFE22-.LFB22
 2567 0663 01       		.uleb128 0x1
 2568 0664 9C       		.byte	0x9c
 2569 0665 1D       		.uleb128 0x1d
 2570 0666 CD010000 		.4byte	.LASF80
 2571 066a 01       		.byte	0x1
 2572 066b 28       		.byte	0x28
 2573 066c 6B000000 		.4byte	0x6b
 2574 0670 05       		.uleb128 0x5
 2575 0671 03       		.byte	0x3
 2576 0672 00000000 		.4byte	USBUART_initVar
 2577 0676 1E       		.uleb128 0x1e
 2578 0677 07000000 		.4byte	.LASF81
 2579 067b 03       		.byte	0x3
 2580 067c D702     		.2byte	0x2d7
 2581 067e A4000000 		.4byte	0xa4
 2582 0682 1E       		.uleb128 0x1e
 2583 0683 DE050000 		.4byte	.LASF82
 2584 0687 03       		.byte	0x3
 2585 0688 D802     		.2byte	0x2d8
 2586 068a A4000000 		.4byte	0xa4
 2587 068e 1E       		.uleb128 0x1e
 2588 068f 89050000 		.4byte	.LASF83
 2589 0693 03       		.byte	0x3
 2590 0694 D902     		.2byte	0x2d9
 2591 0696 A4000000 		.4byte	0xa4
 2592 069a 1E       		.uleb128 0x1e
 2593 069b 09060000 		.4byte	.LASF84
 2594 069f 03       		.byte	0x3
 2595 06a0 DA02     		.2byte	0x2da
 2596 06a2 A4000000 		.4byte	0xa4
 2597 06a6 1E       		.uleb128 0x1e
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 91


 2598 06a7 18020000 		.4byte	.LASF85
 2599 06ab 03       		.byte	0x3
 2600 06ac DB02     		.2byte	0x2db
 2601 06ae A4000000 		.4byte	0xa4
 2602 06b2 0A       		.uleb128 0xa
 2603 06b3 A4000000 		.4byte	0xa4
 2604 06b7 C2060000 		.4byte	0x6c2
 2605 06bb 0B       		.uleb128 0xb
 2606 06bc C1000000 		.4byte	0xc1
 2607 06c0 01       		.byte	0x1
 2608 06c1 00       		.byte	0
 2609 06c2 1E       		.uleb128 0x1e
 2610 06c3 6F010000 		.4byte	.LASF86
 2611 06c7 03       		.byte	0x3
 2612 06c8 E402     		.2byte	0x2e4
 2613 06ca CE060000 		.4byte	0x6ce
 2614 06ce 05       		.uleb128 0x5
 2615 06cf B2060000 		.4byte	0x6b2
 2616 06d3 1F       		.uleb128 0x1f
 2617 06d4 DD010000 		.4byte	.LASF87
 2618 06d8 04       		.byte	0x4
 2619 06d9 73       		.byte	0x73
 2620 06da A4000000 		.4byte	0xa4
 2621 06de 1F       		.uleb128 0x1f
 2622 06df 79040000 		.4byte	.LASF88
 2623 06e3 04       		.byte	0x4
 2624 06e4 74       		.byte	0x74
 2625 06e5 E9060000 		.4byte	0x6e9
 2626 06e9 05       		.uleb128 0x5
 2627 06ea B2060000 		.4byte	0x6b2
 2628 06ee 1F       		.uleb128 0x1f
 2629 06ef 4E030000 		.4byte	.LASF89
 2630 06f3 04       		.byte	0x4
 2631 06f4 76       		.byte	0x76
 2632 06f5 A4000000 		.4byte	0xa4
 2633 06f9 0A       		.uleb128 0xa
 2634 06fa 09070000 		.4byte	0x709
 2635 06fe 09070000 		.4byte	0x709
 2636 0702 0B       		.uleb128 0xb
 2637 0703 C1000000 		.4byte	0xc1
 2638 0707 08       		.byte	0x8
 2639 0708 00       		.byte	0
 2640 0709 05       		.uleb128 0x5
 2641 070a 3D010000 		.4byte	0x13d
 2642 070e 1F       		.uleb128 0x1f
 2643 070f AD000000 		.4byte	.LASF90
 2644 0713 04       		.byte	0x4
 2645 0714 7A       		.byte	0x7a
 2646 0715 19070000 		.4byte	0x719
 2647 0719 05       		.uleb128 0x5
 2648 071a F9060000 		.4byte	0x6f9
 2649 071e 1F       		.uleb128 0x1f
 2650 071f 63000000 		.4byte	.LASF91
 2651 0723 04       		.byte	0x4
 2652 0724 9C       		.byte	0x9c
 2653 0725 A4000000 		.4byte	0xa4
 2654 0729 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 92


 2655              		.section	.debug_abbrev,"",%progbits
 2656              	.Ldebug_abbrev0:
 2657 0000 01       		.uleb128 0x1
 2658 0001 11       		.uleb128 0x11
 2659 0002 01       		.byte	0x1
 2660 0003 25       		.uleb128 0x25
 2661 0004 0E       		.uleb128 0xe
 2662 0005 13       		.uleb128 0x13
 2663 0006 0B       		.uleb128 0xb
 2664 0007 03       		.uleb128 0x3
 2665 0008 0E       		.uleb128 0xe
 2666 0009 1B       		.uleb128 0x1b
 2667 000a 0E       		.uleb128 0xe
 2668 000b 55       		.uleb128 0x55
 2669 000c 17       		.uleb128 0x17
 2670 000d 11       		.uleb128 0x11
 2671 000e 01       		.uleb128 0x1
 2672 000f 10       		.uleb128 0x10
 2673 0010 17       		.uleb128 0x17
 2674 0011 00       		.byte	0
 2675 0012 00       		.byte	0
 2676 0013 02       		.uleb128 0x2
 2677 0014 24       		.uleb128 0x24
 2678 0015 00       		.byte	0
 2679 0016 0B       		.uleb128 0xb
 2680 0017 0B       		.uleb128 0xb
 2681 0018 3E       		.uleb128 0x3e
 2682 0019 0B       		.uleb128 0xb
 2683 001a 03       		.uleb128 0x3
 2684 001b 0E       		.uleb128 0xe
 2685 001c 00       		.byte	0
 2686 001d 00       		.byte	0
 2687 001e 03       		.uleb128 0x3
 2688 001f 24       		.uleb128 0x24
 2689 0020 00       		.byte	0
 2690 0021 0B       		.uleb128 0xb
 2691 0022 0B       		.uleb128 0xb
 2692 0023 3E       		.uleb128 0x3e
 2693 0024 0B       		.uleb128 0xb
 2694 0025 03       		.uleb128 0x3
 2695 0026 08       		.uleb128 0x8
 2696 0027 00       		.byte	0
 2697 0028 00       		.byte	0
 2698 0029 04       		.uleb128 0x4
 2699 002a 16       		.uleb128 0x16
 2700 002b 00       		.byte	0
 2701 002c 03       		.uleb128 0x3
 2702 002d 0E       		.uleb128 0xe
 2703 002e 3A       		.uleb128 0x3a
 2704 002f 0B       		.uleb128 0xb
 2705 0030 3B       		.uleb128 0x3b
 2706 0031 05       		.uleb128 0x5
 2707 0032 49       		.uleb128 0x49
 2708 0033 13       		.uleb128 0x13
 2709 0034 00       		.byte	0
 2710 0035 00       		.byte	0
 2711 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 93


 2712 0037 35       		.uleb128 0x35
 2713 0038 00       		.byte	0
 2714 0039 49       		.uleb128 0x49
 2715 003a 13       		.uleb128 0x13
 2716 003b 00       		.byte	0
 2717 003c 00       		.byte	0
 2718 003d 06       		.uleb128 0x6
 2719 003e 13       		.uleb128 0x13
 2720 003f 01       		.byte	0x1
 2721 0040 0B       		.uleb128 0xb
 2722 0041 0B       		.uleb128 0xb
 2723 0042 3A       		.uleb128 0x3a
 2724 0043 0B       		.uleb128 0xb
 2725 0044 3B       		.uleb128 0x3b
 2726 0045 0B       		.uleb128 0xb
 2727 0046 01       		.uleb128 0x1
 2728 0047 13       		.uleb128 0x13
 2729 0048 00       		.byte	0
 2730 0049 00       		.byte	0
 2731 004a 07       		.uleb128 0x7
 2732 004b 0D       		.uleb128 0xd
 2733 004c 00       		.byte	0
 2734 004d 03       		.uleb128 0x3
 2735 004e 0E       		.uleb128 0xe
 2736 004f 3A       		.uleb128 0x3a
 2737 0050 0B       		.uleb128 0xb
 2738 0051 3B       		.uleb128 0x3b
 2739 0052 0B       		.uleb128 0xb
 2740 0053 49       		.uleb128 0x49
 2741 0054 13       		.uleb128 0x13
 2742 0055 38       		.uleb128 0x38
 2743 0056 0B       		.uleb128 0xb
 2744 0057 00       		.byte	0
 2745 0058 00       		.byte	0
 2746 0059 08       		.uleb128 0x8
 2747 005a 16       		.uleb128 0x16
 2748 005b 00       		.byte	0
 2749 005c 03       		.uleb128 0x3
 2750 005d 0E       		.uleb128 0xe
 2751 005e 3A       		.uleb128 0x3a
 2752 005f 0B       		.uleb128 0xb
 2753 0060 3B       		.uleb128 0x3b
 2754 0061 0B       		.uleb128 0xb
 2755 0062 49       		.uleb128 0x49
 2756 0063 13       		.uleb128 0x13
 2757 0064 00       		.byte	0
 2758 0065 00       		.byte	0
 2759 0066 09       		.uleb128 0x9
 2760 0067 0D       		.uleb128 0xd
 2761 0068 00       		.byte	0
 2762 0069 03       		.uleb128 0x3
 2763 006a 08       		.uleb128 0x8
 2764 006b 3A       		.uleb128 0x3a
 2765 006c 0B       		.uleb128 0xb
 2766 006d 3B       		.uleb128 0x3b
 2767 006e 0B       		.uleb128 0xb
 2768 006f 49       		.uleb128 0x49
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 94


 2769 0070 13       		.uleb128 0x13
 2770 0071 38       		.uleb128 0x38
 2771 0072 0B       		.uleb128 0xb
 2772 0073 00       		.byte	0
 2773 0074 00       		.byte	0
 2774 0075 0A       		.uleb128 0xa
 2775 0076 01       		.uleb128 0x1
 2776 0077 01       		.byte	0x1
 2777 0078 49       		.uleb128 0x49
 2778 0079 13       		.uleb128 0x13
 2779 007a 01       		.uleb128 0x1
 2780 007b 13       		.uleb128 0x13
 2781 007c 00       		.byte	0
 2782 007d 00       		.byte	0
 2783 007e 0B       		.uleb128 0xb
 2784 007f 21       		.uleb128 0x21
 2785 0080 00       		.byte	0
 2786 0081 49       		.uleb128 0x49
 2787 0082 13       		.uleb128 0x13
 2788 0083 2F       		.uleb128 0x2f
 2789 0084 0B       		.uleb128 0xb
 2790 0085 00       		.byte	0
 2791 0086 00       		.byte	0
 2792 0087 0C       		.uleb128 0xc
 2793 0088 13       		.uleb128 0x13
 2794 0089 01       		.byte	0x1
 2795 008a 0B       		.uleb128 0xb
 2796 008b 05       		.uleb128 0x5
 2797 008c 3A       		.uleb128 0x3a
 2798 008d 0B       		.uleb128 0xb
 2799 008e 3B       		.uleb128 0x3b
 2800 008f 05       		.uleb128 0x5
 2801 0090 01       		.uleb128 0x1
 2802 0091 13       		.uleb128 0x13
 2803 0092 00       		.byte	0
 2804 0093 00       		.byte	0
 2805 0094 0D       		.uleb128 0xd
 2806 0095 0D       		.uleb128 0xd
 2807 0096 00       		.byte	0
 2808 0097 03       		.uleb128 0x3
 2809 0098 0E       		.uleb128 0xe
 2810 0099 3A       		.uleb128 0x3a
 2811 009a 0B       		.uleb128 0xb
 2812 009b 3B       		.uleb128 0x3b
 2813 009c 05       		.uleb128 0x5
 2814 009d 49       		.uleb128 0x49
 2815 009e 13       		.uleb128 0x13
 2816 009f 38       		.uleb128 0x38
 2817 00a0 0B       		.uleb128 0xb
 2818 00a1 00       		.byte	0
 2819 00a2 00       		.byte	0
 2820 00a3 0E       		.uleb128 0xe
 2821 00a4 2E       		.uleb128 0x2e
 2822 00a5 01       		.byte	0x1
 2823 00a6 3F       		.uleb128 0x3f
 2824 00a7 19       		.uleb128 0x19
 2825 00a8 03       		.uleb128 0x3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 95


 2826 00a9 0E       		.uleb128 0xe
 2827 00aa 3A       		.uleb128 0x3a
 2828 00ab 0B       		.uleb128 0xb
 2829 00ac 3B       		.uleb128 0x3b
 2830 00ad 0B       		.uleb128 0xb
 2831 00ae 27       		.uleb128 0x27
 2832 00af 19       		.uleb128 0x19
 2833 00b0 11       		.uleb128 0x11
 2834 00b1 01       		.uleb128 0x1
 2835 00b2 12       		.uleb128 0x12
 2836 00b3 06       		.uleb128 0x6
 2837 00b4 40       		.uleb128 0x40
 2838 00b5 18       		.uleb128 0x18
 2839 00b6 9642     		.uleb128 0x2116
 2840 00b8 19       		.uleb128 0x19
 2841 00b9 01       		.uleb128 0x1
 2842 00ba 13       		.uleb128 0x13
 2843 00bb 00       		.byte	0
 2844 00bc 00       		.byte	0
 2845 00bd 0F       		.uleb128 0xf
 2846 00be 05       		.uleb128 0x5
 2847 00bf 00       		.byte	0
 2848 00c0 03       		.uleb128 0x3
 2849 00c1 0E       		.uleb128 0xe
 2850 00c2 3A       		.uleb128 0x3a
 2851 00c3 0B       		.uleb128 0xb
 2852 00c4 3B       		.uleb128 0x3b
 2853 00c5 0B       		.uleb128 0xb
 2854 00c6 49       		.uleb128 0x49
 2855 00c7 13       		.uleb128 0x13
 2856 00c8 02       		.uleb128 0x2
 2857 00c9 18       		.uleb128 0x18
 2858 00ca 00       		.byte	0
 2859 00cb 00       		.byte	0
 2860 00cc 10       		.uleb128 0x10
 2861 00cd 2E       		.uleb128 0x2e
 2862 00ce 00       		.byte	0
 2863 00cf 3F       		.uleb128 0x3f
 2864 00d0 19       		.uleb128 0x19
 2865 00d1 03       		.uleb128 0x3
 2866 00d2 0E       		.uleb128 0xe
 2867 00d3 3A       		.uleb128 0x3a
 2868 00d4 0B       		.uleb128 0xb
 2869 00d5 3B       		.uleb128 0x3b
 2870 00d6 0B       		.uleb128 0xb
 2871 00d7 27       		.uleb128 0x27
 2872 00d8 19       		.uleb128 0x19
 2873 00d9 11       		.uleb128 0x11
 2874 00da 01       		.uleb128 0x1
 2875 00db 12       		.uleb128 0x12
 2876 00dc 06       		.uleb128 0x6
 2877 00dd 40       		.uleb128 0x40
 2878 00de 18       		.uleb128 0x18
 2879 00df 9642     		.uleb128 0x2116
 2880 00e1 19       		.uleb128 0x19
 2881 00e2 00       		.byte	0
 2882 00e3 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 96


 2883 00e4 11       		.uleb128 0x11
 2884 00e5 2E       		.uleb128 0x2e
 2885 00e6 01       		.byte	0x1
 2886 00e7 3F       		.uleb128 0x3f
 2887 00e8 19       		.uleb128 0x19
 2888 00e9 03       		.uleb128 0x3
 2889 00ea 0E       		.uleb128 0xe
 2890 00eb 3A       		.uleb128 0x3a
 2891 00ec 0B       		.uleb128 0xb
 2892 00ed 3B       		.uleb128 0x3b
 2893 00ee 05       		.uleb128 0x5
 2894 00ef 27       		.uleb128 0x27
 2895 00f0 19       		.uleb128 0x19
 2896 00f1 11       		.uleb128 0x11
 2897 00f2 01       		.uleb128 0x1
 2898 00f3 12       		.uleb128 0x12
 2899 00f4 06       		.uleb128 0x6
 2900 00f5 40       		.uleb128 0x40
 2901 00f6 18       		.uleb128 0x18
 2902 00f7 9642     		.uleb128 0x2116
 2903 00f9 19       		.uleb128 0x19
 2904 00fa 01       		.uleb128 0x1
 2905 00fb 13       		.uleb128 0x13
 2906 00fc 00       		.byte	0
 2907 00fd 00       		.byte	0
 2908 00fe 12       		.uleb128 0x12
 2909 00ff 05       		.uleb128 0x5
 2910 0100 00       		.byte	0
 2911 0101 03       		.uleb128 0x3
 2912 0102 0E       		.uleb128 0xe
 2913 0103 3A       		.uleb128 0x3a
 2914 0104 0B       		.uleb128 0xb
 2915 0105 3B       		.uleb128 0x3b
 2916 0106 05       		.uleb128 0x5
 2917 0107 49       		.uleb128 0x49
 2918 0108 13       		.uleb128 0x13
 2919 0109 02       		.uleb128 0x2
 2920 010a 18       		.uleb128 0x18
 2921 010b 00       		.byte	0
 2922 010c 00       		.byte	0
 2923 010d 13       		.uleb128 0x13
 2924 010e 34       		.uleb128 0x34
 2925 010f 00       		.byte	0
 2926 0110 03       		.uleb128 0x3
 2927 0111 08       		.uleb128 0x8
 2928 0112 3A       		.uleb128 0x3a
 2929 0113 0B       		.uleb128 0xb
 2930 0114 3B       		.uleb128 0x3b
 2931 0115 05       		.uleb128 0x5
 2932 0116 49       		.uleb128 0x49
 2933 0117 13       		.uleb128 0x13
 2934 0118 02       		.uleb128 0x2
 2935 0119 18       		.uleb128 0x18
 2936 011a 00       		.byte	0
 2937 011b 00       		.byte	0
 2938 011c 14       		.uleb128 0x14
 2939 011d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 97


 2940 011e 01       		.byte	0x1
 2941 011f 3F       		.uleb128 0x3f
 2942 0120 19       		.uleb128 0x19
 2943 0121 03       		.uleb128 0x3
 2944 0122 0E       		.uleb128 0xe
 2945 0123 3A       		.uleb128 0x3a
 2946 0124 0B       		.uleb128 0xb
 2947 0125 3B       		.uleb128 0x3b
 2948 0126 05       		.uleb128 0x5
 2949 0127 27       		.uleb128 0x27
 2950 0128 19       		.uleb128 0x19
 2951 0129 11       		.uleb128 0x11
 2952 012a 01       		.uleb128 0x1
 2953 012b 12       		.uleb128 0x12
 2954 012c 06       		.uleb128 0x6
 2955 012d 40       		.uleb128 0x40
 2956 012e 18       		.uleb128 0x18
 2957 012f 9742     		.uleb128 0x2117
 2958 0131 19       		.uleb128 0x19
 2959 0132 01       		.uleb128 0x1
 2960 0133 13       		.uleb128 0x13
 2961 0134 00       		.byte	0
 2962 0135 00       		.byte	0
 2963 0136 15       		.uleb128 0x15
 2964 0137 34       		.uleb128 0x34
 2965 0138 00       		.byte	0
 2966 0139 03       		.uleb128 0x3
 2967 013a 0E       		.uleb128 0xe
 2968 013b 3A       		.uleb128 0x3a
 2969 013c 0B       		.uleb128 0xb
 2970 013d 3B       		.uleb128 0x3b
 2971 013e 05       		.uleb128 0x5
 2972 013f 49       		.uleb128 0x49
 2973 0140 13       		.uleb128 0x13
 2974 0141 02       		.uleb128 0x2
 2975 0142 18       		.uleb128 0x18
 2976 0143 00       		.byte	0
 2977 0144 00       		.byte	0
 2978 0145 16       		.uleb128 0x16
 2979 0146 2E       		.uleb128 0x2e
 2980 0147 01       		.byte	0x1
 2981 0148 3F       		.uleb128 0x3f
 2982 0149 19       		.uleb128 0x19
 2983 014a 03       		.uleb128 0x3
 2984 014b 0E       		.uleb128 0xe
 2985 014c 3A       		.uleb128 0x3a
 2986 014d 0B       		.uleb128 0xb
 2987 014e 3B       		.uleb128 0x3b
 2988 014f 05       		.uleb128 0x5
 2989 0150 27       		.uleb128 0x27
 2990 0151 19       		.uleb128 0x19
 2991 0152 49       		.uleb128 0x49
 2992 0153 13       		.uleb128 0x13
 2993 0154 11       		.uleb128 0x11
 2994 0155 01       		.uleb128 0x1
 2995 0156 12       		.uleb128 0x12
 2996 0157 06       		.uleb128 0x6
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 98


 2997 0158 40       		.uleb128 0x40
 2998 0159 18       		.uleb128 0x18
 2999 015a 9742     		.uleb128 0x2117
 3000 015c 19       		.uleb128 0x19
 3001 015d 01       		.uleb128 0x1
 3002 015e 13       		.uleb128 0x13
 3003 015f 00       		.byte	0
 3004 0160 00       		.byte	0
 3005 0161 17       		.uleb128 0x17
 3006 0162 2E       		.uleb128 0x2e
 3007 0163 00       		.byte	0
 3008 0164 3F       		.uleb128 0x3f
 3009 0165 19       		.uleb128 0x19
 3010 0166 03       		.uleb128 0x3
 3011 0167 0E       		.uleb128 0xe
 3012 0168 3A       		.uleb128 0x3a
 3013 0169 0B       		.uleb128 0xb
 3014 016a 3B       		.uleb128 0x3b
 3015 016b 05       		.uleb128 0x5
 3016 016c 27       		.uleb128 0x27
 3017 016d 19       		.uleb128 0x19
 3018 016e 49       		.uleb128 0x49
 3019 016f 13       		.uleb128 0x13
 3020 0170 11       		.uleb128 0x11
 3021 0171 01       		.uleb128 0x1
 3022 0172 12       		.uleb128 0x12
 3023 0173 06       		.uleb128 0x6
 3024 0174 40       		.uleb128 0x40
 3025 0175 18       		.uleb128 0x18
 3026 0176 9742     		.uleb128 0x2117
 3027 0178 19       		.uleb128 0x19
 3028 0179 00       		.byte	0
 3029 017a 00       		.byte	0
 3030 017b 18       		.uleb128 0x18
 3031 017c 0B       		.uleb128 0xb
 3032 017d 01       		.byte	0x1
 3033 017e 11       		.uleb128 0x11
 3034 017f 01       		.uleb128 0x1
 3035 0180 12       		.uleb128 0x12
 3036 0181 06       		.uleb128 0x6
 3037 0182 00       		.byte	0
 3038 0183 00       		.byte	0
 3039 0184 19       		.uleb128 0x19
 3040 0185 0F       		.uleb128 0xf
 3041 0186 00       		.byte	0
 3042 0187 0B       		.uleb128 0xb
 3043 0188 0B       		.uleb128 0xb
 3044 0189 49       		.uleb128 0x49
 3045 018a 13       		.uleb128 0x13
 3046 018b 00       		.byte	0
 3047 018c 00       		.byte	0
 3048 018d 1A       		.uleb128 0x1a
 3049 018e 26       		.uleb128 0x26
 3050 018f 00       		.byte	0
 3051 0190 49       		.uleb128 0x49
 3052 0191 13       		.uleb128 0x13
 3053 0192 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 99


 3054 0193 00       		.byte	0
 3055 0194 1B       		.uleb128 0x1b
 3056 0195 2E       		.uleb128 0x2e
 3057 0196 01       		.byte	0x1
 3058 0197 3F       		.uleb128 0x3f
 3059 0198 19       		.uleb128 0x19
 3060 0199 03       		.uleb128 0x3
 3061 019a 0E       		.uleb128 0xe
 3062 019b 3A       		.uleb128 0x3a
 3063 019c 0B       		.uleb128 0xb
 3064 019d 3B       		.uleb128 0x3b
 3065 019e 05       		.uleb128 0x5
 3066 019f 27       		.uleb128 0x27
 3067 01a0 19       		.uleb128 0x19
 3068 01a1 49       		.uleb128 0x49
 3069 01a2 13       		.uleb128 0x13
 3070 01a3 11       		.uleb128 0x11
 3071 01a4 01       		.uleb128 0x1
 3072 01a5 12       		.uleb128 0x12
 3073 01a6 06       		.uleb128 0x6
 3074 01a7 40       		.uleb128 0x40
 3075 01a8 18       		.uleb128 0x18
 3076 01a9 9642     		.uleb128 0x2116
 3077 01ab 19       		.uleb128 0x19
 3078 01ac 01       		.uleb128 0x1
 3079 01ad 13       		.uleb128 0x13
 3080 01ae 00       		.byte	0
 3081 01af 00       		.byte	0
 3082 01b0 1C       		.uleb128 0x1c
 3083 01b1 2E       		.uleb128 0x2e
 3084 01b2 00       		.byte	0
 3085 01b3 3F       		.uleb128 0x3f
 3086 01b4 19       		.uleb128 0x19
 3087 01b5 03       		.uleb128 0x3
 3088 01b6 0E       		.uleb128 0xe
 3089 01b7 3A       		.uleb128 0x3a
 3090 01b8 0B       		.uleb128 0xb
 3091 01b9 3B       		.uleb128 0x3b
 3092 01ba 05       		.uleb128 0x5
 3093 01bb 27       		.uleb128 0x27
 3094 01bc 19       		.uleb128 0x19
 3095 01bd 11       		.uleb128 0x11
 3096 01be 01       		.uleb128 0x1
 3097 01bf 12       		.uleb128 0x12
 3098 01c0 06       		.uleb128 0x6
 3099 01c1 40       		.uleb128 0x40
 3100 01c2 18       		.uleb128 0x18
 3101 01c3 9742     		.uleb128 0x2117
 3102 01c5 19       		.uleb128 0x19
 3103 01c6 00       		.byte	0
 3104 01c7 00       		.byte	0
 3105 01c8 1D       		.uleb128 0x1d
 3106 01c9 34       		.uleb128 0x34
 3107 01ca 00       		.byte	0
 3108 01cb 03       		.uleb128 0x3
 3109 01cc 0E       		.uleb128 0xe
 3110 01cd 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 100


 3111 01ce 0B       		.uleb128 0xb
 3112 01cf 3B       		.uleb128 0x3b
 3113 01d0 0B       		.uleb128 0xb
 3114 01d1 49       		.uleb128 0x49
 3115 01d2 13       		.uleb128 0x13
 3116 01d3 3F       		.uleb128 0x3f
 3117 01d4 19       		.uleb128 0x19
 3118 01d5 02       		.uleb128 0x2
 3119 01d6 18       		.uleb128 0x18
 3120 01d7 00       		.byte	0
 3121 01d8 00       		.byte	0
 3122 01d9 1E       		.uleb128 0x1e
 3123 01da 34       		.uleb128 0x34
 3124 01db 00       		.byte	0
 3125 01dc 03       		.uleb128 0x3
 3126 01dd 0E       		.uleb128 0xe
 3127 01de 3A       		.uleb128 0x3a
 3128 01df 0B       		.uleb128 0xb
 3129 01e0 3B       		.uleb128 0x3b
 3130 01e1 05       		.uleb128 0x5
 3131 01e2 49       		.uleb128 0x49
 3132 01e3 13       		.uleb128 0x13
 3133 01e4 3F       		.uleb128 0x3f
 3134 01e5 19       		.uleb128 0x19
 3135 01e6 3C       		.uleb128 0x3c
 3136 01e7 19       		.uleb128 0x19
 3137 01e8 00       		.byte	0
 3138 01e9 00       		.byte	0
 3139 01ea 1F       		.uleb128 0x1f
 3140 01eb 34       		.uleb128 0x34
 3141 01ec 00       		.byte	0
 3142 01ed 03       		.uleb128 0x3
 3143 01ee 0E       		.uleb128 0xe
 3144 01ef 3A       		.uleb128 0x3a
 3145 01f0 0B       		.uleb128 0xb
 3146 01f1 3B       		.uleb128 0x3b
 3147 01f2 0B       		.uleb128 0xb
 3148 01f3 49       		.uleb128 0x49
 3149 01f4 13       		.uleb128 0x13
 3150 01f5 3F       		.uleb128 0x3f
 3151 01f6 19       		.uleb128 0x19
 3152 01f7 3C       		.uleb128 0x3c
 3153 01f8 19       		.uleb128 0x19
 3154 01f9 00       		.byte	0
 3155 01fa 00       		.byte	0
 3156 01fb 00       		.byte	0
 3157              		.section	.debug_aranges,"",%progbits
 3158 0000 C4000000 		.4byte	0xc4
 3159 0004 0200     		.2byte	0x2
 3160 0006 00000000 		.4byte	.Ldebug_info0
 3161 000a 04       		.byte	0x4
 3162 000b 00       		.byte	0
 3163 000c 0000     		.2byte	0
 3164 000e 0000     		.2byte	0
 3165 0010 00000000 		.4byte	.LFB1
 3166 0014 40000000 		.4byte	.LFE1-.LFB1
 3167 0018 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 101


 3168 001c F0000000 		.4byte	.LFE2-.LFB2
 3169 0020 00000000 		.4byte	.LFB3
 3170 0024 20010000 		.4byte	.LFE3-.LFB3
 3171 0028 00000000 		.4byte	.LFB4
 3172 002c 90000000 		.4byte	.LFE4-.LFB4
 3173 0030 00000000 		.4byte	.LFB5
 3174 0034 A0000000 		.4byte	.LFE5-.LFB5
 3175 0038 00000000 		.4byte	.LFB6
 3176 003c 30000000 		.4byte	.LFE6-.LFB6
 3177 0040 00000000 		.4byte	.LFB7
 3178 0044 14000000 		.4byte	.LFE7-.LFB7
 3179 0048 00000000 		.4byte	.LFB8
 3180 004c 34000000 		.4byte	.LFE8-.LFB8
 3181 0050 00000000 		.4byte	.LFB9
 3182 0054 24000000 		.4byte	.LFE9-.LFB9
 3183 0058 00000000 		.4byte	.LFB10
 3184 005c 30000000 		.4byte	.LFE10-.LFB10
 3185 0060 00000000 		.4byte	.LFB11
 3186 0064 80000000 		.4byte	.LFE11-.LFB11
 3187 0068 00000000 		.4byte	.LFB12
 3188 006c 4C010000 		.4byte	.LFE12-.LFB12
 3189 0070 00000000 		.4byte	.LFB13
 3190 0074 C0000000 		.4byte	.LFE13-.LFB13
 3191 0078 00000000 		.4byte	.LFB14
 3192 007c 68000000 		.4byte	.LFE14-.LFB14
 3193 0080 00000000 		.4byte	.LFB15
 3194 0084 38000000 		.4byte	.LFE15-.LFB15
 3195 0088 00000000 		.4byte	.LFB16
 3196 008c 20000000 		.4byte	.LFE16-.LFB16
 3197 0090 00000000 		.4byte	.LFB17
 3198 0094 44000000 		.4byte	.LFE17-.LFB17
 3199 0098 00000000 		.4byte	.LFB18
 3200 009c 44000000 		.4byte	.LFE18-.LFB18
 3201 00a0 00000000 		.4byte	.LFB19
 3202 00a4 30000000 		.4byte	.LFE19-.LFB19
 3203 00a8 00000000 		.4byte	.LFB20
 3204 00ac 1C000000 		.4byte	.LFE20-.LFB20
 3205 00b0 00000000 		.4byte	.LFB21
 3206 00b4 1C000000 		.4byte	.LFE21-.LFB21
 3207 00b8 00000000 		.4byte	.LFB22
 3208 00bc 1C000000 		.4byte	.LFE22-.LFB22
 3209 00c0 00000000 		.4byte	0
 3210 00c4 00000000 		.4byte	0
 3211              		.section	.debug_ranges,"",%progbits
 3212              	.Ldebug_ranges0:
 3213 0000 00000000 		.4byte	.LFB1
 3214 0004 40000000 		.4byte	.LFE1
 3215 0008 00000000 		.4byte	.LFB2
 3216 000c F0000000 		.4byte	.LFE2
 3217 0010 00000000 		.4byte	.LFB3
 3218 0014 20010000 		.4byte	.LFE3
 3219 0018 00000000 		.4byte	.LFB4
 3220 001c 90000000 		.4byte	.LFE4
 3221 0020 00000000 		.4byte	.LFB5
 3222 0024 A0000000 		.4byte	.LFE5
 3223 0028 00000000 		.4byte	.LFB6
 3224 002c 30000000 		.4byte	.LFE6
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 102


 3225 0030 00000000 		.4byte	.LFB7
 3226 0034 14000000 		.4byte	.LFE7
 3227 0038 00000000 		.4byte	.LFB8
 3228 003c 34000000 		.4byte	.LFE8
 3229 0040 00000000 		.4byte	.LFB9
 3230 0044 24000000 		.4byte	.LFE9
 3231 0048 00000000 		.4byte	.LFB10
 3232 004c 30000000 		.4byte	.LFE10
 3233 0050 00000000 		.4byte	.LFB11
 3234 0054 80000000 		.4byte	.LFE11
 3235 0058 00000000 		.4byte	.LFB12
 3236 005c 4C010000 		.4byte	.LFE12
 3237 0060 00000000 		.4byte	.LFB13
 3238 0064 C0000000 		.4byte	.LFE13
 3239 0068 00000000 		.4byte	.LFB14
 3240 006c 68000000 		.4byte	.LFE14
 3241 0070 00000000 		.4byte	.LFB15
 3242 0074 38000000 		.4byte	.LFE15
 3243 0078 00000000 		.4byte	.LFB16
 3244 007c 20000000 		.4byte	.LFE16
 3245 0080 00000000 		.4byte	.LFB17
 3246 0084 44000000 		.4byte	.LFE17
 3247 0088 00000000 		.4byte	.LFB18
 3248 008c 44000000 		.4byte	.LFE18
 3249 0090 00000000 		.4byte	.LFB19
 3250 0094 30000000 		.4byte	.LFE19
 3251 0098 00000000 		.4byte	.LFB20
 3252 009c 1C000000 		.4byte	.LFE20
 3253 00a0 00000000 		.4byte	.LFB21
 3254 00a4 1C000000 		.4byte	.LFE21
 3255 00a8 00000000 		.4byte	.LFB22
 3256 00ac 1C000000 		.4byte	.LFE22
 3257 00b0 00000000 		.4byte	0
 3258 00b4 00000000 		.4byte	0
 3259              		.section	.debug_line,"",%progbits
 3260              	.Ldebug_line0:
 3261 0000 4B030000 		.section	.debug_str,"MS",%progbits,1
 3261      02006200 
 3261      00000201 
 3261      FB0E0D00 
 3261      01010101 
 3262              	.LASF10:
 3263 0000 75696E74 		.ascii	"uint16\000"
 3263      313600
 3264              	.LASF81:
 3265 0007 55534255 		.ascii	"USBUART_device\000"
 3265      4152545F 
 3265      64657669 
 3265      636500
 3266              	.LASF76:
 3267 0016 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3267      4152545F 
 3267      47657444 
 3267      65766963 
 3267      65416464 
 3268              	.LASF93:
 3269 002f 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBUART.c\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 103


 3269      72617465 
 3269      645F536F 
 3269      75726365 
 3269      5C50536F 
 3270              	.LASF73:
 3271 0050 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3271      4152545F 
 3271      52575545 
 3271      6E61626C 
 3271      656400
 3272              	.LASF91:
 3273 0063 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3273      4152545F 
 3273      6C617374 
 3273      5061636B 
 3273      65745369 
 3274              	.LASF62:
 3275 007a 55534255 		.ascii	"USBUART_LoadInEP\000"
 3275      4152545F 
 3275      4C6F6164 
 3275      496E4550 
 3275      00
 3276              	.LASF7:
 3277 008b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3277      206C6F6E 
 3277      6720756E 
 3277      7369676E 
 3277      65642069 
 3278              	.LASF22:
 3279 00a2 61646472 		.ascii	"addr\000"
 3279      00
 3280              	.LASF32:
 3281 00a7 65704366 		.ascii	"epCfg\000"
 3281      6700
 3282              	.LASF90:
 3283 00ad 55534255 		.ascii	"USBUART_EP\000"
 3283      4152545F 
 3283      455000
 3284              	.LASF59:
 3285 00b8 65704E75 		.ascii	"epNumber\000"
 3285      6D626572 
 3285      00
 3286              	.LASF46:
 3287 00c1 64657669 		.ascii	"device\000"
 3287      636500
 3288              	.LASF75:
 3289 00c8 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3289      4152545F 
 3289      47657443 
 3289      6F6E6669 
 3289      67757261 
 3290              	.LASF6:
 3291 00e1 6C6F6E67 		.ascii	"long long int\000"
 3291      206C6F6E 
 3291      6720696E 
 3291      7400
 3292              	.LASF0:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 104


 3293 00ef 7369676E 		.ascii	"signed char\000"
 3293      65642063 
 3293      68617200 
 3294              	.LASF66:
 3295 00fb 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3295      4152545F 
 3295      456E6162 
 3295      6C654F75 
 3295      74455000 
 3296              	.LASF70:
 3297 010f 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3297      4152545F 
 3297      47657445 
 3297      5041636B 
 3297      53746174 
 3298              	.LASF61:
 3299 0125 636E7472 		.ascii	"cntr\000"
 3299      00
 3300              	.LASF43:
 3301 012a 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3301      4152545F 
 3301      7369655F 
 3301      6570735F 
 3301      73747275 
 3302              	.LASF54:
 3303 0141 55534255 		.ascii	"USBUART_CheckActivity\000"
 3303      4152545F 
 3303      43686563 
 3303      6B416374 
 3303      69766974 
 3304              	.LASF4:
 3305 0157 6C6F6E67 		.ascii	"long int\000"
 3305      20696E74 
 3305      00
 3306              	.LASF9:
 3307 0160 75696E74 		.ascii	"uint8\000"
 3307      3800
 3308              	.LASF21:
 3309 0166 6570546F 		.ascii	"epToggle\000"
 3309      67676C65 
 3309      00
 3310              	.LASF86:
 3311 016f 55534255 		.ascii	"USBUART_hidProtocol\000"
 3311      4152545F 
 3311      68696450 
 3311      726F746F 
 3311      636F6C00 
 3312              	.LASF36:
 3313 0183 72775761 		.ascii	"rwWa\000"
 3313      00
 3314              	.LASF13:
 3315 0188 646F7562 		.ascii	"double\000"
 3315      6C6500
 3316              	.LASF72:
 3317 018f 706F7765 		.ascii	"powerStatus\000"
 3317      72537461 
 3317      74757300 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 105


 3318              	.LASF79:
 3319 019b 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3319      4152545F 
 3319      44697361 
 3319      626C6553 
 3319      6F66496E 
 3320              	.LASF71:
 3321 01b1 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3321      4152545F 
 3321      53657450 
 3321      6F776572 
 3321      53746174 
 3322              	.LASF34:
 3323 01c8 65705372 		.ascii	"epSr\000"
 3323      00
 3324              	.LASF80:
 3325 01cd 55534255 		.ascii	"USBUART_initVar\000"
 3325      4152545F 
 3325      696E6974 
 3325      56617200 
 3326              	.LASF87:
 3327 01dd 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3327      4152545F 
 3327      696E7465 
 3327      72666163 
 3327      654E756D 
 3328              	.LASF11:
 3329 01f5 75696E74 		.ascii	"uint32\000"
 3329      333200
 3330              	.LASF63:
 3331 01fc 70446174 		.ascii	"pData\000"
 3331      6100
 3332              	.LASF42:
 3333 0202 73696545 		.ascii	"sieEp\000"
 3333      7000
 3334              	.LASF23:
 3335 0208 65704D6F 		.ascii	"epMode\000"
 3335      646500
 3336              	.LASF35:
 3337 020f 72657365 		.ascii	"reserved\000"
 3337      72766564 
 3337      00
 3338              	.LASF85:
 3339 0218 55534255 		.ascii	"USBUART_deviceStatus\000"
 3339      4152545F 
 3339      64657669 
 3339      63655374 
 3339      61747573 
 3340              	.LASF8:
 3341 022d 756E7369 		.ascii	"unsigned int\000"
 3341      676E6564 
 3341      20696E74 
 3341      00
 3342              	.LASF5:
 3343 023a 6C6F6E67 		.ascii	"long unsigned int\000"
 3343      20756E73 
 3343      69676E65 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 106


 3343      6420696E 
 3343      7400
 3344              	.LASF3:
 3345 024c 73686F72 		.ascii	"short unsigned int\000"
 3345      7420756E 
 3345      7369676E 
 3345      65642069 
 3345      6E7400
 3346              	.LASF51:
 3347 025f 55534255 		.ascii	"USBUART_Stop\000"
 3347      4152545F 
 3347      53746F70 
 3347      00
 3348              	.LASF48:
 3349 026c 55534255 		.ascii	"USBUART_Start\000"
 3349      4152545F 
 3349      53746172 
 3349      7400
 3350              	.LASF56:
 3351 027a 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3351      4152545F 
 3351      47657449 
 3351      6E746572 
 3351      66616365 
 3352              	.LASF77:
 3353 0296 55534255 		.ascii	"USBUART_Init\000"
 3353      4152545F 
 3353      496E6974 
 3353      00
 3354              	.LASF44:
 3355 02a3 61726245 		.ascii	"arbEp\000"
 3355      7000
 3356              	.LASF92:
 3357 02a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3357      43313120 
 3357      352E342E 
 3357      31203230 
 3357      31363036 
 3358 02dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3358      20726576 
 3358      6973696F 
 3358      6E203233 
 3358      37373135 
 3359 030f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3359      66756E63 
 3359      74696F6E 
 3359      2D736563 
 3359      74696F6E 
 3360              	.LASF26:
 3361 0337 696E7465 		.ascii	"interface\000"
 3361      72666163 
 3361      6500
 3362              	.LASF53:
 3363 0341 63723152 		.ascii	"cr1Reg\000"
 3363      656700
 3364              	.LASF15:
 3365 0348 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 107


 3365      3200
 3366              	.LASF89:
 3367 034e 55534255 		.ascii	"USBUART_deviceAddress\000"
 3367      4152545F 
 3367      64657669 
 3367      63654164 
 3367      64726573 
 3368              	.LASF41:
 3369 0364 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3369      4152545F 
 3369      6172625F 
 3369      65705F73 
 3369      74727563 
 3370              	.LASF20:
 3371 037a 68774570 		.ascii	"hwEpState\000"
 3371      53746174 
 3371      6500
 3372              	.LASF45:
 3373 0384 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3373      4152545F 
 3373      6172625F 
 3373      6570735F 
 3373      73747275 
 3374              	.LASF17:
 3375 039b 73697A65 		.ascii	"sizetype\000"
 3375      74797065 
 3375      00
 3376              	.LASF16:
 3377 03a4 6C6F6E67 		.ascii	"long double\000"
 3377      20646F75 
 3377      626C6500 
 3378              	.LASF68:
 3379 03b0 55534255 		.ascii	"USBUART_Force\000"
 3379      4152545F 
 3379      466F7263 
 3379      6500
 3380              	.LASF18:
 3381 03be 61747472 		.ascii	"attrib\000"
 3381      696200
 3382              	.LASF39:
 3383 03c5 72775261 		.ascii	"rwRaMsb\000"
 3383      4D736200 
 3384              	.LASF28:
 3385 03cd 6570436E 		.ascii	"epCnt0\000"
 3385      743000
 3386              	.LASF29:
 3387 03d4 6570436E 		.ascii	"epCnt1\000"
 3387      743100
 3388              	.LASF30:
 3389 03db 65704372 		.ascii	"epCr0\000"
 3389      3000
 3390              	.LASF94:
 3391 03e1 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 3391      73657273 
 3391      5C48507A 
 3391      3432305C 
 3391      446F6375 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 108


 3392 040e 6C622D62 		.ascii	"lb-boards\\FPGA Cards\\RETRO-EP4CE15\\PSOC\\USBFS_U"
 3392      6F617264 
 3392      735C4650 
 3392      47412043 
 3392      61726473 
 3393 043d 41525430 		.ascii	"ART01\\USBFS_UART01.cydsn\000"
 3393      315C5553 
 3393      4246535F 
 3393      55415254 
 3393      30312E63 
 3394              	.LASF12:
 3395 0456 666C6F61 		.ascii	"float\000"
 3395      7400
 3396              	.LASF65:
 3397 045c 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3397      4152545F 
 3397      52656164 
 3397      4F757445 
 3397      5000
 3398              	.LASF19:
 3399 046e 61706945 		.ascii	"apiEpState\000"
 3399      70537461 
 3399      746500
 3400              	.LASF88:
 3401 0479 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3401      4152545F 
 3401      696E7465 
 3401      72666163 
 3401      65536574 
 3402              	.LASF1:
 3403 0492 756E7369 		.ascii	"unsigned char\000"
 3403      676E6564 
 3403      20636861 
 3403      7200
 3404              	.LASF2:
 3405 04a0 73686F72 		.ascii	"short int\000"
 3405      7420696E 
 3405      7400
 3406              	.LASF58:
 3407 04aa 55534255 		.ascii	"USBUART_GetEPState\000"
 3407      4152545F 
 3407      47657445 
 3407      50537461 
 3407      746500
 3408              	.LASF38:
 3409 04bd 72775261 		.ascii	"rwRa\000"
 3409      00
 3410              	.LASF67:
 3411 04c2 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3411      4152545F 
 3411      44697361 
 3411      626C654F 
 3411      75744550 
 3412              	.LASF37:
 3413 04d7 72775761 		.ascii	"rwWaMsb\000"
 3413      4D736200 
 3414              	.LASF31:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 109


 3415 04df 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3415      4152545F 
 3415      7369655F 
 3415      65705F73 
 3415      74727563 
 3416              	.LASF69:
 3417 04f5 62537461 		.ascii	"bState\000"
 3417      746500
 3418              	.LASF64:
 3419 04fc 6C656E67 		.ascii	"length\000"
 3419      746800
 3420              	.LASF14:
 3421 0503 63686172 		.ascii	"char\000"
 3421      00
 3422              	.LASF47:
 3423 0508 6D6F6465 		.ascii	"mode\000"
 3423      00
 3424              	.LASF25:
 3425 050d 62756666 		.ascii	"bufferSize\000"
 3425      65725369 
 3425      7A6500
 3426              	.LASF27:
 3427 0518 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3427      42554152 
 3427      545F4550 
 3427      5F43544C 
 3427      5F424C4F 
 3428              	.LASF24:
 3429 052f 62756666 		.ascii	"buffOffset\000"
 3429      4F666673 
 3429      657400
 3430              	.LASF57:
 3431 053a 696E7465 		.ascii	"interfaceNumber\000"
 3431      72666163 
 3431      654E756D 
 3431      62657200 
 3432              	.LASF60:
 3433 054a 55534255 		.ascii	"USBUART_GetEPCount\000"
 3433      4152545F 
 3433      47657445 
 3433      50436F75 
 3433      6E7400
 3434              	.LASF52:
 3435 055d 656E6162 		.ascii	"enableInterrupts\000"
 3435      6C65496E 
 3435      74657272 
 3435      75707473 
 3435      00
 3436              	.LASF40:
 3437 056e 72774472 		.ascii	"rwDr\000"
 3437      00
 3438              	.LASF49:
 3439 0573 55534255 		.ascii	"USBUART_InitComponent\000"
 3439      4152545F 
 3439      496E6974 
 3439      436F6D70 
 3439      6F6E656E 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccgBBdSE.s 			page 110


 3440              	.LASF83:
 3441 0589 55534255 		.ascii	"USBUART_configuration\000"
 3441      4152545F 
 3441      636F6E66 
 3441      69677572 
 3441      6174696F 
 3442              	.LASF55:
 3443 059f 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3443      4152545F 
 3443      4973436F 
 3443      6E666967 
 3443      75726174 
 3444              	.LASF33:
 3445 05be 6570496E 		.ascii	"epIntEn\000"
 3445      74456E00 
 3446              	.LASF50:
 3447 05c6 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3447      4152545F 
 3447      5265496E 
 3447      6974436F 
 3447      6D706F6E 
 3448              	.LASF82:
 3449 05de 55534255 		.ascii	"USBUART_transferState\000"
 3449      4152545F 
 3449      7472616E 
 3449      73666572 
 3449      53746174 
 3450              	.LASF78:
 3451 05f4 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3451      4152545F 
 3451      456E6162 
 3451      6C65536F 
 3451      66496E74 
 3452              	.LASF84:
 3453 0609 55534255 		.ascii	"USBUART_configurationChanged\000"
 3453      4152545F 
 3453      636F6E66 
 3453      69677572 
 3453      6174696F 
 3454              	.LASF74:
 3455 0626 72657375 		.ascii	"result\000"
 3455      6C7400
 3456              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
