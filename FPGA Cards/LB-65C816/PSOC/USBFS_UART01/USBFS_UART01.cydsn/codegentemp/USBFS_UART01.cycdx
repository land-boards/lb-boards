<?xml version="1.0" encoding="utf-8"?>
<blockRegMap version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cypress.com/xsd/cyblockregmap cyblockregmap.xsd" xmlns="http://cypress.com/xsd/cyblockregmap">
  <block name="Em_EEPROM_Dynamic" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="RTS" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="cy_boot" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="cy_lfclk" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="DMAC" BASE="0x0" SIZE="0x0" desc="DMAC Registers" visible="true" hidden="false">
    <register name="DMAC_CTL" address="0x40101000" bitWidth="32" desc="DMA controller control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Global DMAC enable" hidden="false">
        <value name="Disabled" value="0" desc="DMA controller is disabled." />
        <value name="Enabled" value="1" desc="DMA controller is enabled." />
      </field>
    </register>
    <register name="DMAC_STATUS" address="0x40101010" bitWidth="32" desc="DMA controller status register" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="R" resetVal="" desc="Specifies the index of the currently active data transfer. This value increases from '0' to the DATA_NR field specified of the currently active descriptor control word." hidden="false" />
      <field name="CH_ADDR" from="20" to="16" access="R" resetVal="" desc="Specifies the channel number of the currently active channel. For example, if channel 7 is active, DMAC_STATUS.ACTIVE is '1' and STATUS.CH_ADDR is '7'." hidden="false" />
      <field name="STATE" from="26" to="24" access="R" resetVal="" desc="State of the data transfer engine." hidden="false">
        <value name="IDLE" value="000" desc="Idle state when the DMA is not active." />
        <value name="LOAD_DESCR" value="001" desc="The DMA is loading the descriptor to the DMA transfer engine." />
        <value name="LOAD_SRC" value="010" desc="The DMA is getting the value from the source location." />
        <value name="STORE_DST" value="011" desc="The DMA is storing the value at the destination location." />
        <value name="STORE_DESCR" value="100" desc="The DMA is updating the descriptors after completion of transfer." />
        <value name="WAIT_TRIG_DEACT" value="101" desc="The DMA is waiting for the level sensitive trigger to deactivate." />
        <value name="STORE_ERROR" value="110" desc="There was an error during the transaction and the DMA is writing the error code to the channel status register." />
      </field>
      <field name="PRIO" from="29" to="28" access="R" resetVal="" desc="Specifies the priority of the currently active channel." hidden="false" />
      <field name="PING_PONG" from="31" to="31" access="R" resetVal="" desc="Specifies whether the PING descriptor ('0') or PONG descriptor ('1') of the channel is currently in use." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="ACTIVE" from="31" to="31" access="R" resetVal="" desc="Specifies if there is a currently active (pending) channel in the data transfer engine." hidden="false">
        <value name="IDLE" value="0" desc="No currently active channel." />
        <value name="ACTIVE" value="1" desc="Currently active channel." />
      </field>
    </register>
    <register name="DMAC_STATUS_SRC_ADDR" address="0x40101014" bitWidth="32" desc="Source address currently being used by the DMA controller" hidden="false">
      <field name="ADDR" from="31" to="0" access="R" resetVal="" desc="The source address currently being used by the DMA transfer engine. This field is provided for debug purposes. Note while reading the DMAC_STATUS, DMAC_STATUS_SRC_ADDR and DMAC_STATUS_DST_ADDR registers, the transfer engine may have advanced after one or more of these reads. Meaning the register values may not be related to each other." hidden="false" />
    </register>
    <register name="DMAC_STATUS_DST_ADDR" address="0x40101018" bitWidth="32" desc="Destination address currently being used by the DMA controller" hidden="false">
      <field name="ADDR" from="31" to="0" access="R" resetVal="" desc="The destination address currently being used by the DMA transfer engine. This field is provided for debug purposes. Note while reading the DMAC_STATUS, DMAC_STATUS_SRC_ADDR and DMAC_STATUS_DST_ADDR registers, the transfer engine may have advanced after one or more of these reads. Meaning the register values may not be related to each other." hidden="false" />
    </register>
    <register name="DMAC_STATUS_CH_ACT" address="0x4010101C" bitWidth="32" desc="Channel activation status" hidden="false">
      <field name="CH" from="31" to="0" access="R" resetVal="" desc="Channel activation status. Bit i is associated to channel i. Software reads this field to get information on all actively pending channels (either in pending or in the data transfer engine)." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL0" address="0x40101080" bitWidth="32" desc="DMA channel 0 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL1" address="0x40101084" bitWidth="32" desc="DMA channel 1 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL2" address="0x40101088" bitWidth="32" desc="DMA channel 2 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL3" address="0x4010108C" bitWidth="32" desc="DMA channel 3 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL4" address="0x40101090" bitWidth="32" desc="DMA channel 4 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL5" address="0x40101094" bitWidth="32" desc="DMA channel 5 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL6" address="0x40101098" bitWidth="32" desc="DMA channel 6 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL7" address="0x4010109C" bitWidth="32" desc="DMA channel 7 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL8" address="0x401010A0" bitWidth="32" desc="DMA channel 8 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL9" address="0x401010A4" bitWidth="32" desc="DMA channel 9 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL10" address="0x401010A8" bitWidth="32" desc="DMA channel 10 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL11" address="0x401010AC" bitWidth="32" desc="DMA channel 11 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL12" address="0x401010B0" bitWidth="32" desc="DMA channel 12 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL13" address="0x401010B4" bitWidth="32" desc="DMA channel 13 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL14" address="0x401010B8" bitWidth="32" desc="DMA channel 14 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL15" address="0x401010BC" bitWidth="32" desc="DMA channel 15 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL16" address="0x401010C0" bitWidth="32" desc="DMA channel 16 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL17" address="0x401010C4" bitWidth="32" desc="DMA channel 17 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL18" address="0x401010C8" bitWidth="32" desc="DMA channel 18 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL19" address="0x401010CC" bitWidth="32" desc="DMA channel 19 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL20" address="0x401010D0" bitWidth="32" desc="DMA channel 20 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL21" address="0x401010D4" bitWidth="32" desc="DMA channel 21 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL22" address="0x401010D8" bitWidth="32" desc="DMA channel 22 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL23" address="0x401010DC" bitWidth="32" desc="DMA channel 23 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL24" address="0x401010E0" bitWidth="32" desc="DMA channel 24 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL25" address="0x401010E4" bitWidth="32" desc="DMA channel 25 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL26" address="0x401010E8" bitWidth="32" desc="DMA channel 26 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL27" address="0x401010EC" bitWidth="32" desc="DMA channel 27 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL28" address="0x401010F0" bitWidth="32" desc="DMA channel 28 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL29" address="0x401010F4" bitWidth="32" desc="DMA channel 29 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL30" address="0x401010F8" bitWidth="32" desc="DMA channel 30 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_CH_CTL31" address="0x401010FC" bitWidth="31" desc="DMA channel 31 control register" hidden="false">
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="Channel enable control." hidden="false">
        <value name="Disabled" value="0" desc="Channel is currently disabled." />
        <value name="Enabled" value="1" desc="Channel is currently enabled." />
      </field>
      <field name="PING_PONG" from="30" to="30" access="RW" resetVal="" desc="Identifies the descriptor structure that is currently in use by the DMA controller." hidden="false">
        <value name="DESCR0" value="0" desc="Descriptor 0 (PING) is currently in use." />
        <value name="DESCR1" value="1" desc="Descriptor 1 (PONG) is currently in use." />
      </field>
      <field name="PRIO" from="29" to="28" access="RW" resetVal="" desc="Channel priority. Priority can be 0,1,2 or 3. 0 is the highest." hidden="false" />
    </register>
    <register name="DMAC_INTR" address="0x401017F0" bitWidth="32" desc="Interrupt register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Set to '1', when event is detected. Write INTR field with '1', to clear bit. Write INTR_SET field with '1', to set bit." hidden="false" />
    </register>
    <register name="DMAC_INTR_SET" address="0x401017F4" bitWidth="32" desc="Interrupt set register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Write INTR_SET field with '1' to set corresponding INTR field (a write of '0' has no effect)." hidden="false" />
    </register>
    <register name="DMAC_INTR_MASK" address="0x401017F8" bitWidth="32" desc="Interrupt mask register" hidden="false">
      <field name="CH" from="31" to="0" access="RW" resetVal="" desc="Mask for corresponding field in INTR register." hidden="false" />
    </register>
    <register name="DMAC_INTR_MASKED" address="0x401017FC" bitWidth="32" desc="Interrupt masked register" hidden="false">
      <field name="CH" from="31" to="0" access="R" resetVal="" desc="Bitwise AND between the interrupt reguest (INTR) and mask (INTR_MASK) registers." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_SRC" address="0x40101800" bitWidth="32" desc="Descriptor 0 source address location for channel 0" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_DST" address="0x40101804" bitWidth="32" desc="Descriptor 0 destination address location for channel 0" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PING_CTL" address="0x40101808" bitWidth="32" desc="Descriptor 0 control register for channel 0" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR0_PING_STATUS" address="0x4010180C" bitWidth="32" desc="Descriptor 0 status register for channel 0" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_SRC" address="0x40101810" bitWidth="32" desc="Descriptor 1 source address location for channel 0" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_DST" address="0x40101814" bitWidth="32" desc="Descriptor 1 destination address location for channel 0" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR0_PONG_CTL" address="0x40101818" bitWidth="32" desc="Descriptor 1 control register for channel 0" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR0_PONG_STATUS" address="0x4010181C" bitWidth="32" desc="Descriptor 1 status register for channel 0" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_SRC" address="0x40101820" bitWidth="32" desc="Descriptor 0 source address location for channel 1" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_DST" address="0x40101824" bitWidth="32" desc="Descriptor 0 destination address location for channel 1" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PING_CTL" address="0x40101828" bitWidth="32" desc="Descriptor 0 control register for channel 1" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR1_PING_STATUS" address="0x4010182C" bitWidth="32" desc="Descriptor 0 status register for channel 1" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_SRC" address="0x40101830" bitWidth="32" desc="Descriptor 1 source address location for channel 1" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_DST" address="0x40101834" bitWidth="32" desc="Descriptor 1 destination address location for channel 1" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR1_PONG_CTL" address="0x40101838" bitWidth="32" desc="Descriptor 1 control register for channel 1" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR1_PONG_STATUS" address="0x4010183C" bitWidth="32" desc="Descriptor 1 status register for channel 1" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_SRC" address="0x40101840" bitWidth="32" desc="Descriptor 0 source address location for channel 2" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_DST" address="0x40101844" bitWidth="32" desc="Descriptor 0 destination address location for channel 2" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PING_CTL" address="0x40101848" bitWidth="32" desc="Descriptor 0 control register for channel 2" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR2_PING_STATUS" address="0x4010184C" bitWidth="32" desc="Descriptor 0 status register for channel 2" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_SRC" address="0x40101850" bitWidth="32" desc="Descriptor 1 source address location for channel 2" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_DST" address="0x40101854" bitWidth="32" desc="Descriptor 1 destination address location for channel 2" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR2_PONG_CTL" address="0x40101858" bitWidth="32" desc="Descriptor 1 control register for channel 2" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR2_PONG_STATUS" address="0x4010185C" bitWidth="32" desc="Descriptor 1 status register for channel 2" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_SRC" address="0x40101860" bitWidth="32" desc="Descriptor 0 source address location for channel 3" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_DST" address="0x40101864" bitWidth="32" desc="Descriptor 0 destination address location for channel 3" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PING_CTL" address="0x40101868" bitWidth="32" desc="Descriptor 0 control register for channel 3" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR3_PING_STATUS" address="0x4010186C" bitWidth="32" desc="Descriptor 0 status register for channel 3" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_SRC" address="0x40101870" bitWidth="32" desc="Descriptor 1 source address location for channel 3" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_DST" address="0x40101874" bitWidth="32" desc="Descriptor 1 destination address location for channel 3" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR3_PONG_CTL" address="0x40101878" bitWidth="32" desc="Descriptor 1 control register for channel 3" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR3_PONG_STATUS" address="0x4010187C" bitWidth="32" desc="Descriptor 1 status register for channel 3" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_SRC" address="0x40101880" bitWidth="32" desc="Descriptor 0 source address location for channel 4" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_DST" address="0x40101884" bitWidth="32" desc="Descriptor 0 destination address location for channel 4" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PING_CTL" address="0x40101888" bitWidth="32" desc="Descriptor 0 control register for channel 4" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR4_PING_STATUS" address="0x4010188C" bitWidth="32" desc="Descriptor 0 status register for channel 4" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_SRC" address="0x40101890" bitWidth="32" desc="Descriptor 1 source address location for channel 4" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_DST" address="0x40101894" bitWidth="32" desc="Descriptor 1 destination address location for channel 4" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR4_PONG_CTL" address="0x40101898" bitWidth="32" desc="Descriptor 1 control register for channel 4" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR4_PONG_STATUS" address="0x4010189C" bitWidth="32" desc="Descriptor 1 status register for channel 4" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_SRC" address="0x401018A0" bitWidth="32" desc="Descriptor 0 source address location for channel 5" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_DST" address="0x401018A4" bitWidth="32" desc="Descriptor 0 destination address location for channel 5" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PING_CTL" address="0x401018A8" bitWidth="32" desc="Descriptor 0 control register for channel 5" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR5_PING_STATUS" address="0x401018AC" bitWidth="32" desc="Descriptor 0 status register for channel 5" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_SRC" address="0x401018B0" bitWidth="32" desc="Descriptor 1 source address location for channel 5" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_DST" address="0x401018B4" bitWidth="32" desc="Descriptor 1 destination address location for channel 5" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR5_PONG_CTL" address="0x401018B8" bitWidth="32" desc="Descriptor 1 control register for channel 5" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR5_PONG_STATUS" address="0x401018BC" bitWidth="32" desc="Descriptor 1 status register for channel 5" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_SRC" address="0x401018C0" bitWidth="32" desc="Descriptor 0 source address location for channel 6" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_DST" address="0x401018C4" bitWidth="32" desc="Descriptor 0 destination address location for channel 6" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PING_CTL" address="0x401018C8" bitWidth="32" desc="Descriptor 0 control register for channel 6" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR6_PING_STATUS" address="0x401018CC" bitWidth="32" desc="Descriptor 0 status register for channel 6" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_SRC" address="0x401018D0" bitWidth="32" desc="Descriptor 1 source address location for channel 6" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_DST" address="0x401018D4" bitWidth="32" desc="Descriptor 1 destination address location for channel 6" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR6_PONG_CTL" address="0x401018D8" bitWidth="32" desc="Descriptor 1 control register for channel 6" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR6_PONG_STATUS" address="0x401018DC" bitWidth="32" desc="Descriptor 1 status register for channel 6" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_SRC" address="0x401018E0" bitWidth="32" desc="Descriptor 0 source address location for channel 7" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_DST" address="0x401018E4" bitWidth="32" desc="Descriptor 0 destination address location for channel 7" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PING_CTL" address="0x401018E8" bitWidth="32" desc="Descriptor 0 control register for channel 7" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR7_PING_STATUS" address="0x401018EC" bitWidth="32" desc="Descriptor 0 status register for channel 7" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_SRC" address="0x401018F0" bitWidth="32" desc="Descriptor 1 source address location for channel 7" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_DST" address="0x401018F4" bitWidth="32" desc="Descriptor 1 destination address location for channel 7" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR7_PONG_CTL" address="0x401018F8" bitWidth="32" desc="Descriptor 1 control register for channel 7" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR7_PONG_STATUS" address="0x401018FC" bitWidth="32" desc="Descriptor 1 status register for channel 7" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PING_SRC" address="0x40101900" bitWidth="32" desc="Descriptor 0 source address location for channel 8" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PING_DST" address="0x40101904" bitWidth="32" desc="Descriptor 0 destination address location for channel 8" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PING_CTL" address="0x40101908" bitWidth="32" desc="Descriptor 0 control register for channel 8" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR8_PING_STATUS" address="0x4010190C" bitWidth="32" desc="Descriptor 0 status register for channel 8" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PONG_SRC" address="0x40101910" bitWidth="32" desc="Descriptor 1 source address location for channel 8" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PONG_DST" address="0x40101914" bitWidth="32" desc="Descriptor 1 destination address location for channel 8" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR8_PONG_CTL" address="0x40101918" bitWidth="32" desc="Descriptor 1 control register for channel 8" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR8_PONG_STATUS" address="0x4010191C" bitWidth="32" desc="Descriptor 1 status register for channel 8" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PING_SRC" address="0x40101920" bitWidth="32" desc="Descriptor 0 source address location for channel 9" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PING_DST" address="0x40101924" bitWidth="32" desc="Descriptor 0 destination address location for channel 9" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PING_CTL" address="0x40101928" bitWidth="32" desc="Descriptor 0 control register for channel 9" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR9_PING_STATUS" address="0x4010192C" bitWidth="32" desc="Descriptor 0 status register for channel 9" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PONG_SRC" address="0x40101930" bitWidth="32" desc="Descriptor 1 source address location for channel 9" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PONG_DST" address="0x40101934" bitWidth="32" desc="Descriptor 1 destination address location for channel 9" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR9_PONG_CTL" address="0x40101938" bitWidth="32" desc="Descriptor 1 control register for channel 9" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR9_PONG_STATUS" address="0x4010193C" bitWidth="32" desc="Descriptor 1 status register for channel 9" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PING_SRC" address="0x40101940" bitWidth="32" desc="Descriptor 0 source address location for channel 10" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PING_DST" address="0x40101944" bitWidth="32" desc="Descriptor 0 destination address location for channel 10" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PING_CTL" address="0x40101948" bitWidth="32" desc="Descriptor 0 control register for channel 10" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR10_PING_STATUS" address="0x4010194C" bitWidth="32" desc="Descriptor 0 status register for channel 10" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PONG_SRC" address="0x40101950" bitWidth="32" desc="Descriptor 1 source address location for channel 10" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PONG_DST" address="0x40101954" bitWidth="32" desc="Descriptor 1 destination address location for channel 10" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR10_PONG_CTL" address="0x40101958" bitWidth="32" desc="Descriptor 1 control register for channel 10" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR10_PONG_STATUS" address="0x4010195C" bitWidth="32" desc="Descriptor 1 status register for channel 10" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PING_SRC" address="0x40101960" bitWidth="32" desc="Descriptor 0 source address location for channel 11" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PING_DST" address="0x40101964" bitWidth="32" desc="Descriptor 0 destination address location for channel 11" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PING_CTL" address="0x40101968" bitWidth="32" desc="Descriptor 0 control register for channel 11" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR11_PING_STATUS" address="0x4010196C" bitWidth="32" desc="Descriptor 0 status register for channel 11" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PONG_SRC" address="0x40101970" bitWidth="32" desc="Descriptor 1 source address location for channel 11" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PONG_DST" address="0x40101974" bitWidth="32" desc="Descriptor 1 destination address location for channel 11" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR11_PONG_CTL" address="0x40101978" bitWidth="32" desc="Descriptor 1 control register for channel 11" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR11_PONG_STATUS" address="0x4010197C" bitWidth="32" desc="Descriptor 1 status register for channel 11" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PING_SRC" address="0x40101980" bitWidth="32" desc="Descriptor 0 source address location for channel 12" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PING_DST" address="0x40101984" bitWidth="32" desc="Descriptor 0 destination address location for channel 12" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PING_CTL" address="0x40101988" bitWidth="32" desc="Descriptor 0 control register for channel 12" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR12_PING_STATUS" address="0x4010198C" bitWidth="32" desc="Descriptor 0 status register for channel 12" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PONG_SRC" address="0x40101990" bitWidth="32" desc="Descriptor 1 source address location for channel 12" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PONG_DST" address="0x40101994" bitWidth="32" desc="Descriptor 1 destination address location for channel 12" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR12_PONG_CTL" address="0x40101998" bitWidth="32" desc="Descriptor 1 control register for channel 12" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR12_PONG_STATUS" address="0x4010199C" bitWidth="32" desc="Descriptor 1 status register for channel 12" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PING_SRC" address="0x401019A0" bitWidth="32" desc="Descriptor 0 source address location for channel 13" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PING_DST" address="0x401019A4" bitWidth="32" desc="Descriptor 0 destination address location for channel 13" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PING_CTL" address="0x401019A8" bitWidth="32" desc="Descriptor 0 control register for channel 13" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR13_PING_STATUS" address="0x401019AC" bitWidth="32" desc="Descriptor 0 status register for channel 13" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PONG_SRC" address="0x401019B0" bitWidth="32" desc="Descriptor 1 source address location for channel 13" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PONG_DST" address="0x401019B4" bitWidth="32" desc="Descriptor 1 destination address location for channel 13" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR13_PONG_CTL" address="0x401019B8" bitWidth="32" desc="Descriptor 1 control register for channel 13" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR13_PONG_STATUS" address="0x401019BC" bitWidth="32" desc="Descriptor 1 status register for channel 13" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PING_SRC" address="0x401019C0" bitWidth="32" desc="Descriptor 0 source address location for channel 14" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PING_DST" address="0x401019C4" bitWidth="32" desc="Descriptor 0 destination address location for channel 14" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PING_CTL" address="0x401019C8" bitWidth="32" desc="Descriptor 0 control register for channel 14" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR14_PING_STATUS" address="0x401019CC" bitWidth="32" desc="Descriptor 0 status register for channel 14" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PONG_SRC" address="0x401019D0" bitWidth="32" desc="Descriptor 1 source address location for channel 14" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PONG_DST" address="0x401019D4" bitWidth="32" desc="Descriptor 1 destination address location for channel 14" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR14_PONG_CTL" address="0x401019D8" bitWidth="32" desc="Descriptor 1 control register for channel 14" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR14_PONG_STATUS" address="0x401019DC" bitWidth="32" desc="Descriptor 1 status register for channel 14" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PING_SRC" address="0x401019E0" bitWidth="32" desc="Descriptor 0 source address location for channel 15" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PING_DST" address="0x401019E4" bitWidth="32" desc="Descriptor 0 destination address location for channel 15" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PING_CTL" address="0x401019E8" bitWidth="32" desc="Descriptor 0 control register for channel 15" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR15_PING_STATUS" address="0x401019EC" bitWidth="32" desc="Descriptor 0 status register for channel 15" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PONG_SRC" address="0x401019F0" bitWidth="32" desc="Descriptor 1 source address location for channel 15" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PONG_DST" address="0x401019F4" bitWidth="32" desc="Descriptor 1 destination address location for channel 15" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR15_PONG_CTL" address="0x401019F8" bitWidth="32" desc="Descriptor 1 control register for channel 15" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR15_PONG_STATUS" address="0x401019FC" bitWidth="32" desc="Descriptor 1 status register for channel 15" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PING_SRC" address="0x40101A00" bitWidth="32" desc="Descriptor 0 source address location for channel 16" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PING_DST" address="0x40101A04" bitWidth="32" desc="Descriptor 0 destination address location for channel 16" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PING_CTL" address="0x40101A08" bitWidth="32" desc="Descriptor 0 control register for channel 16" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR16_PING_STATUS" address="0x40101A0C" bitWidth="32" desc="Descriptor 0 status register for channel 16" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PONG_SRC" address="0x40101A10" bitWidth="32" desc="Descriptor 1 source address location for channel 16" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PONG_DST" address="0x40101A14" bitWidth="32" desc="Descriptor 1 destination address location for channel 16" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR16_PONG_CTL" address="0x40101A18" bitWidth="32" desc="Descriptor 1 control register for channel 16" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR16_PONG_STATUS" address="0x40101A1C" bitWidth="32" desc="Descriptor 1 status register for channel 16" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PING_SRC" address="0x40101A20" bitWidth="32" desc="Descriptor 0 source address location for channel 17" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PING_DST" address="0x40101A24" bitWidth="32" desc="Descriptor 0 destination address location for channel 17" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PING_CTL" address="0x40101A28" bitWidth="32" desc="Descriptor 0 control register for channel 17" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR17_PING_STATUS" address="0x40101A2C" bitWidth="32" desc="Descriptor 0 status register for channel 17" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PONG_SRC" address="0x40101A30" bitWidth="32" desc="Descriptor 1 source address location for channel 17" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PONG_DST" address="0x40101A34" bitWidth="32" desc="Descriptor 1 destination address location for channel 17" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR17_PONG_CTL" address="0x40101A38" bitWidth="32" desc="Descriptor 1 control register for channel 17" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR17_PONG_STATUS" address="0x40101A3C" bitWidth="32" desc="Descriptor 1 status register for channel 17" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PING_SRC" address="0x40101A40" bitWidth="32" desc="Descriptor 0 source address location for channel 18" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PING_DST" address="0x40101A44" bitWidth="32" desc="Descriptor 0 destination address location for channel 18" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PING_CTL" address="0x40101A48" bitWidth="32" desc="Descriptor 0 control register for channel 18" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR18_PING_STATUS" address="0x40101A4C" bitWidth="32" desc="Descriptor 0 status register for channel 18" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PONG_SRC" address="0x40101A50" bitWidth="32" desc="Descriptor 1 source address location for channel 18" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PONG_DST" address="0x40101A54" bitWidth="32" desc="Descriptor 1 destination address location for channel 18" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR18_PONG_CTL" address="0x40101A58" bitWidth="32" desc="Descriptor 1 control register for channel 18" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR18_PONG_STATUS" address="0x40101A5C" bitWidth="32" desc="Descriptor 1 status register for channel 18" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PING_SRC" address="0x40101A60" bitWidth="32" desc="Descriptor 0 source address location for channel 19" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PING_DST" address="0x40101A64" bitWidth="32" desc="Descriptor 0 destination address location for channel 19" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PING_CTL" address="0x40101A68" bitWidth="32" desc="Descriptor 0 control register for channel 19" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR19_PING_STATUS" address="0x40101A6C" bitWidth="32" desc="Descriptor 0 status register for channel 19" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PONG_SRC" address="0x40101A70" bitWidth="32" desc="Descriptor 1 source address location for channel 19" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PONG_DST" address="0x40101A74" bitWidth="32" desc="Descriptor 1 destination address location for channel 19" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR19_PONG_CTL" address="0x40101A78" bitWidth="32" desc="Descriptor 1 control register for channel 19" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR19_PONG_STATUS" address="0x40101A7C" bitWidth="32" desc="Descriptor 1 status register for channel 19" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PING_SRC" address="0x40101A80" bitWidth="32" desc="Descriptor 0 source address location for channel 20" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PING_DST" address="0x40101A84" bitWidth="32" desc="Descriptor 0 destination address location for channel 20" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PING_CTL" address="0x40101A88" bitWidth="32" desc="Descriptor 0 control register for channel 20" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR20_PING_STATUS" address="0x40101A8C" bitWidth="32" desc="Descriptor 0 status register for channel 20" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PONG_SRC" address="0x40101A90" bitWidth="32" desc="Descriptor 1 source address location for channel 20" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PONG_DST" address="0x40101A94" bitWidth="32" desc="Descriptor 1 destination address location for channel 20" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR20_PONG_CTL" address="0x40101A98" bitWidth="32" desc="Descriptor 1 control register for channel 20" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR20_PONG_STATUS" address="0x40101A9C" bitWidth="32" desc="Descriptor 1 status register for channel 20" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PING_SRC" address="0x40101AA0" bitWidth="32" desc="Descriptor 0 source address location for channel 21" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PING_DST" address="0x40101AA4" bitWidth="32" desc="Descriptor 0 destination address location for channel 21" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PING_CTL" address="0x40101AA8" bitWidth="32" desc="Descriptor 0 control register for channel 21" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR21_PING_STATUS" address="0x40101AAC" bitWidth="32" desc="Descriptor 0 status register for channel 21" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PONG_SRC" address="0x40101AB0" bitWidth="32" desc="Descriptor 1 source address location for channel 21" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PONG_DST" address="0x40101AB4" bitWidth="32" desc="Descriptor 1 destination address location for channel 21" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR21_PONG_CTL" address="0x40101AB8" bitWidth="32" desc="Descriptor 1 control register for channel 21" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR21_PONG_STATUS" address="0x40101ABC" bitWidth="32" desc="Descriptor 1 status register for channel 21" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PING_SRC" address="0x40101AC0" bitWidth="32" desc="Descriptor 0 source address location for channel 22" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PING_DST" address="0x40101AC4" bitWidth="32" desc="Descriptor 0 destination address location for channel 22" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PING_CTL" address="0x40101AC8" bitWidth="32" desc="Descriptor 0 control register for channel 22" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR22_PING_STATUS" address="0x40101ACC" bitWidth="32" desc="Descriptor 0 status register for channel 22" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PONG_SRC" address="0x40101AD0" bitWidth="32" desc="Descriptor 1 source address location for channel 22" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PONG_DST" address="0x40101AD4" bitWidth="32" desc="Descriptor 1 destination address location for channel 22" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR22_PONG_CTL" address="0x40101AD8" bitWidth="32" desc="Descriptor 1 control register for channel 22" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR22_PONG_STATUS" address="0x40101ADC" bitWidth="32" desc="Descriptor 1 status register for channel 22" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PING_SRC" address="0x40101AE0" bitWidth="32" desc="Descriptor 0 source address location for channel 23" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PING_DST" address="0x40101AE4" bitWidth="32" desc="Descriptor 0 destination address location for channel 23" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PING_CTL" address="0x40101AE8" bitWidth="32" desc="Descriptor 0 control register for channel 23" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR23_PING_STATUS" address="0x40101AEC" bitWidth="32" desc="Descriptor 0 status register for channel 23" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PONG_SRC" address="0x40101AF0" bitWidth="32" desc="Descriptor 1 source address location for channel 23" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PONG_DST" address="0x40101AF4" bitWidth="32" desc="Descriptor 1 destination address location for channel 23" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR23_PONG_CTL" address="0x40101AF8" bitWidth="32" desc="Descriptor 1 control register for channel 23" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR23_PONG_STATUS" address="0x40101AFC" bitWidth="32" desc="Descriptor 1 status register for channel 23" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PING_SRC" address="0x40101B00" bitWidth="32" desc="Descriptor 0 source address location for channel 24" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PING_DST" address="0x40101B04" bitWidth="32" desc="Descriptor 0 destination address location for channel 24" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PING_CTL" address="0x40101B08" bitWidth="32" desc="Descriptor 0 control register for channel 24" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR24_PING_STATUS" address="0x40101B0C" bitWidth="32" desc="Descriptor 0 status register for channel 24" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PONG_SRC" address="0x40101B10" bitWidth="32" desc="Descriptor 1 source address location for channel 24" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PONG_DST" address="0x40101B14" bitWidth="32" desc="Descriptor 1 destination address location for channel 24" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR24_PONG_CTL" address="0x40101B18" bitWidth="32" desc="Descriptor 1 control register for channel 24" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR24_PONG_STATUS" address="0x40101B1C" bitWidth="32" desc="Descriptor 1 status register for channel 24" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PING_SRC" address="0x40101B20" bitWidth="32" desc="Descriptor 0 source address location for channel 25" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PING_DST" address="0x40101B24" bitWidth="32" desc="Descriptor 0 destination address location for channel 25" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PING_CTL" address="0x40101B28" bitWidth="32" desc="Descriptor 0 control register for channel 25" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR25_PING_STATUS" address="0x40101B2C" bitWidth="32" desc="Descriptor 0 status register for channel 25" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PONG_SRC" address="0x40101B30" bitWidth="32" desc="Descriptor 1 source address location for channel 25" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PONG_DST" address="0x40101B34" bitWidth="32" desc="Descriptor 1 destination address location for channel 25" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR25_PONG_CTL" address="0x40101B38" bitWidth="32" desc="Descriptor 1 control register for channel 25" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR25_PONG_STATUS" address="0x40101B3C" bitWidth="32" desc="Descriptor 1 status register for channel 25" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PING_SRC" address="0x40101B40" bitWidth="32" desc="Descriptor 0 source address location for channel 26" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PING_DST" address="0x40101B44" bitWidth="32" desc="Descriptor 0 destination address location for channel 26" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PING_CTL" address="0x40101B48" bitWidth="32" desc="Descriptor 0 control register for channel 26" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR26_PING_STATUS" address="0x40101B4C" bitWidth="32" desc="Descriptor 0 status register for channel 26" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PONG_SRC" address="0x40101B50" bitWidth="32" desc="Descriptor 1 source address location for channel 26" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PONG_DST" address="0x40101B54" bitWidth="32" desc="Descriptor 1 destination address location for channel 26" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR26_PONG_CTL" address="0x40101B58" bitWidth="32" desc="Descriptor 1 control register for channel 26" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR26_PONG_STATUS" address="0x40101B5C" bitWidth="32" desc="Descriptor 1 status register for channel 26" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PING_SRC" address="0x40101B60" bitWidth="32" desc="Descriptor 0 source address location for channel 27" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PING_DST" address="0x40101B64" bitWidth="32" desc="Descriptor 0 destination address location for channel 27" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PING_CTL" address="0x40101B68" bitWidth="32" desc="Descriptor 0 control register for channel 27" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR27_PING_STATUS" address="0x40101B6C" bitWidth="32" desc="Descriptor 0 status register for channel 27" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PONG_SRC" address="0x40101B70" bitWidth="32" desc="Descriptor 1 source address location for channel 27" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PONG_DST" address="0x40101B74" bitWidth="32" desc="Descriptor 1 destination address location for channel 27" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR27_PONG_CTL" address="0x40101B78" bitWidth="32" desc="Descriptor 1 control register for channel 27" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR27_PONG_STATUS" address="0x40101B7C" bitWidth="32" desc="Descriptor 1 status register for channel 27" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PING_SRC" address="0x40101B80" bitWidth="32" desc="Descriptor 0 source address location for channel 28" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PING_DST" address="0x40101B84" bitWidth="32" desc="Descriptor 0 destination address location for channel 28" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PING_CTL" address="0x40101B88" bitWidth="32" desc="Descriptor 0 control register for channel 28" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR28_PING_STATUS" address="0x40101B8C" bitWidth="32" desc="Descriptor 0 status register for channel 28" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PONG_SRC" address="0x40101B90" bitWidth="32" desc="Descriptor 1 source address location for channel 28" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PONG_DST" address="0x40101B94" bitWidth="32" desc="Descriptor 1 destination address location for channel 28" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR28_PONG_CTL" address="0x40101B98" bitWidth="32" desc="Descriptor 1 control register for channel 28" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR28_PONG_STATUS" address="0x40101B9C" bitWidth="32" desc="Descriptor 1 status register for channel 28" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PING_SRC" address="0x40101BA0" bitWidth="32" desc="Descriptor 0 source address location for channel 29" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PING_DST" address="0x40101BA4" bitWidth="32" desc="Descriptor 0 destination address location for channel 29" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PING_CTL" address="0x40101BA8" bitWidth="32" desc="Descriptor 0 control register for channel 29" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR29_PING_STATUS" address="0x40101BAC" bitWidth="32" desc="Descriptor 0 status register for channel 29" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PONG_SRC" address="0x40101BB0" bitWidth="32" desc="Descriptor 1 source address location for channel 29" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PONG_DST" address="0x40101BB4" bitWidth="32" desc="Descriptor 1 destination address location for channel 29" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR29_PONG_CTL" address="0x40101BB8" bitWidth="32" desc="Descriptor 1 control register for channel 29" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR29_PONG_STATUS" address="0x40101BBC" bitWidth="32" desc="Descriptor 1 status register for channel 29" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PING_SRC" address="0x40101BC0" bitWidth="32" desc="Descriptor 0 source address location for channel 30" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PING_DST" address="0x40101BC4" bitWidth="32" desc="Descriptor 0 destination address location for channel 30" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PING_CTL" address="0x40101BC8" bitWidth="32" desc="Descriptor 0 control register for channel 30" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR30_PING_STATUS" address="0x40101BCC" bitWidth="32" desc="Descriptor 0 status register for channel 30" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PONG_SRC" address="0x40101BD0" bitWidth="32" desc="Descriptor 1 source address location for channel 30" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PONG_DST" address="0x40101BD4" bitWidth="32" desc="Descriptor 1 destination address location for channel 30" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR30_PONG_CTL" address="0x40101BD8" bitWidth="32" desc="Descriptor 1 control register for channel 30" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR30_PONG_STATUS" address="0x40101BDC" bitWidth="32" desc="Descriptor 1 status register for channel 30" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PING_SRC" address="0x40101BE0" bitWidth="32" desc="Descriptor 0 source address location for channel 31" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PING_DST" address="0x40101BE4" bitWidth="32" desc="Descriptor 0 destination address location for channel 31" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PING_CTL" address="0x40101BE8" bitWidth="32" desc="Descriptor 0 control register for channel 31" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR31_PING_STATUS" address="0x40101BEC" bitWidth="32" desc="Descriptor 0 status register for channel 31" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PONG_SRC" address="0x40101BF0" bitWidth="32" desc="Descriptor 1 source address location for channel 31" hidden="false">
      <field name="SRC" from="31" to="0" access="RW" resetVal="" desc="Source address." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PONG_DST" address="0x40101BF4" bitWidth="32" desc="Descriptor 1 destination address location for channel 31" hidden="false">
      <field name="DST" from="31" to="0" access="RW" resetVal="" desc="Destination address." hidden="false" />
    </register>
    <register name="DMAC_DESCR31_PONG_CTL" address="0x40101BF8" bitWidth="32" desc="Descriptor 1 control register for channel 31" hidden="false">
      <field name="DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Number of data elements this descriptor transfers. A value of N results in a transfer of N+1 data elements." hidden="false" />
      <field name="DATA_SIZE" from="17" to="16" access="RW" resetVal="" desc="Specifies the data element size." hidden="false">
        <value name="BYTE" value="00" desc="1 byte." />
        <value name="HALFWORD" value="01" desc="Halfword (2 bytes)." />
        <value name="WORD" value="10" desc="Word (4 bytes)." />
      </field>
      <field name="DST_TRANSFER_SIZE" from="20" to="20" access="RW" resetVal="" desc="Specifies the bus transfer size to the destination location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="DST_ADDR_INCR" from="21" to="21" access="RW" resetVal="" desc="Specifies whether the destination address is incremented by the DST_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_DST_ADDR" value="1" desc="Increment the destination address." />
      </field>
      <field name="SRC_TRANSFER_SIZE" from="22" to="22" access="RW" resetVal="" desc="Specifies the bus transfer size to the source location." hidden="false">
        <value name="DATA_SIZE" value="0" desc="As specified by DATA_SIZE field." />
        <value name="WORD" value="1" desc="Word (4 bytes)." />
      </field>
      <field name="SRC_ADDR_INCR" from="23" to="23" access="RW" resetVal="" desc="Specifies whether the source address is incremented by the SRC_TRANSFER_SIZE after the transfer of each data element." hidden="false">
        <value name="INC_NONE" value="0" desc="No address increment." />
        <value name="INC_SRC_ADDR" value="1" desc="Increment the source address." />
      </field>
      <field name="WAIT_FOR_DEACT" from="25" to="24" access="RW" resetVal="" desc="Specifies whether the data transfer engine should wait for the channel to be deactivated; i.e. the selected system trigger is not active. This field is used to synchronize the controller's data transfer(s) with the agent that generated the trigger. This field is ONLY used at the completion of an opcode. E.g., a FIFO indicates that it is empty and it needs a new data sample. The agent removes the trigger ONLY when the data sample has been written by the transfer engine AND received by the agent.  Furthermore, the agent's trigger may be delayed by a few cycles before it reaches the DW/DMA controller. This field is used for level sensitive trigger, which reflect state (pulse sensitive triggers should have this field set to '0'). The wait cycles incurred by this field reduce DW/DMA controller performance." hidden="false">
        <value name="PULSE" value="00" desc="Do not wait for de-activation (for pulse sensitive triggers)." />
        <value name="LEVEL_FOUR" value="01" desc="Wait for up to 4 cycles." />
        <value name="LEVEL_EIGHT" value="10" desc="Wait for up to 8 cycles." />
        <value name="LEVEL_UNKNOWN" value="11" desc="Wait indefinitely. This option may result in DMA controller lockup if the system trigger is not de-activated by the source agent." />
      </field>
      <field name="INV_DESCR" from="26" to="26" access="RW" resetVal="" desc="If set, the VALID bit of the descriptor's STATUS word is set to '0' on completion of the current descriptor structure." hidden="false" />
      <field name="SET_CAUSE" from="27" to="27" access="RW" resetVal="" desc="If set, the interrupt bit of the channel is set to '1' on completion of the current descriptor structure." hidden="false" />
      <field name="PREEMPTABLE" from="28" to="28" access="RW" resetVal="" desc="If set, the transfer is preemptable. Multi data element transfers are constructed out of multiple single data element load (from the source location) and store (to the destination location) sequences. This field allows higher priority activated channels to preempt the current transfer in between these atomic (load, store) sequences. Preemption will NOT deactivate the current channel. As a result, after completion of a higher priority activated channel, the current channel is rescheduled." hidden="false" />
      <field name="FLIPPING" from="29" to="29" access="RW" resetVal="" desc="If set, on completion of the current descriptor structure, the current descriptor identifier is flipped/inverted. In DMA mode, descriptor list transfer, flipping of the current descriptor identifier can be used to construct a linked list of descriptor structures." hidden="false" />
      <field name="OPCODE" from="31" to="30" access="RW" resetVal="" desc="Specifies how the DMA reacts to a trigger event." hidden="false">
        <value name="SINGLE_DATA_ELEMENT" value="00" desc="A single trigger initiates a single data element transfer. This opcode specifies a transfer of a single data element. The current descriptor is completed when the amount of transferred single data elements equals the programmed buffer size (DATA_NR+1)." />
        <value name="ENTIRE_DESCRIPTOR" value="01" desc="A single trigger initiates an entire descriptor transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure. The current descriptor is completed when its data transfer is completed." />
        <value name="ENTIRE_DESCRIPTOR_CHAIN" value="10" desc="A single trigger initiates a descriptor list transfer. This opcode specifies a transfer of DATA_NR+1 data elements as specified by the current descriptor structure and by successive valid descriptors. The current descriptor is completed when its data transfer is completed. This OPCODE relies on FLIPPING to be set to '1', such that the CHi_CTL.PING_PONG field is flipped/inverted and the successive descriptor is used. This continues for as long as the successive descriptor is valid. Note that as the HW is using the PING/PONG descriptor, the SW can prepare the alternate PONG/PING descriptor. The interrupt mechanism is used by HW to convey to the SW that the current descriptor is completed (and can be prepared for a successive transfer)." />
      </field>
    </register>
    <register name="DMAC_DESCR31_PONG_STATUS" address="0x40101BFC" bitWidth="32" desc="Descriptor 1 status register for channel 31" hidden="false">
      <field name="VALID" from="31" to="31" access="RW" resetVal="" desc="Descriptor validity status. Hardware set this field to '0' when a descriptor is done, but only if CONTROL.INV_DESCR is '1'. Software sets this field to '1' when a descriptor is initialized." hidden="false">
        <value name="INVALID" value="0" desc="Invalid, cannot be used for a data transfer. An attempt to use this descriptor for a data transfer will result in an INVALID_DESCR response code and the interrupt cause bit is set to '1'." />
        <value name="VALID" value="1" desc="Valid." />
      </field>
      <field name="RESONSE" from="18" to="16" access="RW" resetVal="" desc="Response code (the first two codes NO_ERROR and DONE are the result of normal behavior, the other codes are the result of erroneous behavior)." hidden="false">
        <value name="NO_ERROR" value="000" desc="No error. Setting this response does NOT set the interrupt bit to '1'. STATUS.VALID is NOT affected. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is not updated. This response is used for an unused or not completed descriptor. Software should set the RESPONSE field to '0'/NO_ERROR during descriptor initialization." />
        <value name="DONE" value="001" desc="Descriptor is done (without errors). Setting this response sets the interrupt cause bit to '1' if CONTROL.SET_CAUSE is '1'. STATUS.VALID is set to '0' if CONTROL.INV_DESCR is '1'. CHx_CTL.ENABLED is NOT affected. CHx_CTL.PING_PONG is updated if CONTROL.FLIPPING is '1'." />
        <value name="SRC_BUS_ERROR" value="010" desc="Bus error while loading data from the source location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_BUS_ERROR" value="011" desc="Bus error while storing data to the destination location. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '1'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="SRC_MISAL" value="100" desc="Misalignment of source address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="DST_MISAL" value="101" desc="Misalignment of destination address. This occurs on a 16-bit bus transfer that is not 2-byte aligned or on a 32-bit bus transfer that is not 4-byte aligned. Setting this response sets the interrupt cause bit to '1'. STATUS.VALID is set '0'. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
        <value name="INVALID" value="110" desc="Invalid descriptor (STATUS.VALID is '0'). This occurs when an activated channel has an invalid descriptor. CHx_CTL.ENABLED is set to '0'. CHx_CTL.PING_PONG is not updated (it identifies the descriptor that caused the error)." />
      </field>
      <field name="CURR_DATA_NR" from="15" to="0" access="RW" resetVal="" desc="Specifies the index of the current data transfer. This value increases from 0 to CONTROL.DATA_NR. HW sets this field: &#xA; - When a descriptor is done (RESPONSE is DONE), the field is set to '0' when PING_CTL.INV_DESCR is '0' and the field is set to PING_CTL.DATA_NR when PING_CTL.INV_DESCR is '1'.                                                                 &#xA; - When a descriptor is not done (RESPONSE is NO_ERROR), the field reflects the progress of a data transfer.                                                                 &#xA; - In case of erroneous behavior (RESPONSE is neither DONE or NO_ERROR), the field is not updated, but keeps its value to ease debugging.                                                                 &#xA; HW only modifies this field for an active descriptor (STATUS.VALID to be '1'). At descriptor initialization, SW should set this field to '0'.                                                                 &#xA; This field allows software to read the progress of the data transfer. Note that SRC.ADDR and DST.ADDR represent base addresses and are not modified during data transfer. However, STATUS.CURR_DATA_NR is modified during data transfer and provides an offset wrt. the base addresses." hidden="false" />
    </register>
  </block>
  <block name="UART_1" BASE="0x0" SIZE="0x0" desc="UART" visible="true" hidden="false">
    <block name="IntClock" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VirtualMux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="BUART" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <register name="RX_UART_1_RX_ADDRESS1" address="0x400F0022" bitWidth="8" desc="RX Address1 Register" hidden="false" />
    <register name="RX_UART_1_RX_ADDRESS2" address="0x400F0032" bitWidth="8" desc="RX Address2 Register" hidden="false" />
    <register name="RX_UART_1_RX_DATA" address="0x400F0042" bitWidth="8" desc="RX Data Register" hidden="false" />
    <register name="TX_UART_1_TX_DATA" address="0x400F0044" bitWidth="8" desc="TX Data Register" hidden="false" />
    <register name="RX_UART_1_RX_STATUS" address="0x400F0062" bitWidth="8" desc="RX status register" hidden="false">
      <field name="UART_1_RX_STS_MRKSPC" from="0" to="0" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_BREAK" from="1" to="1" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_PAR_ERROR" from="2" to="2" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_STOP_ERROR" from="3" to="3" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_OVERRUN" from="4" to="4" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_FIFO_NOTEMPTY" from="5" to="5" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_RX_STS_ADDR_MATCH" from="6" to="6" access="R" resetVal="" desc="" hidden="false" />
    </register>
    <register name="TX_UART_1_TX_STATUS" address="0x400F0064" bitWidth="8" desc="TX status register" hidden="false">
      <field name="UART_1_TX_STS_COMPLETE" from="0" to="0" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_TX_STS_FIFO_EMPTY" from="1" to="1" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_TX_STS_FIFO_FULL" from="2" to="2" access="R" resetVal="" desc="" hidden="false" />
      <field name="UART_1_TX_STS_FIFO_NOT_FULL" from="3" to="3" access="R" resetVal="" desc="" hidden="false" />
    </register>
  </block>
  <block name="USBUART" BASE="0x0" SIZE="0x0" desc="USBFS" visible="true" hidden="false">
    <block name="ep3Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep1Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep4Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_5" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VirtualMux_6" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep5Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="lo_int" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="med_int" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_m0s8_usb" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="dp_int" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="high_int" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="Dm" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep2Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="Dp" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VbusValid_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_7" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_constant_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_8" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep8Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep7Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ep6Dma_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <register name="CR0" address="0x402C0020" bitWidth="32" desc="USB Control 0 Register" hidden="false">
      <field name="DEVICE_ADDRESS" from="6" to="0" access="R" resetVal="" desc="These bits specify the USB device address to which the SIE will respond. This address must be set by firmware and is specified by the USB Host with a SET ADDRESS command during USB enumeration. This value must be programmed by firmware when assigned during enumeration. It is not set automatically by the hardware." hidden="false" />
      <field name="USB_ENABLE" from="7" to="7" access="RW" resetVal="" desc="This bit enables the device to respond to USB traffic." hidden="false">
        <value name="Disabled" value="0" desc="Block responds to USB traffic." />
        <value name="Enabled" value="1" desc="Block does not respond to USB traffic." />
      </field>
    </register>
    <register name="CR1" address="0x402C0024" bitWidth="32" desc="USB Control 1 Register" hidden="false">
      <field name="REG_ENABLE" from="0" to="0" access="R" resetVal="" desc="This bit controls the operation of the internal USB regulator. For applications with supply voltages in the 5V range this bit is set high to enable the internal regulator. For device supply voltage in the 3.3V range this bit is cleared to connect the transceiver directly to the supply." hidden="false">
        <value name="Disabled" value="0" desc="Regulator for 5V is disabled." />
        <value name="Enabled" value="1" desc="Regulator for 5V is enabled." />
      </field>
      <field name="ENABLE_LOCK" from="1" to="1" access="RW" resetVal="" desc="This bit is set to turn on the automatic frequency locking of the internal oscillator to USB traffic.  Unless an external clock is being provided this bit should remain set for proper USB operation." hidden="false" />
      <field name="BUS_ACTIVITY" from="2" to="2" access="RW" resetVal="" desc="The Bus Activity bit is a stickybit that detects any non-idle USB event that has occurred on the USB bus. Once set to High by the SIE to indicate the bus activity this bit retains its logical High value until firmware clears it." hidden="false" />
      <field name="TRIM_OFFSET_MSB" from="3" to="3" access="RW" resetVal="" desc="This bit enables trim bit[7]." hidden="false" />
    </register>
    <register name="SIE_EP_INT_EN" address="0x402C0028" bitWidth="32" desc="USB SIE Data Endpoints Interrupt Enable Register" hidden="false">
      <field name="EP1_INTR_EN" from="0" to="0" access="RW" resetVal="" desc="Enables interrupt for EP1." hidden="false" />
      <field name="EP2_INTR_EN" from="1" to="1" access="RW" resetVal="" desc="Enables interrupt for EP2." hidden="false" />
      <field name="EP3_INTR_EN" from="2" to="2" access="RW" resetVal="" desc="Enables interrupt for EP3." hidden="false" />
      <field name="EP4_INTR_EN" from="3" to="3" access="RW" resetVal="" desc="Enables interrupt for EP4." hidden="false" />
      <field name="EP5_INTR_EN" from="4" to="4" access="RW" resetVal="" desc="Enables interrupt for EP5." hidden="false" />
      <field name="EP6_INTR_EN" from="5" to="5" access="RW" resetVal="" desc="Enables interrupt for EP6." hidden="false" />
      <field name="EP7_INTR_EN" from="6" to="6" access="RW" resetVal="" desc="Enables interrupt for EP7." hidden="false" />
      <field name="EP8_INTR_EN" from="7" to="7" access="RW" resetVal="" desc="Enables interrupt for EP8." hidden="false" />
    </register>
    <register name="SIE_EP_INT_SR" address="0x402C002C" bitWidth="32" desc="SIE Data Endpoint Interrupt Status Register" hidden="false">
      <field name="EP1_INTR" from="0" to="0" access="RW" resetVal="" desc="Interrupt status for EP1." hidden="false" />
      <field name="EP2_INTR" from="1" to="1" access="RW" resetVal="" desc="Interrupt status for EP2." hidden="false" />
      <field name="EP3_INTR" from="2" to="2" access="RW" resetVal="" desc="Interrupt status for EP3." hidden="false" />
      <field name="EP4_INTR" from="3" to="3" access="RW" resetVal="" desc="Interrupt status for EP4." hidden="false" />
      <field name="EP5_INTR" from="4" to="4" access="RW" resetVal="" desc="Interrupt status for EP5." hidden="false" />
      <field name="EP6_INTR" from="5" to="5" access="RW" resetVal="" desc="Interrupt status for EP6." hidden="false" />
      <field name="EP7_INTR" from="6" to="6" access="RW" resetVal="" desc="Interrupt status for EP7." hidden="false" />
      <field name="EP8_INTR" from="7" to="7" access="RW" resetVal="" desc="Interrupt status for EP8." hidden="false" />
    </register>
    <register name="SIE_EP1_CNT0" address="0x402C0030" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="false">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP1_CNT1" address="0x402C0034" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="false">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP1_CR0" address="0x402C0038" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="false">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="USBIO_CR0" address="0x402C0040" bitWidth="32" desc="USBIO Control 0 Register" hidden="false">
      <field name="RD" from="0" to="0" access="R" resetVal="" desc="Received Data. This read only bit gives the state of the USB differential receiver." hidden="false">
        <value name="DIFF_LOW" value="0" desc="D+ less than D- (K state), or D+=D-=0 (SE0)." />
        <value name="DIFF_HIGH" value="1" desc="D+ greater than D- (J state)." />
      </field>
      <field name="TD" from="5" to="5" access="RW" resetVal="" desc="Transmit Data. Transmit a USB J or K state on the USB bus. No effect if TEN=0 or TSE0=1." hidden="false">
        <value name="DIFF_K" value="0" desc="Force USB K state (D+ is low D- is high)." />
        <value name="DIFF_J" value="1" desc="Force USB J state (D+ is high D- is low)." />
      </field>
      <field name="TSE0" from="6" to="6" access="RW" resetVal="" desc="Transmit Single-Ended Zero. SE0: both D+ and D- low. No effect if TEN=0." hidden="false" />
      <field name="TEN" from="7" to="7" access="RW" resetVal="" desc="USB Transmit Enable. This is used to manually transmit on the D+ and D- pins. Normally this bit should be cleared to allow the internal SIE to drive the pins. The most common reason for manually transmitting is to force a resume state on the bus." hidden="false" />
    </register>
    <register name="USBIO_CR1" address="0x402C0048" bitWidth="32" desc="USBIO Control 1 Register" hidden="false">
      <field name="DMO" from="0" to="0" access="R" resetVal="" desc="This read only bit gives the state of the D- pin." hidden="false" />
      <field name="DPO" from="1" to="1" access="R" resetVal="" desc="This read only bit gives the state of the D+ pin." hidden="false" />
      <field name="USBPUEN" from="2" to="2" access="RW" resetVal="" desc="This bit enables the connection of the internal 1.5 k pull up resistor on the D+ pin." hidden="false" />
      <field name="IOMODE" from="5" to="5" access="RW" resetVal="" desc="This bit allows the D+ and D- pins to be configured for either USB mode or bit-banged modes. If this bit is set the DMI and DPI bits are used to drive the D- and D+ pins." hidden="false">
        <value name="Bit-banged" value="0" desc="Bit-banged mode for Dm and Dp." />
        <value name="USB" value="1" desc="USB block controls Dm and Dp." />
      </field>
    </register>
    <register name="DYN_RECONFIG" address="0x402C0050" bitWidth="32" desc="USB Dynamic reconfiguration Register" hidden="true">
      <field name="DYN_CONFIG_EN" from="0" to="0" access="RW" resetVal="" desc="This bit is used to enable the dynamic re-configuration for the selected EP. If set to 1, indicates the reconfiguration required for selected EP. Use 0 for EP1, 1 for EP2, etc." hidden="false" />
      <field name="DYN_RECONFIG_EPNO" from="3" to="1" access="RW" resetVal="" desc="These bits indicates the EP number for which reconfiguration is required when dyn_config_en bit is set to 1." hidden="false" />
      <field name="DYN_RECONFIG_RDY_STS" from="4" to="4" access="R" resetVal="" desc="This bit indicates the ready status for the dynamic reconfiguration, when set to 1, indicates the block is ready for reconfiguration." hidden="false" />
    </register>
    <register name="SIE_EP2_CNT0" address="0x402C0070" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="false">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP2_CNT1" address="0x402C0074" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="false">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP2_CR0" address="0x402C0078" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="false">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="EP0_CR" address="0x402C00A0" bitWidth="32" desc="Endpoint0 control Register" hidden="false">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="EP0_CNT" address="0x402C00A4" bitWidth="32" desc="Endpoint0 control Register" hidden="false">
      <field name="BYTE_COUNT" from="3" to="0" access="RW" resetVal="" desc="These bits indicate the number of data bytes in a transaction. For IN transactions firmware loads the count with the number of bytes to be transmitted to the host from the endpoint FIFO. Valid values are 0 to 8. For OUT or SETUP transactions the count is updated by hardware to the number of data bytes received plus two for the CRC bytes. Valid values are 2 to 10." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="This bit is used for OUT/SETUP transactions only and is read only. It is cleared to '0' if CRC bit stuffing errors or PID errors occur. This bit does not update for some endpoint mode settings." hidden="false">
        <value name="DATA_ERROR" value="0" desc="No ACK'd transactions since bit was last cleared." />
        <value name="DATA_VALID" value="1" desc="Indicates a transaction ended with an ACK." />
      </field>
      <field name="DATA_TOGGLE" from="5" to="5" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP3_CNT0" address="0x402C00B0" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="false">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP3_CNT1" address="0x402C00B4" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="false">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP3_CR0" address="0x402C00B8" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="false">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="SIE_EP4_CNT0" address="0x402C00F0" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="true">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP4_CNT1" address="0x402C00F4" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="true">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP4_CR0" address="0x402C00F8" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="true">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="SIE_EP5_CNT0" address="0x402C0130" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="true">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP5_CNT1" address="0x402C0134" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="true">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP5_CR0" address="0x402C0138" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="true">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="SIE_EP6_CNT0" address="0x402C0170" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="true">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP6_CNT1" address="0x402C0174" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="true">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP6_CR0" address="0x402C0178" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="true">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="SIE_EP7_CNT0" address="0x402C01B0" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="true">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP7_CNT1" address="0x402C01B4" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="true">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP7_CR0" address="0x402C01B8" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="true">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="SIE_EP8_CNT0" address="0x402C01F0" bitWidth="32" desc="SIE Endpoint 1 Count0 Register" hidden="true">
      <field name="DATA_COUNT_MSB" from="2" to="0" access="RW" resetVal="" desc="These bits are the 3 MSb bits of an 11-bit counter. The LSb are the Data Count[7:0] bits of the CNT1 register. Refer to the CNT1 register for more information." hidden="false" />
      <field name="DATA_VALID" from="4" to="4" access="RW" resetVal="" desc="DATA_ERROR - 0, DATA_VALID - 1." hidden="false" />
      <field name="DATA_TOGGLE" from="7" to="7" access="RW" resetVal="" desc="This bit selects the DATA packet's toggle state. For IN transactions firmware must set this bit to the expected state. For OUT transactions the hardware sets this bit to the state of the received Data Toggle bit." hidden="false" />
    </register>
    <register name="SIE_EP8_CNT1" address="0x402C01F4" bitWidth="32" desc="SIE Endpoint 1 Count1 Register" hidden="true">
      <field name="DATA_COUNT" from="7" to="0" access="RW" resetVal="" desc="These bits are the 8 LSb of a 11-bit counter.  The 3 MSb bits are in the CNT0 register. The 11-bit count indicates the number of data bytes in a transaction." hidden="false" />
    </register>
    <register name="SIE_EP8_CR0" address="0x402C01F8" bitWidth="32" desc="SIE Endpoint 1 Control Register" hidden="true">
      <field name="MODE" from="3" to="0" access="RW" resetVal="" desc="The mode controls how the USB SIE responds to traffic and how the USB SIE changes the mode of that endpoint as a result of host packets to the endpoint." hidden="false">
        <value name="DISABLE" value="0000" desc="Ignore all USB traffic to this endpoint." />
        <value name="NAK_INOUT" value="0001" desc="SETUP: Accept, IN: NAK, OUT: NAK." />
        <value name="STATUS_OUT_ONLY" value="0010" desc="SETUP: Accept, IN: STALL, OUT: ACK 0B tokens, NAK others." />
        <value name="STALL_INOUT" value="0011" desc="SETUP: Accept, IN: STALL, OUT: STALL." />
        <value name="ISO_OUT" value="0101" desc="SETUP: Ignore, IN: Ignore, OUT: Accept Isochronous OUT token." />
        <value name="STATUS_IN_ONLY" value="0110" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Stall." />
        <value name="ISO_IN" value="0111" desc="SETUP: Ignore, IN: Accept Isochronous IN token, OUT: Ignore." />
        <value name="NAK_OUT" value="1000" desc="SETUP: Ignore, IN: Ignore, OUT: NAK." />
        <value name="ACK_OUT" value="1001" desc="SETUP: Ignore, IN: Ignore, OUT: Accept data and ACK if STALL = 0, STALL otherwise. Change to MODE=8 after one succesfull OUT token." />
        <value name="ACK_OUT_STATUS_IN" value="1011" desc="SETUP: Accept, IN: Respond with 0B data, OUT:  Accept data." />
        <value name="NAK_IN" value="1100" desc="SETUP: Ignore, IN: NAK, OUT: Ignore." />
        <value name="ACK_IN" value="1101" desc="SETUP: Ignore, IN: Respond to IN with data if STALL=0, STALL otherwise, OUT: Ignore" />
        <value name="ACK_IN STATUS OUT" value="1111" desc="SETUP: Accept, IN: Respond to IN with data, OUT: ACK 0B tokens, NAK others." />
      </field>
      <field name="ACKED_TXN" from="4" to="4" access="RW" resetVal="" desc="ACKED_NO - 0, ACKED_YES - 1." hidden="false" />
      <field name="NAK_INT_EN" from="5" to="5" access="RW" resetVal="" desc="When set this bit causes an endpoint interrupt to be generated even when a transfer completes with a NAK." hidden="false" />
      <field name="ERR_IN_TXN" from="6" to="6" access="RW" resetVal="" desc="The Error in transaction bit is set whenever an error is detected." hidden="false" />
      <field name="STALL" from="7" to="7" access="RW" resetVal="" desc="When this bit is set the SIE stalls an OUT packet if the Mode bits are set to ACK-OUT. The SIE stalls an IN packet if the mode bits are set to ACK-IN. This bit must be clear for all other modes." hidden="false" />
    </register>
    <register name="ARB_EP1_CFG" address="0x402C0200" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="false">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP1_INT_EN" address="0x402C0204" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP1_INT_SR" address="0x402C0208" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW1_WA" address="0x402C0210" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="false">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW1_WA_MSB" address="0x402C0214" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="false">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW1_RA" address="0x402C0218" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="false">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW1_RA_MSB" address="0x402C021C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="false">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="BUF_SIZE" address="0x402C0230" bitWidth="32" desc="Dedicated Endpoint Buffer Size Register" hidden="true">
      <field name="IN_BUF" from="3" to="0" access="RW" resetVal="" desc="Buffer size for IN Endpoints:  1 - 2 bytes, 2 - 4 bytes; 9 - 512 bytes." hidden="false" />
      <field name="OUT_BUF" from="7" to="4" access="RW" resetVal="" desc="Buffer size for OUT Endpoints: 1 - 2 bytes, 2 - 4 bytes; 9 - 512 bytes." hidden="false" />
    </register>
    <register name="EP_ACTIVE" address="0x402C0238" bitWidth="32" desc="Endpoint Active Indication Register" hidden="true">
      <field name="EP1_ACT" from="0" to="0" access="R" resetVal="" desc="Indicates that EP1 is currently active" hidden="false" />
      <field name="EP2_ACT" from="1" to="1" access="R" resetVal="" desc="Indicates that EP2 is currently active" hidden="false" />
      <field name="EP3_ACT" from="2" to="2" access="R" resetVal="" desc="Indicates that EP3 is currently active" hidden="false" />
      <field name="EP4_ACT" from="3" to="3" access="R" resetVal="" desc="Indicates that EP4 is currently active" hidden="false" />
      <field name="EP5_ACT" from="4" to="4" access="R" resetVal="" desc="Indicates that EP5 is currently active" hidden="false" />
      <field name="EP6_ACT" from="5" to="5" access="R" resetVal="" desc="Indicates that EP6 is currently active6" hidden="false" />
      <field name="EP7_ACT" from="6" to="6" access="R" resetVal="" desc="Indicates that EP7 is currently active" hidden="false" />
      <field name="EP8_ACT" from="7" to="7" access="R" resetVal="" desc="Indicates that EP8 is currently active" hidden="false" />
    </register>
    <register name="EP_TYPE" address="0x402C023C" bitWidth="32" desc="Endpoint Type (IN/OUT) Indication" hidden="true">
      <field name="EP1_TYP" from="0" to="0" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP2_TYP" from="1" to="1" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP3_TYP" from="2" to="2" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP4_TYP" from="3" to="3" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP5_TYP" from="4" to="4" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP6_TYP" from="5" to="5" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP7_TYP" from="6" to="6" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
      <field name="EP8_TYP" from="7" to="7" access="RW" resetVal="" desc="Endpoint Type Indication." hidden="false">
        <value name="EP_IN" value="0" desc="IN outpoint." />
        <value name="EP_OUT" value="1" desc="OUT outpoint." />
      </field>
    </register>
    <register name="ARB_EP2_CFG" address="0x402C0240" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="false">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP2_INT_EN" address="0x402C0244" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP2_INT_SR" address="0x402C0248" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW2_WA" address="0x402C0250" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="false">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW2_WA_MSB" address="0x402C0254" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="false">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW2_RA" address="0x402C0258" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="false">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW2_RA_MSB" address="0x402C025C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="false">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_CFG" address="0x402C0270" bitWidth="32" desc="Arbiter configuration register" hidden="false">
      <field name="AUTO_MEM" from="4" to="4" access="RW" resetVal="" desc="Enables Auto Memory Configuration.  Manual memory configuration by default." hidden="false" />
      <field name="DMA_CFG" from="6" to="5" access="RW" resetVal="" desc="DMA Access Configuration." hidden="false">
        <value name="DMA_NONE" value="00" desc="No DMA." />
        <value name="DMA_MANUAL" value="01" desc="Manual DMA." />
        <value name="DMA_AUTO" value="10" desc="Auto DMA." />
      </field>
      <field name="CFG_CMP" from="7" to="7" access="RW" resetVal="" desc="Register Configuration Complete Indication. Posedge is detected on this bit. Hence a 0 to 1 transition is required." hidden="false" />
    </register>
    <register name="USB_CLK_EN" address="0x402C0274" bitWidth="32" desc="USB Control 0 Register" hidden="false">
      <field name="CSR_CLK_EN" from="7" to="7" access="RW" resetVal="" desc="Clock Enable for Core Logic clocked by AHB bus clock." hidden="false">
        <value name="Disabled" value="0" desc="Disables clock to UBS block." />
        <value name="Enabled" value="1" desc="Enables clock to UBS block." />
      </field>
    </register>
    <register name="ARB_INT_EN" address="0x402C0278" bitWidth="32" desc="Arbiter Interrupt Enable Register" hidden="false">
      <field name="EP1_INTR_EN" from="0" to="0" access="RW" resetVal="" desc="Enables interrupt for EP1." hidden="false" />
      <field name="EP2_INTR_EN" from="1" to="1" access="RW" resetVal="" desc="Enables interrupt for EP2." hidden="false" />
      <field name="EP3_INTR_EN" from="2" to="2" access="RW" resetVal="" desc="Enables interrupt for EP3." hidden="false" />
      <field name="EP4_INTR_EN" from="3" to="3" access="RW" resetVal="" desc="Enables interrupt for EP4." hidden="false" />
      <field name="EP5_INTR_EN" from="4" to="4" access="RW" resetVal="" desc="Enables interrupt for EP5." hidden="false" />
      <field name="EP6_INTR_EN" from="5" to="5" access="RW" resetVal="" desc="Enables interrupt for EP6." hidden="false" />
      <field name="EP7_INTR_EN" from="6" to="6" access="RW" resetVal="" desc="Enables interrupt for EP7." hidden="false" />
      <field name="EP8_INTR_EN" from="7" to="7" access="RW" resetVal="" desc="Enables interrupt for EP8." hidden="false" />
    </register>
    <register name="ARB_INT_SR" address="0x402C027C" bitWidth="32" desc="Arbiter Interrupt Status" hidden="false">
      <field name="EP1_INTR" from="0" to="0" access="R" resetVal="" desc="Interrupt status for EP1." hidden="false" />
      <field name="EP2_INTR" from="1" to="1" access="R" resetVal="" desc="Interrupt status for EP2." hidden="false" />
      <field name="EP3_INTR" from="2" to="2" access="R" resetVal="" desc="Interrupt status for EP3." hidden="false" />
      <field name="EP4_INTR" from="3" to="3" access="R" resetVal="" desc="Interrupt status for EP4." hidden="false" />
      <field name="EP5_INTR" from="4" to="4" access="R" resetVal="" desc="Interrupt status for EP5." hidden="false" />
      <field name="EP6_INTR" from="5" to="5" access="R" resetVal="" desc="Interrupt status for EP6." hidden="false" />
      <field name="EP7_INTR" from="6" to="6" access="R" resetVal="" desc="Interrupt status for EP7." hidden="false" />
      <field name="EP8_INTR" from="7" to="7" access="R" resetVal="" desc="Interrupt status for EP8." hidden="false" />
    </register>
    <register name="ARB_EP3_CFG" address="0x402C0280" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="false">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP3_INT_EN" address="0x402C0284" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP3_INT_SR" address="0x402C0288" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="false">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW3_WA" address="0x402C0290" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="false">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW3_WA_MSB" address="0x402C0294" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="false">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW3_RA" address="0x402C0298" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="false">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW3_RA_MSB" address="0x402C029C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="false">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="CWA" address="0x402C02B0" bitWidth="32" desc="Common Area Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for Common Area." hidden="false" />
    </register>
    <register name="CWA_MSB" address="0x402C02B4" bitWidth="32" desc="Common Area Write Address LSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for Common Area MSB." hidden="false" />
    </register>
    <register name="ARB_EP4_CFG" address="0x402C02C0" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="true">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP4_INT_EN" address="0x402C02C4" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP4_INT_SR" address="0x402C02C8" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW4_WA" address="0x402C02D0" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW4_WA_MSB" address="0x402C02D4" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW4_RA" address="0x402C02D8" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="true">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW4_RA_MSB" address="0x402C02DC" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="true">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="DMA_THRES" address="0x402C02F0" bitWidth="32" desc="DMA Burst / Threshold Configuration LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="DMA Threshold count." hidden="false" />
    </register>
    <register name="DMA_THRES_MSB" address="0x402C02F4" bitWidth="32" desc="DMA Burst / Threshold Configuration LSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="DMA Threshold count MSB." hidden="false" />
    </register>
    <register name="ARB_EP5_CFG" address="0x402C0300" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="true">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP5_INT_EN" address="0x402C0304" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP5_INT_SR" address="0x402C0308" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW5_WA" address="0x402C0310" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW5_WA_MSB" address="0x402C0314" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW5_RA" address="0x402C0318" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="true">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW5_RA_MSB" address="0x402C031C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="true">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="BUS_RST_CNT" address="0x402C0330" bitWidth="32" desc="Bus Reset Count Register" hidden="true">
      <field name="BUS_RST_CNT" from="3" to="0" access="RW" resetVal="" desc="Bus Reset Count Length. Bus Reset Count register ; For USB bus reset length; The value in this register determines the no. of pulses of the low freq. clock which will be counted to determine if an SE0 condition has been held for long enough to declare a USB Bus reset condition. In krypton, 3 pulses of a 32 KHz clock were counted to declare a usb bus reset condition. In leopard, a 100 KHz clock is used. Recommended is to count 10 pulses of this clock to remain equivalent to Krypton." hidden="false" />
    </register>
    <register name="ARB_EP6_CFG" address="0x402C0340" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="true">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP6_INT_EN" address="0x402C0344" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP6_INT_SR" address="0x402C0348" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW6_WA" address="0x402C0350" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW6_WA_MSB" address="0x402C0354" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW6_RA" address="0x402C0358" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="true">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW6_RA_MSB" address="0x402C035C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="true">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_EP7_CFG" address="0x402C0380" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="true">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP7_INT_EN" address="0x402C0384" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP7_INT_SR" address="0x402C0388" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW7_WA" address="0x402C0390" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW7_WA_MSB" address="0x402C0394" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW7_RA" address="0x402C0398" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="true">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW7_RA_MSB" address="0x402C039C" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="true">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_EP8_CFG" address="0x402C03C0" bitWidth="32" desc="Arbiter Endpoint 1 Configuration Register" hidden="true">
      <field name="IN_DATA_RDY" from="0" to="0" access="RW" resetVal="" desc="Indication that Endpoint Packet Data is Ready in Main memory" hidden="false" />
      <field name="DMA_REQ" from="1" to="1" access="RW" resetVal="" desc="Manual DMA Request for a particular (1 to 8) endpoint; changing this field from 0 to 1 causes a DMA request to be generated." hidden="false" />
      <field name="CRC_BYPASS" from="2" to="2" access="RW" resetVal="" desc="CRC_NORMAL - 0, CRC_BYPASS - 1" hidden="false" />
      <field name="RESET_PTR" from="3" to="3" access="RW" resetVal="" desc="RESET_KRYPTON - 0, RESET_NORMAL - 1" hidden="false" />
    </register>
    <register name="ARB_EP8_INT_EN" address="0x402C03C4" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Enable Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_EP8_INT_SR" address="0x402C03C8" bitWidth="32" desc="Arbiter Endpoint 1 Interrupt Status Register" hidden="true">
      <field name="IN_BUF_FULL_EN" from="0" to="0" access="RW" resetVal="" desc="IN Endpoint Local Buffer Full" hidden="false" />
      <field name="DMA_GNT_EN" from="1" to="1" access="RW" resetVal="" desc="Endpoint DMA Grant" hidden="false" />
      <field name="BUF_OVER_EN" from="2" to="2" access="RW" resetVal="" desc="Endpoint Buffer Overflow" hidden="false" />
      <field name="BUF_UNDER_EN" from="3" to="3" access="RW" resetVal="" desc="Endpoint Buffer Underflow" hidden="false" />
      <field name="ERR_INT_EN" from="4" to="4" access="RW" resetVal="" desc="Endpoint Error in Transaction Interrupt" hidden="false" />
      <field name="DMA_TERMIN_EN" from="5" to="5" access="RW" resetVal="" desc="Endpoint DMA Terminated Enable" hidden="false" />
    </register>
    <register name="ARB_RW8_WA" address="0x402C03D0" bitWidth="32" desc="Arbiter Endpoint 1 Write Address LSB Register" hidden="true">
      <field name="WA8" from="7" to="0" access="RW" resetVal="" desc="Write Address for EP." hidden="false" />
    </register>
    <register name="ARB_RW8_WA_MSB" address="0x402C03D4" bitWidth="32" desc="Arbiter Endpoint 1 Write Address MSB Register" hidden="true">
      <field name="WA9" from="0" to="0" access="RW" resetVal="" desc="Write Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW8_RA" address="0x402C03D8" bitWidth="32" desc="Arbiter Endpoint 1 Read Address LSB Register" hidden="true">
      <field name="RA8" from="7" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="ARB_RW8_RA_MSB" address="0x402C03DC" bitWidth="32" desc="Arbiter Endpoint 1 Read Address MSB Register" hidden="true">
      <field name="RA9" from="0" to="0" access="RW" resetVal="" desc="Read Address for EP MSB." hidden="false" />
    </register>
    <register name="POWER_CTRL" address="0x402C2000" bitWidth="32" desc="Power Control Register" hidden="false">
      <field name="VBUS_VALID_OVR" from="1" to="0" access="RW" resetVal="" desc="Overrides the value received from the GPIO input buffer connected to VBUS" hidden="false">
        <value name="FORCE_VALID_0" value="00" desc="Force vbus_valid = 0." />
        <value name="FORCE_VALID_1" value="01" desc="Force vbus_valid = 1." />
        <value name="GPIO_VALID" value="10" desc="Use vbus_valid signal from GPIO input." />
        <value name="PHY_VALID" value="11" desc="Use vbus_valid signal from PHY detector." />
      </field>
      <field name="SUSPEND" from="2" to="2" access="RW" resetVal="" desc="Put PHY into Suspend mode. If the PHY is enabled, this bit MUST be set before entering a low power mode (DeepSleep/Hibernate)." hidden="false" />
      <field name="SUSPEND_DEL" from="3" to="3" access="RW" resetVal="" desc="Delayed version of SUSPEND. Always set SUSPEND and SUSPEND_DEL together in a single register write.  When taking PHY out of suspend mode, first clear SUSPEND, then clear SUSPEND_DEL at least 2us later." hidden="false" />
      <field name="ISOLATE" from="4" to="4" access="RW" resetVal="" desc="Isolates the PHY outputs. Clear this bit at least 2us after vbus is known to be valid (vbus_valid=1). Isolation will be forced when vbus_valid goes low (see VBUS_VALID_OVR)." hidden="false" />
      <field name="CHDET_PWR_CTL" from="6" to="5" access="RW" resetVal="" desc="Power programmability for bandgap voltage buffer in the charger detect block.  See s8bg_vrefbuf public cell for more information. Default '0' is low power mode." hidden="false" />
      <field name="ENABLE_DM_PULLDOWN" from="26" to="26" access="RW" resetVal="" desc="Enables the ~15k pull down on the DM, default off. The 15k pull down is needed for Data Contact Detection (DCD)." hidden="false" />
      <field name="ENABLE_VBUS_PULLDOWN" from="26" to="26" access="RW" resetVal="" desc="Enables the weak pull down on the VBUS, default on, to prevent floating node crow bar currents." hidden="false" />
      <field name="ENABLE_RCVR" from="27" to="27" access="RW" resetVal="" desc="Enables the differential USB receiver." hidden="false" />
      <field name="ENABLE_DPO" from="28" to="28" access="RW" resetVal="" desc="Enables the single ended receiver on D+." hidden="false" />
      <field name="ENABLE_DMO" from="29" to="29" access="RW" resetVal="" desc="Enables the signle ended receiver on D-." hidden="false" />
      <field name="ENABLE_CHGDET" from="30" to="30" access="RW" resetVal="" desc="Enables the charger detection circuitry.  After USB has connected, this circuitry can be disabled to save power." hidden="false" />
      <field name="ENABLE" from="31" to="31" access="RW" resetVal="" desc="Mast enable of PHY and Charger Detector.  Nothing will work until this bit is set." hidden="false" />
    </register>
    <register name="CHGDET_CTRL" address="0x402C2004" bitWidth="32" desc="Charger Detection Control Register" hidden="false">
      <field name="COMP_DP" from="0" to="0" access="RW" resetVal="" desc="Connect the primary/secondary detection comparator and current sink  to D+." hidden="false" />
      <field name="COMP_DM" from="1" to="1" access="RW" resetVal="" desc="Connect the primary/secondary detection comparator and current sink to D-." hidden="false" />
      <field name="COMP_EN" from="2" to="2" access="RW" resetVal="" desc="Enable the primary/secondary detection comparator and current sink. This bit can be written concurrently with COMP_DP/COMP_DM.  Note that REF_EN must also be 1 for the comparator to work (because it receives a reference from it)." hidden="false" />
      <field name="REF_DP" from="3" to="3" access="RW" resetVal="" desc="Connect the primary/secondary detection reference driver to D+." hidden="false" />
      <field name="REF_DM" from="4" to="4" access="RW" resetVal="" desc="Connect the primary/secondary detection reference driver to D-." hidden="false" />
      <field name="REF_EN" from="5" to="5" access="RW" resetVal="" desc="Enable the primary/secondary reference driver.  This bit can be written concurrently with REF_DP/REF_DM." hidden="false" />
      <field name="DCD_SRC_EN" from="6" to="6" access="RW" resetVal="" desc="Enable the Data Contact Detect current source on D+." hidden="false" />
      <field name="ADFT_CTRL" from="13" to="12" access="RW" resetVal="" desc="ADFT option to bring out buffered version of voltage reference input or adft intput to ADFT output (adft_out)." hidden="false">
        <value name="ADFT_NORMAL" value="00" desc="Normal operating mode, reference buffer used to generate internal references.  adft_out pulled low." />
        <value name="ADFT_VBG" value="01" desc="Use reference buffer to bring out voltage reference input (vbg) onto adft_out." />
        <value name="ADFT_DONTUSE" value="10" desc="Illegal - do not use." />
        <value name="ADFT_ADFTIN" value="11" desc="Use reference buffer to bring out buffered version of system level adft input (adft_in) onto adft_out." />
      </field>
      <field name="COMP_OUT" from="31" to="31" access="RW" resetVal="" desc="Output of the primary/secondary detection comparator.  This output is not filtered or debounced and must be polled in software." hidden="false" />
    </register>
    <register name="LPM_CTRL" address="0x402C2010" bitWidth="32" desc="LPM Control Register" hidden="false">
      <field name="LPM_EN" from="0" to="0" access="RW" resetVal="" desc="LPM enable." hidden="false">
        <value name="Disable" value="0" desc="LPM token will not get a response (backward compatibility mode)." />
        <value name="Enable" value="1" desc="LPM token will get a handshake response (ACK, STALL, NYET or NAK). A STALL will be sent if the bLinkState is not 0001b. A NYET, NAK or ACK response will be sent depending on the NYET_EN and LPM_ACK_RESP bits below." />
      </field>
      <field name="LPM_ACK_RESP" from="1" to="1" access="RW" resetVal="" desc="LPM ACK response enable (if LPM_EN=1), to allow firmware to refuse a low power request." hidden="false">
        <value name="NYET_NACK" value="0" desc="A LPM token will get a NYET or NAK (depending on NYET_EN bit below) response and the device will NOT go to a low power mode." />
        <value name="ACK" value="1" desc="A LPM token will get an ACK response and the device will go to the requested low power mode." />
      </field>
      <field name="NYET_EN" from="2" to="2" access="RW" resetVal="" desc="Allow firmware to choose which response to use for an LPM token (LPM_EN=1) when the device is NOT ready to go to the requested low power mode (LPM_ACK_RESP=0)." hidden="false">
        <value name="NYET" value="0" desc="A LPM token will get an NAK response (indicating a CRC error),  the host is expected to repeat the LPM token." />
        <value name="NACK" value="1" desc="A LPM token will get a NYET response." />
      </field>
      <field name="SUB_RESP" from="4" to="4" access="RW" resetVal="" desc="Enable a STALL response for all undefined SubPIDs, i.e. other than LPM (0011b). If not enabled then there will be no response (Error) for the undefined SubPIDs." hidden="false" />
    </register>
    <register name="LPM_STAT" address="0x402C2014" bitWidth="32" desc="LPM Status register" hidden="false">
      <field name="LPM_BESL" from="3" to="0" access="RW" resetVal="" desc="Best Effort Service Latency. This value should match either the Baseline (DeepSleep) or Deep (Hibernate) BESL in the BOS descriptor." hidden="false" />
      <field name="LPM_REMOTEWAKE" from="4" to="4" access="RW" resetVal="" desc="LPM ACK response enable (if LPM_EN=1), to allow firmware to refuse a low power request." hidden="false">
        <value name="Prohibited" value="0" desc="Device is prohibited from initiating a remote wake." />
        <value name="Allowed" value="1" desc="Device is allow to wake the host." />
      </field>
    </register>
    <register name="`INTR_SIE" address="0x402C2020" bitWidth="32" desc="USB SOF, BUS RESET and EP0 Interrupt Status" hidden="false">
      <field name="SOF_INTR" from="0" to="0" access="RW" resetVal="" desc="USB SOF Interrupt." hidden="false" />
      <field name="BUS_RESET_INTR" from="1" to="1" access="RW" resetVal="" desc="BUS RESET Interrupt." hidden="false" />
      <field name="EP0_INTR" from="2" to="2" access="RW" resetVal="" desc="EP0 Interrupt." hidden="false" />
      <field name="LPM_INTR" from="3" to="3" access="RW" resetVal="" desc="LPM Interrupt." hidden="false" />
      <field name="RESUME_INTR" from="4" to="4" access="RW" resetVal="" desc="Resume Interrupt." hidden="false" />
    </register>
    <register name="INTR_SIE_MASK" address="0x402C2028" bitWidth="32" desc="USB SOF, BUS RESET and EP0 Interrupt Mask" hidden="false">
      <field name="SOF_INTR" from="0" to="0" access="RW" resetVal="" desc="USB SOF Interrupt." hidden="false" />
      <field name="BUS_RESET_INTR" from="1" to="1" access="RW" resetVal="" desc="BUS RESET Interrupt." hidden="false" />
      <field name="EP0_INTR" from="2" to="2" access="RW" resetVal="" desc="EP0 Interrupt." hidden="false" />
      <field name="LPM_INTR" from="3" to="3" access="RW" resetVal="" desc="LPM Interrupt." hidden="false" />
      <field name="RESUME_INTR" from="4" to="4" access="RW" resetVal="" desc="Resume Interrupt." hidden="false" />
    </register>
    <register name="INTR_LVL_SEL" address="0x402C2030" bitWidth="32" desc="Select interrupt level for each interrupt source" hidden="false">
      <field name="SOF_LVL_SEL" from="1" to="0" access="RW" resetVal="" desc="USB SOF Interrupt level select." hidden="false" />
      <field name="BUS_RESET_LVL_SEL" from="3" to="2" access="RW" resetVal="" desc="BUS RESET Interrupt level select." hidden="false" />
      <field name="EP0_LVL_SEL" from="5" to="4" access="RW" resetVal="" desc="EP0 Interrupt level select." hidden="false" />
      <field name="LPM_LVL_SEL" from="7" to="6" access="RW" resetVal="" desc="LPM Interrupt level select." hidden="false" />
      <field name="RESUME_LVL_SEL" from="9" to="8" access="RW" resetVal="" desc="Resume Interrupt level select." hidden="false" />
      <field name="ARB_EP_LVL_SEL" from="15" to="14" access="RW" resetVal="" desc="Arbiter Endpoint Interrupt level select." hidden="false" />
      <field name="EP1_LVL_SEL" from="17" to="16" access="RW" resetVal="" desc="EP1 Interrupt level select." hidden="false" />
      <field name="EP2_LVL_SEL" from="19" to="18" access="RW" resetVal="" desc="EP2 Interrupt level select." hidden="false" />
      <field name="EP3_LVL_SEL" from="21" to="20" access="RW" resetVal="" desc="EP3 Interrupt level select." hidden="false" />
      <field name="EP4_LVL_SEL" from="23" to="22" access="RW" resetVal="" desc="EP4 Interrupt level select." hidden="false" />
      <field name="EP5_LVL_SEL" from="25" to="24" access="RW" resetVal="" desc="EP5 Interrupt level select." hidden="false" />
      <field name="EP6_LVL_SEL" from="27" to="26" access="RW" resetVal="" desc="EP6 Interrupt level select." hidden="false" />
      <field name="EP7_LVL_SEL" from="29" to="28" access="RW" resetVal="" desc="EP7 Interrupt level select." hidden="false" />
      <field name="EP8_LVL_SEL" from="31" to="30" access="RW" resetVal="" desc="EP8 Interrupt level select." hidden="false" />
    </register>
    <register name="INTR_CAUSE_HIGH" address="0x402C2034" bitWidth="32" desc="High priority interrupt Cause register" hidden="false">
      <field name="SOF_INTR" from="0" to="0" access="RW" resetVal="" desc="USB SOF Interrupt." hidden="false" />
      <field name="BUS_RESET_INTR" from="1" to="1" access="RW" resetVal="" desc="BUS RESET Interrupt." hidden="false" />
      <field name="EP0_INTR" from="2" to="2" access="RW" resetVal="" desc="EP0 Interrupt." hidden="false" />
      <field name="LPM_INTR" from="3" to="3" access="RW" resetVal="" desc="LPM Interrupt." hidden="false" />
      <field name="RESUME_INTR" from="4" to="4" access="RW" resetVal="" desc="Resume Interrupt." hidden="false" />
      <field name="ARB_EP_INTR" from="7" to="7" access="RW" resetVal="" desc="Arbiter Endpoint Interrupt." hidden="false" />
      <field name="EP1_INTR" from="8" to="8" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP2_INTR" from="9" to="9" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP3_INTR" from="10" to="10" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP4_INTR" from="11" to="11" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP5_INTR" from="12" to="12" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP6_INTR" from="13" to="13" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP7_INTR" from="14" to="14" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP8_INTR" from="15" to="15" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
    </register>
    <register name="INTR_CAUSE_MED" address="0x402C2038" bitWidth="32" desc="Medium priority interrupt Cause register" hidden="false">
      <field name="SOF_INTR" from="0" to="0" access="RW" resetVal="" desc="USB SOF Interrupt." hidden="false" />
      <field name="BUS_RESET_INTR" from="1" to="1" access="RW" resetVal="" desc="BUS RESET Interrupt." hidden="false" />
      <field name="EP0_INTR" from="2" to="2" access="RW" resetVal="" desc="EP0 Interrupt." hidden="false" />
      <field name="LPM_INTR" from="3" to="3" access="RW" resetVal="" desc="LPM Interrupt." hidden="false" />
      <field name="RESUME_INTR" from="4" to="4" access="RW" resetVal="" desc="Resume Interrupt." hidden="false" />
      <field name="ARB_EP_INTR" from="7" to="7" access="RW" resetVal="" desc="Arbiter Endpoint Interrupt." hidden="false" />
      <field name="EP1_INTR" from="8" to="8" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP2_INTR" from="9" to="9" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP3_INTR" from="10" to="10" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP4_INTR" from="11" to="11" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP5_INTR" from="12" to="12" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP6_INTR" from="13" to="13" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP7_INTR" from="14" to="14" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP8_INTR" from="15" to="15" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
    </register>
    <register name="INTR_CAUSE_LO" address="0x402C203C" bitWidth="32" desc="Low priority interrupt Cause register" hidden="false">
      <field name="SOF_INTR" from="0" to="0" access="RW" resetVal="" desc="USB SOF Interrupt." hidden="false" />
      <field name="BUS_RESET_INTR" from="1" to="1" access="RW" resetVal="" desc="BUS RESET Interrupt." hidden="false" />
      <field name="EP0_INTR" from="2" to="2" access="RW" resetVal="" desc="EP0 Interrupt." hidden="false" />
      <field name="LPM_INTR" from="3" to="3" access="RW" resetVal="" desc="LPM Interrupt." hidden="false" />
      <field name="RESUME_INTR" from="4" to="4" access="RW" resetVal="" desc="Resume Interrupt." hidden="false" />
      <field name="ARB_EP_INTR" from="7" to="7" access="RW" resetVal="" desc="Arbiter Endpoint Interrupt." hidden="false" />
      <field name="EP1_INTR" from="8" to="8" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP2_INTR" from="9" to="9" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP3_INTR" from="10" to="10" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP4_INTR" from="11" to="11" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP5_INTR" from="12" to="12" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP6_INTR" from="13" to="13" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP7_INTR" from="14" to="14" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
      <field name="EP8_INTR" from="15" to="15" access="RW" resetVal="" desc="EP1 Interrupt." hidden="false" />
    </register>
  </block>
  <block name="Rx" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="CTS" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="Tx" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
</blockRegMap>