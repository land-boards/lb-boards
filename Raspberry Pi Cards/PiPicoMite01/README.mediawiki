<a href="https://www.tindie.com/products/26931/"><img src="http://land-boards.com/blwiki/images/5/51/Tindie-mediums.png" alt="Tindie Logo"></img></a> 

<img src="http://land-boards.com/blwiki/images/1/15/PiPicoMite01_Rev2_P18315-720px.jpg"></img>

<h2>Features</h2>
<ul>
<li>Raspberry Pi Pico</li>
<ul>
<li>All Pico pins brought to headers</li>
<li>Pico pin marking on rear</li>
</ul>
<li>VGA</li>
<ul>
<li><a href="http://www.tinyvga.com/vga-timing/640x480@60Hz 640x480]">monochrome resolution</a></li>
<li>320x240 colour resolution</li>
<li>1:2:1 - R:G:B - 16 colours</li>
</ul>
<li><a href="https://wiki.osdev.org/PS/2_Keyboard">PS/2 Keyboard</a></li>
<ul>
<li>5V to keyboard with voltage translator</li>
<li>Does not require a keyboard that runs at 3.3V</li>
</ul>
<li>SD Card</li>
<ul>
<li>Full size card</li>
<li>Up to 32GB</li>
<li>FAT32 format</li>
<li><a href="https://www.amazon.com/SanDisk-3-Pack-Ultra-Memory-3x32GB/dp/B08GY9575R/ref=sr_1_3?keywords=sandisk%2B32gb%2Bsd%2Bcard&qid=1657457739&sprefix=sandisk%2B32GB%2Caps%2C85&sr=8-3&th=1"> Tested/worked</a></li>
</ul>
<li>Stereo audio</li>
<ul>
<li>PWM with filter</li>
<li>3.5mm jack</li>
<li><a href="https://www.amazon.com/dp/B000R9AAJA?psc=1&ref=ppx_yo2ov_dt_b_product_details">Cheap speakers</a></li>
</ul>
<li>16-bit General Purpose I/O (GPIO)</li>
<ul>
<li><a href="https://ww1.microchip.com/downloads/en/devicedoc/20001952c.pdf">MCP23017 port expander</a></li>
<li>On Pico I2C1 (I2C2 from MMBASIC)</li>
<li>2x10 0.1" pitch header</li>
<li>Jumper selectable terminators</li>
</ul>
<li>I2C0 connector (Rev 2 and later)</li>
<ul>
<li>Requires external I2C terminators</li>
</ul>
<li>Power options</li>
<ul>
<li>5V power input</li>
<ul>
<li>USB Micro on Pico card</li>
<li>USB B</li>
<li>0.1" pitch header</li>
</ul>
<li>3.3V output header</li>
</ul>
<li>120mmx70mm outline</li>
<li>(4) 6-32 Mounting holes</li>
</ul>

<h3>BASIC Interpreter</h3>

The <a href="https://geoffg.net/picomitevga.html">PicoMiteVGA</a> boots straight into the MMBasic prompt. At which point you can enter, edit and save the program, test BASIC commands and run the program.

MMBasic is a Microsoft BASIC compatible implementation of the BASIC language, originally written by Geoff Graham and enhanced and ported to the Pico by Peter Mather, who also designed the original PicoMite on which this design is based. It is full featured with floating point, 64-bit integers and string variables, long variable names, arrays of floats, integers or strings with multiple dimensions, extensive string handling and user defined subroutines and functions. Typically it will execute a program up to 100,000 lines per second. Embedded compiled C programs can be used for even higher performance.

Using MMBasic you can use communications protocols such as I2C or SPI to get data from a variety of sensors. You can save data to an SD card, measure voltages, detect digital inputs and drive output pins to turn on lights, relays, etc.

The emphasis with MMBasic is on ease of use and development. The development cycle is very fast with the ability to instantly switch from edit to run. Errors are listed in plain English and when an error does occur a single keystroke will invoke the built in editor with the cursor positioned on the line that caused the error.
<h4>MMBASIC Credi</h4>
Peter Mather led the project, ported the MMBasic interpreter to the Raspberry Pi Pico and wrote the hardware device drivers. Geoff Graham wrote the MMBasic interpreter and the manual.  Mick Ames wrote the PIO compiler and its corresponding documentation. The VGA driver code was derived from work by Miroslav Nemecek.
